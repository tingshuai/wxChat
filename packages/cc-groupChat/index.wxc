<template>
    <scroll-view class="content" scroll-y="true" bindscroll="scrllView" id="viewport" style="height: {{ scrollHeight }}px;padding: 0;overflow:hidden;" scroll-into-view="{{ toView }}" upper-threshold="0" bindscrolltoupper="bindscrolltoupper" scroll-top="{{ scrollTop }}"><!-- bindscrolltoupper="bindscrolltoupper"，，，，catch:touchstart="loadTouchstart" catch:touchend="loadTouchend" catch:touchmove="loadTouchmove"-->
        <checkbox-group bindchange="checkboxChange" class="checkboxGroup">
          <view hover-class="touchui-hover" class="talkItem {{ userMsg.openId == item.fromUser ? 'itemRight' : 'itemLeft' }}" data-item="{{ item }}" wx:for="{{ chatData }}" wx:key="index" id="the{{index}}">
                <view class="historyLine" wx:if="{{ (item.cmd == 'time' || item.cmd == '2') && item.content }}">{{ item.content }}</view>
                <view class="head" width="60" wx:if="{{ (item.cmd == 0 || item.cmd == 100) && (userMsg.openId != item.fromUser) && item.cmd != 999 && item.cmd != 1000}}"><!--消息来自别人-->
                    <view class="left_icon left_icon1">
                        <image class="headImg" src="{{  item.headImgUrl }}"/>
                    </view>
                </view>
                <!-- <view class="msgTransCheckbox" wx:if="{{ item.cmd == 0 && (sendInputMsg.fromUser == item.fromUser) && transmit.isTransmit }}"><checkbox-group data-item="{{ item }}" bindchange="checkboxChange"><label><checkbox class="checkbox" value="{{item.msgId}}"/></label></checkbox-group></view>消息转发选项框...... -->
                <view class="text" wx:if="{{ item.cmd == 0 || item.cmd == 100}}">
                    <view style="width: 100%;">
                        <view height="20" wx:if="{{ sendInputMsg.fromUser != item.fromUser }}">
                            <view align="{{ sendInputMsg.fromUser == item.fromUser ? 'right' : 'left'}}">
                                <view class="userMsg"><text class="name">{{ item.fromUserName }}</text><text decode="true">&nbsp;&nbsp;</text><text class="job">{{ item.position || '' }}</text></view>
                            </view>
                        </view>
                        <!--文本类型-->
                        <text selectable='true' class="talkContent" data-index="{{ index }}" data-item="{{item}}" bind:longpress="openActionsheet" wx:if="{{ ( item.msgType == 0 && item.cmd != 100 ) || item.msgType == 7}}" style="background-color: white;">{{ item.content }} </text>
                        <!--需求类型-->
                        <view class="talkContent" data-item="{{ item }}" bind:longpress="{{ tabBar.actItem == 0 ? 'openActionsheet' : null}}" data-item="{{ item }}" data-itemcontent="{{ item.content }}" data-index="{{ index }}" catchtap="retOrConfirm" wx:if="{{ item.msgType == 20 || item.msgType == 22 || item.msgType == 21 }}" style="background-color: white;width:100%;">
                          <view style="border-bottom:1px solid rgba(0,0,0,0.1);">
                              <view style="color:{{ item.content.demandState ? '#4EBF62' : '#267AFC' }};font-size:12px;">{{ item.msgType == 20 || item.msgType == 21 ? "需求确认" : "修改需求确认" }}</view>
                          </view>
                          <view class="demandMsg">
                              <view class="demandImg">
                                <image mode="aspectFit" src="../../static/img/Group6Copy@2x.png"></image>
                              </view>
                              <view class="demandTxt">
                                <view style="white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:30px;line-height:32px;font-size:15px;">需求单{{ item.content.demandNum }}</view>
                                <!-- <view style="white-space:nowrap;height:30px;line-height:40px;" wx:if="{{ sendInputMsg.fromUser == item.content.createUser && (item.content.demandState == false) }}">发起人<text>@</text>{{ item.fromUserName }}</view> -->
                                <view style="white-space:nowrap;height:30px;line-height:28px;color:#8B969C;">确认人<text style="color: #FF9D44;">@{{ item.content.confirmUserName }}</text></view>
                              </view>
                          </view>
                          <view>
                              <view style="white-space:nowrap;font-size:12px;" wx:if="{{ item.content.demandState == true }}">确认日期{{ item.content.createAt }}</view>
                          </view>
                        </view>
                        <!--压图类型-->
                        <view class="talkContent" data-item="{{item}}" data-item="{{ item }}" data-itemcontent="{{ item.content }}" data-index="{{ index }}" catchtap="yatu" wx:if="{{ item.msgType == 40 || item.msgType == 42 || item.msgType == 41 }}" style="background-color: white;width:100%;">
                          <view style="border-bottom:1px solid rgba(0,0,0,0.1);">
                              <view style="color:{{ item.content.signStatus ? '#4EBF62' : '#267AFC' }};font-size:14px;">{{ item.msgType == 40 ? "待签收" : item.msgType == 41 ? "修改" : "已签收" }}</view>
                          </view>
                          <view class="demandMsg">
                              <view class="demandImg">
                                <image mode="aspectFit" src="../../static/img/Group6Copy10.png"></image>
                              </view>
                              <view class="demandTxt">
                                <view style="white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:30px;line-height:32px;font-size:14px;">压图{{ item.content.diagramNum }}</view>
                                <!-- <view style="white-space:nowrap;height:30px;line-height:40px;" wx:if="{{ sendInputMsg.fromUser == item.content.createUser && (item.content.demandState == false) }}">发起人<text>@</text>{{ item.fromUserName }}</view> -->
                                <view style="white-space:nowrap;height:30px;line-height:28px;color:#8B969C;">对接人<text style="color: #FF9D44;">@{{ item.content.toUserName }}</text></view>
                              </view>
                          </view>
                          <view>
                              <view style="white-space:nowrap;font-size:12px;">日期{{ item.content.createAt }}</view>
                          </view>
                        </view>
                        <!--图片类型-->
                        <view class="talkContent" wx:if="{{ item.msgType == 1 }}" style="height:100px;background-color:rgba(0,0,0,0);width:40%;">
                          <image lazy-load="true" mode="aspectFill" data-item="{{item}}" bindtap="previewImage" bind:longpress="openActionsheet" style="height:100%;width:auto" data-index="{{ index }}" src="{{ item.attachUrl }}"></image>
                          <view class="myProgress" wx:if="{{ item.progress >0 && item.progress < 100 }}" style="height:1px;width:{{ item.progress }}%;background-color: {{ item.progress == 100 && item.readCount >= 0 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view></view>
                        <!--语音类型-->
                        <view class="talkContent" wx:if="{{ item.msgType == 2 }}" style="width:{{ item.seeWord ? 'auto' : '100px' }};min-width:100px;" catchtap="playVoice" bind:longpress="openActionsheet" data-index="{{ index }}" data-item="{{item}}">
                            <image mode="aspectFit" style="height:20px;width:20px;float:{{ sendInputMsg.fromUser == item.fromUser ? 'left' : 'right'}}" src="{{ item.voiceState ? '../../static/img/voice.gif' : '../../static/img/voice2.png' }}"></image>
                            <view style="border-top:1rpx solid #ddd;padding-top:3px;margin-top:28px;font-size:26rpx;color:#666;" class="voiceContent" wx:if="{{item.content != '' && item.content != null && item.seeWord }}">{{ item.content }}</view>
                            <view style="border-top:1rpx solid #ddd;padding-top:3px;margin-top:28px;color:rgba(255,100,100,0.8);font-size:26rpx;" class="voiceContent" wx:elif="{{ item.seeWord }}"> 无可识别内容 </view>
                            <!-- <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view> -->
                        </view>
                        <!--视频类型-->
                        <view class="talkContent" wx:if="{{ item.msgType == 3 }}" style="width:90%;">
                            <video style="width:100%;height:117px;" src="{{ item.attachUrl }}" controls></video>
                            <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view>
                        </view>
                        <!--文件类型-->
                        <view class="talkContent" wx:if="{{ item.msgType == 6 }}" data-item="{{item}}" style="width:80%;" catchtap="openFile">
                          <view class="file">
                              <view span="9" data-item="{{item}}" catch:longpress="openActionsheet" data-index="{{ index }}">
                                  <view style="font-size:13px;color:#333333;width:100%;">{{ item.content }}</view>
                              </view>
                              <view span="3">
                                <text class="iconfont myWx-552cd47fba2cc" style="font-size:32px;text-align:center;"></text>
                              </view>
                          </view>
                          <view style="border-top:1xp solid blue;"></view>
                          <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view>
                        </view>
                        <!-- 评价 -->
                        <view class="talkContent" wx:if="{{ item.cmd == 100 || item.msgType == 30  }}" style="width:80%;">
                          <view space-bottom="" style="height:30px;line-height:26px;">
                              <view>
                                  <text style="font-size:14px;color:#333333;">项目办结消息提醒</text>
                              </view>
                          </view>
                          <view style="border-bottom:1px solid #EFEFEF;padding:0px 0 10px 0;">
                              <view>
                                  <!-- <text style="font-size:13px;color:#333333;text-align:right;display:block;width:100%;font-size:13px;">{{ item.fromUserName }}邀请你对本次服务进行评价。</text> -->
                                  <text style="font-size:12px;color:#5C6466;text-align:left;display:block;width:100%;font-size:13px;">尊敬的客户你好，你的项目已经完结请对我们的服务进行评价。</text>
                              </view>
                          </view>
                          <view>
                              <view class="evaluate"> 
                                  <text wx:if="{{ item.toUser == sendInputMsg.fromUser }}" style="font-size:12px;color:#2A79FB;padding:9px 0;" catchtap="evaluateMe">点击评价</text>
                                  <text wx:else style="font-size:12px;color:#bbb;padding:9px 0;" class="evaluate">点击评价</text>
                              </view>
                          </view>
                        </view>
                    </view>
                    <view class="readMe" wx:if="{{ sendInputMsg.fromUser == item.fromUser }}" style="right:{{ sendInputMsg.fromUser == item.fromUser ? '5px' : '' }}">{{ groupMsg.groupUsers.length - item.readCount -1 >= 0 ? groupMsg.groupUsers.length - item.readCount - 1 : '0'}} {{ item.readCount >= 0 ? "人未读" : ''}}</view>
                </view>
                <view class="historyLine" wx:if="{{ item.cmd == 1 }}">{{ item.fromUserName }} 撤回了一条消息</view>
                <view class="historyLine" wx:if="{{ item.cmd == 100 && item.content }}">{{ item.content || ''}} </view>
                <view class="historyLine" wx:if="{{ item.cmd == 999 }}" style="width:90%;">
                  {{ item.msgTemplate }}
                  <view class="cancelAlert" bindtap="cancelAlert" data-item="{{ item }}" wx:if="{{ item.content.createUser == sendInputMsg.fromUser }}">取消提醒</view>
                </view>   
                <view class="historyLine" wx:if="{{ item.cmd == 1000 }}" style="width:90%;">
                  {{ item.msgTemplate }}
                </view>                   
                <!-- 办结消息 -->
                <!-- <view class="text" space-right="0">
                </view> -->
                <view width="60" wx:if="{{ item.cmd != 'time' && ( userMsg.openId == item.fromUser ) && item.cmd != 2 && item.cmd != 1 && item.cmd != 999 && item.cmd != 1000 }}"><!--消息来自自己-->
                    <view class="left_icon left_icon1">
                        <image src="{{  userMsg.headImgUrl }}"/>
                    </view>
                    <!-- 消息转发选项框...... -->
                </view>
                <view class="msgTransCheckbox" wx:if="{{ item.cmd == 0 && transmit.isTransmit && item.msgType != 20 && item.msgType != 21 && item.msgType != 22 && item.msgType != 30}}"><checkbox color="#267AFC" checked="{{ item.checked }}" class="checkbox" value="{{ item.msgId }}"/></view>
            </ui-row>
          </checkbox-group>
    </scroll-view>
</template>
<script>
import system from '../../static/utils/system'
let _audio = wx.createInnerAudioContext();
let app = getApp();
export default {
  properties:{
    scrollHeight:{
      type: Number, // 类型（必填），目前接受的类型包括：String, Number, Boolean, Object, Array, null（表示任意类型）
      value: null, // 属性初始值（可选），如果未指定则会根据类型选择一个
      observer: function (newVal, oldVal) {}
    },
    sendInputMsg:{
      type: Object, // 类型（必填），目前接受的类型包括：String, Number, Boolean, Object, Array, null（表示任意类型）
      value: {}, // 属性初始值（可选），如果未指定则会根据类型选择一个
      observer: function (newVal, oldVal) {
      }
    },    
    chatData:{
      type:Object,
      value:{},
      observer:function( newVal,oldVal){}
    },
    tabBar:{
      type:Object,
      value:{},
      observe:function(newVal,oldVal){}
    }
  },  
  data: {
    h: wx.DEFAULT_CONTENT_HEIGHT -  49 - 40,
    groupMsg:{},
    toView:"",
    scrollTop:1000,
    oldAudioIndex:null,
    paused:true,
    transmit:{
      isTransmit:false
    }
  },
  methods: {
    handleTap () {
      console.log( this.data.msg )
    },
    setScrollTop(_top){
      this.setData({
        scrollTop: _top
      })
    },
    yatu(e){
      let _item  = e.currentTarget.dataset;
      wx.navigateTo({
        url:`/pages/mapping/index?_obj=${JSON.stringify( _item.item )}`//编辑进
      })
    },
    bindscrolltoupper(e){
      if( this.data.chatData.length != 0 ){
        this.triggerEvent( "addData" , {  } );
      }
    },
    openFile(e){
      var that = this;
      var item = e.currentTarget.dataset.item;
      const downloadTask = wx.downloadFile({
        url:item.attachUrl,
        success(ress) {
          // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
          function validate(url){//检测文件类型
            var d = /\.[^\.]+$/.exec(url);
            return d;
          }
          if (ress.statusCode === 200) {
              if( validate(ress.tempFilePath) == ".doc" || validate(ress.tempFilePath) == ".xls" || validate(ress.tempFilePath) == ".ppt" || validate(ress.tempFilePath) == ".pdf" || validate(ress.tempFilePath) == ".docx" || validate(ress.tempFilePath) == ".xlsx" || validate(ress.tempFilePath) == ".pptx" ){
                wx.openDocument({
                  filePath: ress.tempFilePath,
                  success(res) {},
                  fail(res){
                    system.msgTip({title: '提示',content: "不支持此文档类型.",scb(){},ccb(){}})
                  }
                })
              }else{//不支持类型.....
                wx.navigateTo({
                  url: `/pages/webView/index?fileUrl=${item.attachUrl}`,
                  success(res){},
                  fail(res){}
                })
              }
          }
        },
        fail(res){
          system.msgTip({title: '提示',content: res.errMsg,scb(){},ccb(){}})
        }
      })
      downloadTask.onProgressUpdate((res) => {})
    },    
    previewImage(e){//图片预览.....
      var imgUrl = e.currentTarget.dataset.item.attachUrl;
      var imgList = [];
      this.data.chatData.forEach((val,i,arr)=>{
        if( val.msgType == 1 ){
          imgList.push( val.attachUrl );
        }
      })
      wx.previewImage({
          current: imgUrl, // 当前显示图片的http链接
          urls: imgList // 需要预览的图片http链接列表
      })
    },
    playVoice(e){
      var that = this;
      var _item = e.currentTarget.dataset.item;
      var _i = e.currentTarget.dataset.index;
      _audio.src = _item.attachUrl;
      this.data.chatData.forEach((item,i,arr)=>{
        if( item.msgType == 2 ){//音频...
          if( i == _i ){
            item.voiceState = !item.voiceState;
          }else{
            item.voiceState = false;
          }
        }
      })
      if( this.data.chatData[_i].voiceState ){//播放状态....
        _audio.pause();
        _audio.play();
      }else{//停止
        _audio.pause();
      }
      _audio.onEnded((e)=>{
          this.data.chatData[_i].voiceState = false
          that.setData({
            chatData:that.data.chatData
          })          
      })
      that.setData({
        chatData:that.data.chatData
      })
    },
    retOrConfirm(e){
      let _item  = e.currentTarget.dataset;
      let that = this;
      let _obj = {
        "item":_item.item,
        "enterType":1
      }
      app.globalData._obj = JSON.stringify(_obj)
      wx.navigateTo({
        url:`/pages/CreateRequirement/index`//编辑进
      })
    },
    evaluateMe(){//评价.....
      let that = this;
      wx.navigateTo({
        url:`/pages/evaluate/index?groupMsg=${ JSON.stringify( app.globalData.groupMsg ) }`
      })
    },
    sendReadedReceipt(){//发送已读消息回执....
      let that = this;
      app.globalData.observeScroll = wx.createIntersectionObserver(this,{thresholds:[100],initialRatio:100,observeAll:true}).relativeTo('#viewport').observe('.talkItem', (res) => {
        let _item = res.dataset.item;
        if( res.intersectionRatio == 1 && _item.fromUser != app.globalData.openId && _item.cmd != "time" ){
            let _params = JSON.stringify({msgId:_item.msgId,cmd:'3',groupId:_item.groupId,fromUser:_item.fromUser});
            system.sendSocketMessage({
              "params":_params,
              callBack(){}
            })
        }
      });
    },
    scrllView(e){//滚动的时候发送已读消息回执...
      this.sendReadedReceipt();
    },
    checkboxChange(e){ //消息转发选项框选中事件......
      let that = this;
      app.globalData.transData = e.detail.value;
    },
    cancelAlert(e){
      let _item  = e.currentTarget.dataset;
      let _params = {
        msgId:_item.item.msgId,
        demandId: _item.item.content.demandId,
        groupId:_item.item.groupId,
        groupName:app.globalData.groupMsg.groupName,
        fromUser:_item.item.fromUser,
        fromUserName:_item.item.fromUserName,
        headImgUrl:_item.item.headImgUrl,
        position:_item.item.position || ''
      }
      system.http({ url:'/demand/prompt/cancel', method:"post",header:{'content-type': 'application/x-www-form-urlencoded'},param:_params,scb(res){
          if ( res.data.status == 200) {
              system.stateMsg({title:res.data.message,icon:"none",time:1500});
          }else{
            system.stateMsg({title:res.data.message,icon:"none",time:1500});
          }
      }})
    },
    openActionsheet(e){
      var that = this;
      var dataset = e.currentTarget.dataset;
      var item = e.currentTarget.dataset.item;
      var typeCode = e.currentTarget.dataset.item.msgType;
      var list = [];
      let creatTime = '';
      if(item.createAt.toString().search('-') != -1){
        creatTime = Date.parse(item.createAt.toString().replace(/-/g,"/"))
      }else{
        creatTime = item.createAt
      }
      function toggle(){
        if(new Date().getTime() - creatTime > 120000){
          typeCode == 2 ? list = ['转发',"语音转文字"] : ( (typeCode == 20 || typeCode == 21 || typeCode == 22 || typeCode == 30) ? list = [] : list = []);
        }else{
          typeCode == 2 ? list = ['转发','撤回',"语音转文字"] : ( (typeCode == 20 || typeCode == 21 || typeCode == 22) ? list = [] : list = ['撤回']);
        }
      }
      if( item.fromUser == that.data.sendInputMsg.fromUser ){
        toggle();
      }else{
        typeCode == 2 ? list = ["转发","语音转文字"] :( (typeCode == 20 || typeCode == 21 || typeCode == 22 || typeCode == 30) ? list = [] : list = ["转发"]);
      }
      // 语音转文字后更新内容.....
      function changeData(){
        that.data.chatData[dataset.index].seeWord = true;
        that.setData({
          'chatData':that.data.chatData
        })
      }
      function _implement (code){
        if( list[code] == "语音转文字"){
          changeData();
        }else if( list[code] == "转发" ){
          that.data.chatData.filter((item_0)=>{
            if(item_0.msgId == item.msgId){
              item_0.checked = true;
              app.globalData.transData.push(item_0.msgId);
            }
          })
          that.setData({
            "chatData":that.data.chatData,
            ["transmit.isTransmit"]:true,
          })
          that.triggerEvent("transData")
        }else if( list[code] == "撤回" ){
          let _params = JSON.stringify({msgId:item.msgId,cmd:'1',groupId:item.groupId,fromUser:item.fromUser,fromUserName:item.fromUserName});
          system.sendSocketMessage({
            "params":_params,
            callBack(){
              let _data = wx.getStorageSync(item.groupId);
              _data.splice( dataset.index , 1 );
              wx.setStorageSync(item.groupId,_data);
              that.setData({
                chatData:_data
              })
            }
          })
        }
      }
      if( list.length != 0 ){
        wx.showActionSheet({
            itemList: list,
            success: function(res) {
                _implement(res.tapIndex);
            }
        });
      }
    }
  },
  attached(){
    this.setData({
      userMsg: app.globalData.userMsgReq
    })
    this.setScrollTop( 1000 )
  }
}
</script>
<style lang="less">
  @import '../styles/mixins.less';
  @import '../styles/icon.less';
  .demandMsg{
    height:60px;
    display: flex;
    font-size:12px;
    justify-content: space-bewteen;
    .demandImg{
      width: 45px;
    }
    .demandTxt{
      padding-left: 10px;
    }
  }
  .file{
    display: flex;
    justify-content: space-between;
    
  }
.checkboxGroup{
  padding-bottom:15px;
  padding:0px 8px;
}
.msgTransCheckbox{
  text-align:right;
  width:40px;
  .checkbox{
    display:inline-block;
    width:25px;
  }
}
.content{
    transition: all 0.2s;
    .talkItem{
      padding:15px 0;
      margin-bottom:6px;
      display: flex;
      justify-content: space-between;
    }
    .itemLeft{
      justify-content: flex-start;
      .text{
        margin-left: 10px;
      }
    }
    .text{
      width: 80%;
      .talkContent{
        margin-top: 6px;
      }
    }
    .itemRight{
      justify-content: flex-end;
      .text{
        text-align: right;
        margin-right: 10px;
      }
    }
  .historyLine{
    text-align: center;
    background-color: #cccccc;
    padding: 5px 10px;
    border-radius: 6px;
    font-size: 10px;
    margin:0 auto;
    color: white;
    .cancelAlert{
      color: #67c23a;
    }
  }
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 5px;
        overflow: hidden;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .left_icon2{
        background-color: #FF7360;
    }
    .left_icon3{
        background-color: #39CCC5;
    }
    .name,.job{
      font-family:PingFang-SC-Medium;
      color:rgba(102,102,102,1);
      max-width: 90px;
      display: inline-block;
      .mix-text-overflow();
    }
    .name{
      font-size: 13px;
    }
    .job{
      font-size: 11px;
    }
    .userMsg{
      vertical-align: top;
      line-height: 13px;
    }
    .talkContent{
      font-size: 15px;
      font-family:PingFang-SC-Medium;
      color:rgba(51,51,51,1);
      background-color: white;
      padding: 5px 10px;
      border-radius: 5px;
      display: inline-block;
      max-width:90%;
      white-space: pre-line;
      overflow-wrap:break-word;
      text-align: left;
      min-height: 20px;
      position: relative;
    }
}
  .evaluate{
    text-align: right;
  }
  .text{
    position: relative;
    .readMe{
        display: inline-block;
        color:gray;
        font-size: 10px;
        position: absolute;
        bottom: -15px;
    }  
  }
</style>