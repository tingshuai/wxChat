<template>
  <view>
    <ui-nav-bar slot="nav-bar" class="nav_bar" custom-style="{{ {backgroundColor:'#267AFC',color:'#fff'} }}">
        <ui-row height="40">
            <ui-col vertical-align="middle" align="center" width="60" bindtap="navigateBack">
                <icon class="iconfont myWx-iconfontqianjin2" style="font-size:20px;"></icon>
            </ui-col>
            <ui-col vertical-align="middle" align="center">
                需求创建
            </ui-col>
            <ui-col vertical-align="middle" align="center" width="80"></ui-col>
        </ui-row>
    </ui-nav-bar>
    <view style="height:66px;width:100%;"></view>

    <view class="weui-cells__title">文本域</view>
    <view class="weui-cells weui-cells_after-title" style="height:min-height:40px;display:block;">
        <view class="weui-cell">
            <view class="weui-cell__bd">
                <textarea fixed="{{ true }}" show-confirm-bar="{{ false }}" id="reqMsg" auto-height="{{ true }}" style="min-height:30px;border:1px solid #ddd;padding:0 5px;box-sizing:border-box;position:relative;" value="{{ form.demandText }}" data-index="{{ index }}" class="weui-textarea" bindinput="inputing"/>
            </view>
        </view>
    </view>

    <view class="weui-cells weui-cells_after-title">
        <navigator class="weui-cell weui-cell_access" catchtap="sendTo" hover-class="weui-cell_active">
            <view class="weui-cell__bd">对接人</view>
            <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </navigator>
    </view>

    <view class="btn-area">
      <button catchtap="addItem" type="primary">增加项目</button>
      <button catchtap="sendTo" type="primary">发送到</button>
    </view>
    <ui-popup show="{{ model.show }}" height="100%">
        <view style="height:100%;width:100%;overflow:hidden;">
            <view style="height:70px;"></view>
            <scroll-view scroll-y style="height:{{ modelHeight }};border-top:1px solid #ddd;">
                <ui-row height="55" wx:for="{{ groupMsg.groupUsers }}" wx:key="{{ index }}" class="top_tip" border-bottom style="padding-right:35px;" data-parentItem="0" data-isaite="false" data-index="{{ index }}" data-item="{{ item }}" bindtap="selUser">
                    <ui-col width="55" align="center" vertical-align="middle" data-item="{{ item }}" style="padding:4px;">
                        <image mode="aspectFit" src="{{ item.headImgUrl }}" style="height:100%;"></image>
                    </ui-col>
                    <ui-col class="text" align="left" vertical-align="middle" space="20" data-item="{{ item }}">
                        <view style="width: 100%;">
                            <ui-row height="22">
                                <ui-col align="left" vertical-align="middle">
                                    <text>{{ item.username || "" }}</text>
                                </ui-col>
                            </ui-row>
                            <view class="txt">{{ item.position ? item.position : "" }}</view>
                        </view>
                    </ui-col>
                    <icon class="angleIcon" type="success" wx:if="{{ item.act }}" size="23"></icon>
                </ui-row>
            </scroll-view>
            <view class="btn-area">
                <button catchtap="cancle" type="primary">取消</button>
                <button catchtap="submit" type="primary">确定</button>
            </view>                          
        </view>
    </ui-popup>
  </view>
</template>

<script>
var app = getApp();
import system from '../../static/utils/system'

let _promise;
  export default {
    config: {
      navigationBarTitleText: '申请填写'
    },
    data: {
      tag:true,
      disabled:true,
      contentHeight: wx.WIN_HEIGHT - 180 + "px",
      model:{
        show:false
      },
      modelHeight:wx.WIN_HEIGHT - 180 + 'px',
      form:{
        confirmUser :"",//需求确认人
        demandText :"",//需求内容
        fromUser :"",//发送人openId
        fromUserName :"",//发送人名称
        groupId:"",//
        groupName :"",//
        headImgUrl :"",//
        position :""//
      },
      come_msg:{
        edit:"",
        item:{},
        itemMsg:{}
      },
      requireList:[{value:""}],
      validate:{
        reqMsg:{
            placeholder:"请输入申请留言",
            color:'#F21B1B',
            required:true,
            name:"留言",
            isLegal:false
        }
      },
      groupMsg:{}
    },
    navigateBack () {
        wx.navigateBack()
    },
    onLoad(option){
      let _item = JSON.parse( option.groupMsg );
      let that = this;
      this.setData({
        groupMsg:_item,
        ['form.fromUser']:app.globalData.openId,
        ['form.fromUserName']:"秦琼",
        ['form.groupName']:_item.groupName,
        ['form.groupId']:_item.groupId,
        ['form.headImgUrl']:app.globalData.userMsgReq.headImgUrl,
        ['form.position']:app.globalData.userMsgReq.position
      });
      if( option.edit == "true" ){//编辑进来.....
        this.setData({
            ['come_msg.edit']:option.edit,
            ['come_msg.item']:JSON.parse( option.item ).itemcontent,
            ["come_msg.itemMsg"]:JSON.parse( option.item )
        })
        this.data.groupMsg.groupUsers.filter((val)=>{//重置确认人
            if( val.openId == JSON.parse( option.item ).parentitem.toUser ){
                val.act = true;
                that.setData({
                    ["form.confirmUser"]:val.openId,
                    ["groupMsg.groupUsers"]:that.data.groupMsg.groupUsers
                })
            }else{
                val.act = false;
            }
        })      
      }
    },
    addRequirement(e){

    },
    cancle(e){
        this.setData({
            ['model.show']:false
        })
    },
    submit(e){
        let that = this, _url;
        if( this.data.come_msg.edit == "true" ){
            this.setData({
                ["form.demands"]:JSON.stringify(that.data.come_msg.item),
                ["form.msgId"]:that.data.come_msg.itemAllMsg.parentitem.msgId
            })
            delete this.data.form.demandText;
            _url = 'demand/edit';
        }else{
            _url = 'demand/add'
            this.data.requireList.filter((item)=>{
                that.data.form.demandText.push( item.value );
            })
            this.setData({
                ["form.demandText"]:that.data.form.demandText
            })
        }
        system.http({
            url:_url,
            param:that.data.form,
            method:"post",
            header:{'content-type': 'application/x-www-form-urlencoded'},
            scb(res){
                if( res.data.status == 200 ){
                    system.stateMsg({
                        title:"发送成功",
                        icon:"success",
                        time:1500
                    })
                    setTimeout(() => {
                        wx.navigateBack()
                    }, 1500);
                }
            },
            fcb(res){
                debugger;
            }
        })
    },
    sendTo(e){
        let that = this;
        if( this.data.form.demandText != 0 ){
            this.setData({
                ['model.show']:true
            })
        }else{
            system.stateMsg({
                title:"条目内容不能为空",
                icon:"none",
                time:2000
            })
        }
    },
    addItem(){
        let that = this,_list;
        if( this.data.come_msg.edit == "true" ){
            _list = this.data.come_msg.item.filter((item)=>{
                return item.demandText == ""
            })
        }else{
            _list = this.data.requireList.filter((item)=>{
                return item.value == ""
            })
        }
        if( _list.length == 0 ){
            if( this.data.come_msg.edit == "true" ){
                this.data.come_msg.item.push( { demandText:""} )
                this.setData({
                    ["come_msg.item"]: that.data.come_msg.item
                })                
            }else{
                this.data.requireList.push( {value:""} )
                this.setData({
                    "requireList": that.data.requireList
                })                
            }
        }else{
            system.stateMsg({
                title:"新增条目不能为空",
                icon:"none",
                time:2000
            })
        }
        
    },
    selUser(e){//选择群成员.....
        let _item = e.currentTarget.dataset;
        let that = this;
        this.data.groupMsg.groupUsers.filter((val)=>{
            if( val.openId == _item.item.openId){
                val.act = !val.act;
                that.setData({
                    ["form.confirmUser"]:val.openId
                })
            }else{
                val.act = false;
            }
        })
        this.setData({
            ['groupMsg.groupUsers']:that.data.groupMsg.groupUsers
        })
    },
    inputing(e){
        let that = this;
        let _item = e.currentTarget.dataset;
        this.setData({
            ['form.demandText']: e.detail.value
        })
    }
  }
</script>

<style lang="less">
    .top_tip{
        // margin: 10px 0;
    }
    .star{
        // color: #F21B1B;
        font-size: 10px;
    }
    .btn-area{
        padding:20px;
    }
    .applyForm{
        .weui-input{
            font-size: 14px;
            height: 44px;
        }
        .weui-label{
            font-size:16px;
            font-family:PingFang-SC-Medium;
            color:rgba(51,51,51,1);
        }
    }
.angleIcon{
    position:absolute;
    z-index:10000;
    right:18rpx;
    top:27rpx;
    display:inline-block;
    width:auto;
    font-size:22rpx;
    min-width:45rpx;
    height:45rpx;
    border-radius:50%;
    background-color:white;
    color:white;
    line-height:45rpx;
    padding:2rpx;
}
</style>
