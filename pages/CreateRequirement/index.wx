<template>
  <view>
    <ui-nav-bar slot="nav-bar" class="nav_bar" custom-style="{{ {backgroundColor:'#267AFC',color:'#fff'} }}">
        <ui-row height="40">
            <ui-col vertical-align="middle" align="center" width="60" bindtap="navigateBack">
                <icon class="iconfont myWx-iconfontqianjin2" style="font-size:20px;"></icon>
            </ui-col>
            <ui-col vertical-align="middle" align="center">
                需求创建
            </ui-col>
            <ui-col vertical-align="middle" align="center" width="80"></ui-col>
        </ui-row>
    </ui-nav-bar>
    <view style="height:66px;width:100%;"></view>
    <!-- 需求单 -->
    <view class="weui-cells__title">需求描述</view>
    <view class="weui-cells weui-cells_after-title" style="display:block;">
        <view class="weui-cell" style="padding:0;">
            <view class="weui-cell__bd">
                <textarea fixed="{{ true }}" show-confirm-bar="{{ false }}" id="reqMsg" auto-height="{{ true }}" style="min-height:100px;box-sizing:border-box;position:relative;padding:5px 10px;font-size:14px;" value="{{ form.demandText }}" data-index="{{ index }}" class="weui-textarea" bindinput="inputing"/>
            </view>
        </view>
    </view>
    <!-- 上传附件 -->
    <view class="weui-cells__title">上传图片</view>
    <view class="page__bd">
        <view class="weui-cells" style="margin:0;">
            <view class="weui-cell">
                <view class="weui-cell__bd">
                    <view class="weui-uploader">
                        <view class="weui-uploader__bd">
                            <view class="weui-uploader__files" id="uploaderFiles">
                                <block wx:for="{{ form.demandAttach }}" wx:key="*this">
                                    <view class="weui-uploader__file" bindtap="previewImage" id="{{item}}" style="position:relative;">
                                        <image class="weui-uploader__img" src="{{ item }}" mode="aspectFill" />
                                        <icon type="cancel" catchtap="cancle" data-index="{{ index }}" data-type="0" data-item="{{ item }}" size="23" style="position:absolute;top:-1px;right:-1px;z-index:100;"></icon>
                                    </view>
                                </block>
                                <block wx:for="{{ come_msg.files }}" wx:key="*this">
                                    <view class="weui-uploader__file" bindtap="previewImage" id="{{item}}" style="position:relative;">
                                        <image class="weui-uploader__img" src="{{ item }}" mode="aspectFill" />
                                        <icon type="cancel" catchtap="cancle" data-type="1" data-index="{{ index }}" data-item="{{ item }}" size="23" style="position:absolute;top:-1px;right:-1px;z-index:100;"></icon>
                                    </view>
                                </block>
                            </view>
                            <view class="weui-uploader__input-box">
                                <view class="weui-uploader__input" bindtap="chooseImage"></view>
                            </view>
                        </view>
                    </view>
                </view>
            </view>
        </view>
    </view>    
    <!-- 选择需求对接人 -->
    <view class="weui-cells weui-cells_after-title" style="margin-top:20px;">
        <navigator class="weui-cell weui-cell_access" url="" catchtap="sendTo" hover-class="weui-cell_active">
            <view class="weui-cell__bd">对接人</view>
            <view class="weui-cell__ft weui-cell__ft_in-access">{{ form.confirmUserName }}</view>
        </navigator>
    </view>

    <view class="btn-area">
      <button catchtap="submit" type="primary" class="myBtnSuccess">提交需求</button>
    </view>
    <ui-popup show="{{ model.show }}" height="100%">
        <view style="height:100%;width:100%;overflow:hidden;">
            <view style="height:70px;"></view>
            <scroll-view scroll-y style="height:100%;border-top:1px solid #ddd;">
                <ui-row height="55" wx:for="{{ groupMsg.groupUsers }}" wx:key="{{ index }}" class="top_tip" border-bottom style="padding-right:35px;" data-parentItem="0" data-isaite="false" data-index="{{ index }}" data-item="{{ item }}" bindtap="selUser">
                    <ui-col width="55" align="center" vertical-align="middle" data-item="{{ item }}" style="padding:4px;">
                        <image mode="aspectFit" src="{{ item.headImgUrl }}" style="height:100%;"></image>
                    </ui-col>
                    <ui-col class="text" align="left" vertical-align="middle" space="20" data-item="{{ item }}">
                        <view style="width: 100%;">
                            <ui-row height="22">
                                <ui-col align="left" vertical-align="middle">
                                    <text>{{ item.username || "" }}</text>
                                </ui-col>
                            </ui-row>
                            <view class="txt">{{ item.position ? item.position : "" }}</view>
                        </view>
                    </ui-col>
                    <icon class="angleIcon" type="success" wx:if="{{ item.act }}" size="23"></icon>
                </ui-row>
            </scroll-view>    
        </view>
    </ui-popup>
  </view>
</template>

<script>
var app = getApp();
import system from '../../static/utils/system'

let _promise1;
  export default {
    config: {
      navigationBarTitleText: '申请填写'
    },
    data: {
      tag:true,
      disabled:true,
      contentHeight: wx.WIN_HEIGHT - 180 + "px",
      model:{
        show:false
      },
      modelHeight:wx.WIN_HEIGHT - 180 + 'px',
      form:{
        confirmUser :"",//需求确认人
        demandText :"",//需求内容
        fromUser :"",//发送人openId
        fromUserName :"",//发送人名称
        groupId:"",//
        groupName :"",//
        headImgUrl :"",//
        position :"",//
        demandAttach :[]
      },
      come_msg:{
        edit:"",
        item:{},
        itemMsg:{},
        selUserName:"",
        files:[]
      },
      requireList:[{value:""}],
      validate:{
        reqMsg:{
            placeholder:"请输入申请留言",
            color:'#F21B1B',
            required:true,
            name:"留言",
            isLegal:false
        }
      },
      groupMsg:{}
    },
    navigateBack () {
        wx.navigateBack();
    },
    onLoad(option){
      let _groupMsg = JSON.parse( option.groupMsg );
      let that = this;
      this.setData({
        groupMsg:_groupMsg,
        ['form.fromUser']:app.globalData.openId,
        ['form.fromUserName']:app.globalData.userMsgReq.username,
        ['form.groupName']:_groupMsg.groupName,
        ['form.groupId']:_groupMsg.groupId,
        ['form.headImgUrl']:app.globalData.userMsgReq.headImgUrl,
        ['form.position']:app.globalData.userMsgReq.position,
      });
      if( option.edit == "true" ){//编辑进来.....
        let _item = JSON.parse( option.item );
        this.setData({
            ['come_msg.edit']:option.edit,
            ['come_msg.item']:_item.itemcontent,
            ["come_msg.itemMsg"]:_item,
            ["form.confirmUser"]:_item.item.toUser,
            ["form.demandText"]:_item.itemcontent.demandText,
            ["form.fromUser"]:_item.item.fromUser,
            ["form.fromUserName"]:_item.item.fromUserName, 
            ["form.demandId"]:_item.itemcontent.demandId,
            ["form.demandAttach"]:_item.itemcontent.demandAttach.split(',')
        })
        this.data.groupMsg.groupUsers.filter((val)=>{//重置确认人
            if( val.openId == _item.item.toUser ){
                val.act = true;
                that.setData({
                    ["groupMsg.groupUsers"]:that.data.groupMsg.groupUsers,
                    ["form.confirmUserName"]:val.username
                })
            }else{
                val.act = false;
            }
        })      
      }
    },
    addRequirement(e){

    },
    submit(e){
        let that = this, _url;
        this.data.come_msg.edit == "true" ? _url = 'demand/edit' : _url = 'demand/add';
        _promise1 = new Promise((resolve,rejece)=>{
            if( that.data.form.demandText == '' ){
                system.stateMsg({title:"需求内容不能为空",icon:"none",time:1000})
            }else if( that.data.form.confirmUser == '' ){
                system.stateMsg({title:"确认人不能为空",icon:"none",time:1000})
            }else{
                let promises = that.data.come_msg.files.map((val,i,arr)=>{
                    return that.upload({'val':val,"resolve":resolve,'i':i,"arr":arr});
                })
                Promise.all(promises).then((allData) => {
                    if( that.data.come_msg.edit == "true" ){
                        that.setData({
                            ["come_msg.files"]:[]
                        })
                    }
                    resolve();//_promise1的提交请求......
                }).catch((err) => {
                    console.log(err);
                })
            }
        })
        _promise1.then(()=>{
            let _newDemand = Object.assign( that.data.form,{demandAttach: that.data.form.demandAttach.join( ',' )}) ;
            system.http({
                url:_url,
                param:that.data.form,
                method:"post",
                header:{'content-type': 'application/x-www-form-urlencoded'},
                scb(res){
                    if( res.data.status == 200 ){
                        system.stateMsg({title:"发送成功",icon:"success",time:1500})
                        setTimeout(() => { wx.navigateBack() }, 1500);
                    }
                },
                fcb(res){
                    system.stateMsg({title: that.data.come_msg.edit == "true" ? "编辑失败" : "编辑成功" ,icon:"none",time:1500})
                    setTimeout(() => { wx.navigateBack() }, 1500);
                }
            })
        })
    },
    upload(obj){
        let that = this;
        return new Promise((resolve, reject) => {
            let uploadTask =  wx.uploadFile({
                url: `${app.globalData.httpUpload}/fileSystem/uploadFile`, //仅为示例，非真实的接口地址
                filePath: obj.val,
                name: 'file',
                success(res){
                    let _resData = JSON.parse( res.data );
                    if( _resData.errorCode == 0 ){
                        that.data.form.demandAttach
                        debugger;
                        that.data.form.demandAttach.push( _resData.model );
                        that.setData({
                            ["form.demandAttach"]:that.data.form.demandAttach
                        })
                        resolve(obj.i)
                    }else{
                        system.stateMsg( {title: _resData.message, icon:"none", time:1000} )
                    }
                },
                fail(res){
                    system.stateMsg( {title: "文件上传失败", icon:"none", time:1000} )
                }
            })
        });        
    },
    sendTo(e){
        let that = this;
        if( this.data.form.demandText != 0 ){
            this.setData({
                ['model.show']:true
            })
        }else{
            system.stateMsg({
                title:"条目内容不能为空",
                icon:"none",
                time:2000
            })
        }
    },
    chooseImage: function (e) {
        var that = this;
        wx.chooseImage({
            sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
            sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
            success (res) {
                // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
                that.setData({
                    ['come_msg.files']: that.data.come_msg.files.concat(res.tempFilePaths)
                });
            }
        })
    },
    cancle(e){
        let that = this;
        let _item = e.currentTarget.dataset;
        if( _item.type == "0" ){//
            that.data.form.demandAttach.splice(_item.index,1)
            that.setData({
                ['form.demandAttach']: that.data.form.demandAttach
            });
        }else if( _item.type == "1" ){
            that.data.come_msg.files.splice(_item.index,1)
            that.setData({
                ['come_msg.files']: that.data.come_msg.files
            });
        }
    },
    previewImage(e){
        wx.previewImage({
            current: e.currentTarget.id, // 当前显示图片的http链接
            urls: this.data.come_msg.files // 需要预览的图片http链接列表
        })
    },
    selUser(e){//选择群成员.....
        let _item = e.currentTarget.dataset;
        let that = this;
        this.data.groupMsg.groupUsers.filter((val)=>{
            if( val.openId == _item.item.openId){
                val.act = true;
                that.setData({
                    ["form.confirmUser"]:val.openId,
                    ["form.confirmUserName"]:val.username
                })
            }else{
                val.act = false;
            }
        })
        this.setData({
            ['groupMsg.groupUsers']:that.data.groupMsg.groupUsers,
            ['model.show']:false
        })
    },
    inputing(e){
        let that = this;
        let _item = e.currentTarget.dataset;
        this.setData({
            ['form.demandText']: e.detail.value
        })
    }
  }
</script>

<style lang="less">
    .top_tip{
        // margin: 10px 0;
    }
    .star{
        // color: #F21B1B;
        font-size: 10px;
    }
    .btn-area{
        padding:20px;
    }
    .applyForm{
        .weui-input{
            font-size: 14px;
            height: 44px;
        }
        .weui-label{
            font-size:16px;
            font-family:PingFang-SC-Medium;
            color:rgba(51,51,51,1);
        }
    }
.angleIcon{
    position:absolute;
    z-index:10000;
    right:18rpx;
    top:27rpx;
    display:inline-block;
    width:auto;
    font-size:22rpx;
    min-width:45rpx;
    height:45rpx;
    border-radius:50%;
    background-color:white;
    color:white;
    line-height:45rpx;
    padding:2rpx;
}
</style>
