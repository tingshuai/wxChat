<template>
  <view style="padding-top:66px;">
      <ui-nav-bar slot="nav-bar" class="nav_bar" custom-style="{{ {backgroundColor:'#267AFC',color:'#fff'} }}">
          <ui-row height="40">
              <ui-col vertical-align="middle" align="center" width="60" bindtap="navigateBack">
                  <icon class="iconfont myWx-iconfontqianjin2" style="font-size:25px;"></icon>
              </ui-col>
              <ui-col vertical-align="middle" align="center" class="title">
                  {{ title }}
              </ui-col>
              <ui-col vertical-align="middle" align="center" width="80"></ui-col>
          </ui-row>
      </ui-nav-bar>
      <ui-row style="margin:30px 0 10px 0">
        <ui-col align="{{ item.align }}" wx:for="{{ face.list }}" wx:key="{{ index }}">
          <icon class="iconfont {{ item.icon }}" data-facecolor="{{ index }}" style="font-size:60px;color:{{ item.faceColor ? 'rgba(200,200,0,1)' : 'black'}};" catchtap="tapFace"></icon>
          <text style="padding:0px 9px;">{{ item.name }}</text>
        </ui-col>
      </ui-row>
      <scroll-view scroll-x style="white-space:nowrap;height:22px;">
          <text class="{{ item.bgColor ? 'myGreen' : ''}}" wx:for="{{ face.evaluateList }}" data-index="{{ index }}" wx:key="{{ index }}" style="display:inline-block;width:auto;white-space:nowrap; }};padding:0px 9px;border-radius:7px;margin:0 5px;" data-item="{{ item }}" bindtap="selEvaluate">{{ item.labelName }}</text>
      </scroll-view>
      <ui-tags data="{{ search.list00 }}" id="tags0" bindchange="singleTap"></ui-tags>

      <view class="weui-cells__title">评论内容</view>
      <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell">
              <view class="weui-cell__bd">
                  <textarea fixed="{{ true }}" show-confirm-bar="{{ false }}" style="background-color:white;min-height:200px;font-size:13px;box-sizing:border-box;position:relative;" value="{{ face.value }}" class="weui-textarea" bindinput="requireTextareaInputing"/>
              </view>
          </view>
      </view>
      <button class="btn1 btn" data-show="{{ false }}" data-type="0" bindtap="navigateBack">取消</button>
      <button class="btn2 btn" data-show="{{ false }}" data-type="1" bindtap="submit">确定</button>
  </view>
</template>

<script>
const tagStyle00 = `background: #efefef;
background:#ddd;
color:#555;
padding:0 10px;
border-radius: 10px;
text-align: center;
height: 25px;
display: flex;
justify-content: center;
align-items: center;
line-height: 20px;
margin:10px;
`

const selectStyle = `background: #54d09f;
color: #fff;
padding: 0 10px;
border-radius: 10px;
text-align: center;
height: 25px;
display: flex;
justify-content: center;
align-items: center;
line-height: 20px;
margin:10px;
`
import system from '../../static/utils/system'
var app = getApp();
export default {
  config: {
    navigationBarTitleText: ''
  },
  data: {
    theGroupMsg:{},
    face:{
      faceColor:3,
      list:[
        {
          "name": "非常差",
          "id": -1,
          "icon":"myWx-pingjiacha",
          "align":"right",
          "faceColor":false
        },
        {
          "name": "一般",
          "id": 0,
          "icon":"myWx-pingjia-zhongpingx",
          "align":"center",
          "faceColor":false
        },
        {
          "name": "超赞",
          "id": 1,
          "align":"left",
          "faceColor":false,
          "icon":"myWx-pingjiahao"
        }
      ],
      evaluateList:[],//标签列表....
      selLebal:[],//选中的标签...
      reviewText:""
    }
  },
  onLoad(option){
    let _option = JSON.parse( option.groupMsg )
    this.setData({
      "theGroupMsg": _option
    })
    // this.httpEvaluateItem({"name":"非常差","id":1})//默认选中
  },
  requireTextareaInputing(e){
    this.setData({
      "reviewText":e.detail.value
    })
  },
  tapFace(e){
    let _item = e.currentTarget.dataset;
    let that = this;
    this.data.face.list.forEach((val,i,arr)=>{
      if( _item.facecolor == i ){
        val.faceColor = true;
        that.httpEvaluateItem( val );
      }else{
        val.faceColor = false;
      }
    })
    this.setData({
      [`face.list`]:that.data.face.list
    })
  },
  selEvaluate(e){
    let _item = e.currentTarget.dataset;
    let that = this;
    this.data.face.evaluateList[_item.index].bgColor = !this.data.face.evaluateList[_item.index].bgColor;
    this.setData({
      ["face.evaluateList"]:that.data.face.evaluateList
    })
  },
  httpEvaluateItem(_val){
    let that = this;
    system.http({
      url:`evaluateLabel`,
      method:"get",
      param:{
        "labelName":_val.name,
        "labelType":_val.id
      },
      scb(res){
        if( res.data.status == 200 ){
          res.data.data.rows.forEach((val,i,arr)=>{
            val.bgColor = false
          })
          that.setData({
            ['face.evaluateList']:res.data.data.rows
          })
        }
      },
      fcb(res){}
    })
  },
  submit(e){
    let that = this;
    let _lebal = "",_selLebal,_face;

    let _promise = new Promise((resolve,reject)=>{
      _selLebal = this.data.face.evaluateList.filter((val)=>{
        if( val.bgColor == true ){
          _lebal+= `,${val.labelId}`;
          return val
        }
      });
      _face = this.data.face.list.filter((val)=>{
         return val.faceColor == true 
      });
      if( _face.length != 0 ){
        resolve();
      }else{
        system.stateMsg({
          title:"请选择评价",
          icon:"none",
          time:1500
        })
      }
    })
    _promise.then(()=>{
      let _params = {
        "labels":_lebal,
        "openId":app.globalData.openId,
        "groupId":that.data.theGroupMsg.groupId,
        "reviewText":that.data.reviewText || "",
        "reviewType": _face[0].id
      }
      system.http({
        url:'review/add',
        method:"post",
        param:_params,
        header:{'content-type': 'application/x-www-form-urlencoded'},
        scb(res){
          if( res.data.status == 200 ){
            system.stateMsg({
              title:"评价成功",
              icon:"success",
              time:1500
            })
            setTimeout(() => {
              let _currentPage = getCurrentPages();
              if( _currentPage.length >= 2 ){
                wx.navigateBack({
                  delta: 2
                })
              }else{
                wx.redirectTo({
                  url: '/pages/home/index'
                })
              }
            }, 1500);
          }
        },
        fcb(res){
          system.stateMsg({
            title:"评价失败",
            icon:"none",
            time:1500
          })
        }
      })
    })
  },
  navigateBack(e){
    wx.navigateBack()
  }
}
</script>

<style lang="less">
</style>
