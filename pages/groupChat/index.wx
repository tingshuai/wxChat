<template id="page">
  <view id="container">
    <ui-nav-bar slot="nav-bar" class="nav_bar" custom-style="{{ {backgroundColor:'#fff'} }}">
        <ui-row height="40">
            <ui-col vertical-align="middle" align="center" width="60" bindtap="navigateBack">
                <icon class="iconfont myWx-iconfontqianjin2" style="font-size:25px;"></icon>
            </ui-col>
            <ui-col vertical-align="middle" align="center" class="title">
                {{ title }}
            </ui-col>
            <ui-col vertical-align="middle" align="center" width="80"></ui-col>
        </ui-row>
    </ui-nav-bar>
  

      <view class="loadingData" style="top:{{ loadingMsg.top }}">
        <icon class="iconfont myWx-unif032" style="color:{{ loadingMsg.color }};font-size:32px;"></icon>
      </view>
      <view class="article" style="height:{{ scrollHeight }}">
        <view class="groupMsgBtn">
          <button bindtap="groupMsg" wx:if="{{ !transmit.isTransmit }}" class="seeGroupMsg cBtn0"> 群信息 </button>
          <button bindtap="showModel" wx:if="{{ transmit.isTransmit }}" class="seeGroupMsg cBtn0">转发</button>
        </view>
        <scroll-view scroll-y="true" bindscroll="scrllView" id="viewport" style="height: 100%;overflow:hidden;" scroll-into-view="{{toView}}" upper-threshold="0" bindscrolltoupper="bindscrolltoupper" scroll-top="{{ scrollTop }}" catchtap="toggleIsHidden"><!-- bindscrolltoupper="bindscrolltoupper"，，，，catch:touchstart="loadTouchstart" catch:touchend="loadTouchend" catch:touchmove="loadTouchmove"-->
          <view class="content" id="content">
            <checkbox-group bindchange="checkboxChange">
              <ui-row hover-class="touchui-hover" class="talkItem" wx:for="{{ chatData }}" wx:key="index" id="the{{index}}">
                    <view class="historyLine" wx:if="{{ (item.cmd == 'time' || item.cmd == '2') && item.content }}">{{ item.content }}</view>
                    <ui-col width="60" align="left" vertical-align="top" wx:if="{{ item.cmd == 0 &&  (sendInputMsg.fromUser != item.fromUser)}}"><!--消息来自别人-->
                        <view class="left_icon left_icon1">
                            <image src="{{  item.headImgUrl }}"/>
                        </view>
                    </ui-col>
                    <!-- <view class="msgTransCheckbox" wx:if="{{ item.cmd == 0 && (sendInputMsg.fromUser == item.fromUser) && transmit.isTransmit }}"><checkbox-group data-item="{{ item }}" bindchange="checkboxChange"><label><checkbox class="checkbox" value="{{item.msgId}}"/></label></checkbox-group></view>消息转发选项框...... -->
                    <ui-col class="text" align="left" vertical-align="top" space-left="0" space-right="5" wx:if="{{ item.cmd == 0 }}">
                        <view style="width: 100%; text-align:{{ sendInputMsg.fromUser == item.fromUser ? 'right' : 'left' }};">
                            <ui-row height="20" wx:if="{{ sendInputMsg.fromUser != item.fromUser }}">
                                <ui-col align="{{ sendInputMsg.fromUser == item.fromUser ? 'right' : 'left'}}" vertical-align="top">
                                    <view class="userMsg"><text class="name">{{ item.fromUserName }}</text><text decode="true">&nbsp;&nbsp;</text><text class="job">{{ item.position }}</text></view>
                                </ui-col>
                            </ui-row>
                            <!--文本类型-->
                            <text selectable='true' class="talkContent" data-item="{{item}}" bind:longpress="openActionsheet" wx:if="{{ item.msgType == 0 || item.msgType == 7}}" style="background-color: {{ sendInputMsg.fromUser == item.fromUser ? '#A0E75A' : 'white' }}">{{ item.content }} </text>
                            <!--图片类型-->
                            <view class="talkContent" wx:if="{{ item.msgType == 1 }}" style="height:100px;background-color:rgba(0,0,0,0);width:40%;">
                              <image lazy-load="true" mode="aspectFit" data-item="{{item}}" bindtap="previewImage" catch:longpress="openActionsheet" style="height:100%;width:auto" src="{{ item.attachUrl }}"></image>
                              <view class="myProgress" wx:if="{{ item.progress >0 && item.progress < 100 }}" style="height:1px;width:{{ item.progress }}%;background-color: {{ item.progress == 100 && item.readCount >= 0 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view></view>
                            <!--语音类型-->
                            <view class="talkContent" wx:if="{{ item.msgType == 2 }}" style="width:{{ item.seeWord ? 'auto' : '100px' }};min-width:100px;" catchtap="playVoice" bind:longpress="openActionsheet" data-index="{{ index }}" data-item="{{item}}">
                                <image mode="aspectFit" style="height:20px;width:20px;float:{{ sendInputMsg.fromUser == item.fromUser ? 'left' : 'right'}}" src="{{ item.src ? item.src : '../../static/img/voice2.png' }}"></image>
                                <view style="border-top:1rpx solid #ddd;padding-top:3px;margin-top:28px;font-size:26rpx;color:#666;" class="voiceContent" wx:if="{{item.content != '' && item.content != null && item.seeWord }}">{{ item.content }}</view>
                                <view style="border-top:1rpx solid #ddd;padding-top:3px;margin-top:28px;color:rgba(255,100,100,0.8);font-size:26rpx;" class="voiceContent" wx:elif="{{ item.seeWord }}"> 无可识别内容 </view>
                                <!-- <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view> -->
                            </view>
                            <!--视频类型-->
                            <view class="talkContent" wx:if="{{ item.msgType == 3 }}" style="width:90%;">
                                <video style="width:100%;height:117px;" src="{{ item.attachUrl }}" controls></video>
                                <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view>
                            </view>
                            <!--文件类型-->
                            <view class="talkContent" wx:if="{{ item.msgType == 6 }}" data-item="{{item}}" style="width:80%;" catchtap="openFile">
                              <ui-row>
                                  <ui-col span="9" align="left" vertical-align="top" data-item="{{item}}" catch:longpress="openActionsheet">
                                      <view style="font-size:13px;color:#333333;">{{ item.content }}</view>
                                  </ui-col>
                                  <ui-col span="3">
                                    <text class="iconfont myWx-552cd47fba2cc" style="font-size:32px;text-align:center;"></text>
                                  </ui-col>
                              </ui-row>
                              <view style="border-top:1xp solid blue;"></view>
                              <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view>
                            </view>
                        </view>
                        <view class="readMe" wx:if="{{ sendInputMsg.fromUser == item.fromUser }}" style="right:{{ sendInputMsg.fromUser == item.fromUser ? '5px' : '' }}">{{ item.readCount >= 0 ? theGroupMsg.groupUsers.length - item.readCount : item.msgType != 1 && item.msgType != 2 ? '发送失败' : item.progress + '%' }} {{ item.readCount >= 0 ? "人未读" : ''}}</view>
                    </ui-col>
                    <ui-col class="text" align="center" vertical-align="top" space-left="0" space-right="0" wx:if="{{ item.cmd == 1 }}">
                        <view class="historyLine">{{ item.fromUserName }} 撤回了一条消息</view>
                    </ui-col>
                    <ui-col width="60" align="left" vertical-align="top" wx:if="{{ item.cmd != 'time' && (sendInputMsg.fromUser == item.fromUser) && item.cmd != 2 && item.cmd != 1 }}"><!--消息来自自己-->
                        <view class="left_icon left_icon1">
                            <image src="{{  userMsg.headImgUrl }}"/>
                        </view>
                        <!-- 消息转发选项框...... -->
                    </ui-col>
                    <view class="msgTransCheckbox" wx:if="{{ item.cmd == 0 && transmit.isTransmit }}"><checkbox checked="{{ item.checked }}" class="checkbox" value="{{ item.msgId }}"/></view>
                </ui-row>
              </checkbox-group>
          </view>
        </scroll-view>
        <ui-fixed-view top="30%" left="{{ voice.plVoice }}" style="z-index:9999;" wx:if="{{ voice.show }}">
            <view class="fixed-view-content" style="background-color:rgba(0,0,0,0.5);padding:0px 35px 20px 35px;border-radius:7px;">
              <image src="{{ voice.icon }}" style="width:100px;height:100px;"></image>
              <text style="display:block;text-align:center;color:white;background-color:{{ voice.color }}">{{ voice.content }}</text>
            </view>
        </ui-fixed-view>
      </view>
      <!-- <cc-group-chat></cc-group-chat> -->
      <!-- <ccGroupChat></ccGroupChat> -->
      <!--底部输入工具-->
      <ui-fixed-view bottom="0" left="0" right="0">
        <view class="fixed_bottom">
          <ui-row class="rowInputs" height="50" border-top border-bottom>
            <ui-col width="50" style="font-size:14px;" align="center" vertical-align="middle"><text class="iconfont {{ msgType == 0 ? 'myWx-jianpan' : 'myWx-ai01' }}" bindtap="toggleMsgType"></text></ui-col>
            <ui-col vertical-align="middle" hidden="{{ msgType == 0 }}"><input cursor-spacing="6" class="myInput" focus="{{inputIn.inputFocus}}" bindinput="onInput" value="{{ inputVal }}"/></ui-col>
            <ui-col vertical-align="middle" hidden="{{ msgType == 1 }}"><button catch:touchstart="touchstart" catch:touchend="touchend" catch:touchmove="touchmove">按住说话</button></ui-col>
            <ui-col width="50" style="font-size:14px;" align="center" vertical-align="middle" hidden="{{ isInputing }}"><text class="iconfont myWx-jia" bindtap="toggleIsHidden"></text></ui-col>
            <ui-col width="55" vertical-align="middle" hidden="{{ !isInputing }}" class="sendBtn" space-left="3" space-right="3"><button type="primary" bindtap="sendMsg">发送</button></ui-col>
          </ui-row>
          <ui-row height="100" class="sentType" hidden="{{ isHidden }}" style="justify-content:flex-start;">
            <ui-col style="display:inline-block;" class="sentType_col" width="58" align="left" vertical-align="middle"><text class="iconfont myWx-zhaopian1" bindtap="chooseFile" data-type="1" data-watermark = "false"></text></ui-col>
            <ui-col style="display:inline-block;" class="sentType_col" width="58" align="left" vertical-align="middle"><text class="iconfont myWx-tupianshuiyinshezhi" bindtap="chooseFile" data-type="1" data-watermark = "true" style="font-size:"></text></ui-col>
            <ui-col class="sentType_col" width="58" align="left" vertical-align="middle"><text class="iconfont myWx-wenjian1" bindtap="chooseFile" data-type="6"></text></ui-col>
            <ui-col class="sentType_col" width="58" align="left" vertical-align="middle"><text class="iconfont myWx-xiazai" bindtap="aite" data-type="6"></text></ui-col>
          </ui-row>
          <ui-row height="100" class="sentType" hidden="{{ transmit.isAite }}" style="overflow:auto;justify-content:left;flex-flow:nowrap;">
            <ui-col class="sentType_col" width="58" align="center" vertical-align="middle" data-isaite="true" data-index="{{ index }}" data-item="{{ item }}" wx:key="index" catchtap="selUser" wx:for="{{ theGroupMsg.groupUsers }}">
              <image mode="aspectFit" style="height:72px;" src="{{ item.headImgUrl == null ? defaultImg : item.headImgUrl }}"></image>
              <text style="text-align:center;" class="txt9">{{ item.username }}</text>
              <icon class="angleIcon angleIcon2" type="success" wx:if="{{ item.act }}" size="23"></icon>
            </ui-col>
            <ui-col width="10rpx" style="opacity:0;">s</ui-col>
          </ui-row>
        </view>
      </ui-fixed-view>
      <!-- 全屏弹窗.... -->
      <ui-popup show="{{ model.show }}" height="100%">
          <view class="popup1">
            <text class="title0">选择要转发到的群组</text>
            <scroll-view scroll-y style="height:{{modelHeight}};border-top:1px solid #ddd;">
              <ui-accordion bindchange="slide" wx:for="{{ transmit.groupList }}" header-height="50" wx:key="index">
                  <view slot="header" class="accorHeader">
                      <ui-row height="80" class="top_tip" border-bottom style="padding-right:35px;" data-parentItem="0" data-isaite="false" data-index="{{ index }}" data-item="{{ item }}" bindtap="selUser">
                        <ui-col width="80" align="center" vertical-align="middle" data-item="{{ item }}">
                            <view class="left_icon left_icon1" style="">
                                <image src="{{ item.icon || defaultHeadImg }}"></image>
                                <text class="angleIcon" wx:if="{{ item.unreadCount != 0 }}">{{ item.unreadCount >= 100 ? '99+' : item.unreadCount }}</text>
                            </view>
                        </ui-col>
                        <ui-col class="text" align="left" vertical-align="middle" space="20" data-item="{{ item }}">
                            <view style="width: 100%;">
                                <ui-row height="22">
                                    <ui-col align="left" vertical-align="middle">
                                        <text>{{ item.groupName }}</text>
                                    </ui-col>
                                </ui-row>
                                <view class="txt">{{ item.groupDesc ? item.groupDesc : "" }}</view>
                            </view>
                        </ui-col>
                        <icon class="angleIcon" type="success" wx:if="{{ item.act }}" size="23"></icon>
                    </ui-row>
                  </view>
                  <view slot="content" class="accorContent" v-if="{{ item.children.length != 0 }}">
                      <ui-row height="70" style="padding-right:0;" class="top_tip" border-bottom wx:key="{{indexTow}}" wx:for="{{item.children}}" bindtap="selUser" data-parentItem="{{ item }}" wx:for-item="itemChidren" data-item="{{itemChidren}}" wx:for-index="indexTow">
                        <ui-col space-left="25" width="80" align="center" vertical-align="middle" data-item="{{ itemChidren }}">
                            <view class="left_icon left_icon1" style="">
                                <image src="{{ itemChidren.icon || defaultHeadImg}}"></image>
                                <text class="angleIcon angleIcon2" wx:if="{{ itemChidren.unreadCount != 0 }}">{{ itemChidren.unreadCount >= 100 ? '99+' : itemChidren.unreadCount }}</text>
                            </view>
                        </ui-col>
                        <ui-col space-left="25" class="text" align="left" vertical-align="middle" space="20" data-item="{{ itemChidren }}">
                            <view style="width: 100%;">
                                <ui-row height="24">
                                    <ui-col align="left" vertical-align="middle">
                                        <text>{{ itemChidren.groupName }}</text>
                                    </ui-col>
                                </ui-row>
                                <view class="txt">{{ itemChidren.groupDesc ? itemChidren.groupDesc : "" }}</view>
                            </view>
                        </ui-col>
                        <icon class="angleIcon" type="success" wx:if="{{ itemChidren.act }}" size="23"></icon>
                      </ui-row>
                  </view>
              </ui-accordion>
            </scroll-view>
            <view class="button-sp-area">
              <button bindtap="cancelSelect" plain type="default">取消</button>
              <button bindtap="transMsg" plain type="primary">确定</button>
            </view>
          </view>
      </ui-popup>
  </view>
</template>

<script>
import system from '../../static/utils/system'
var app = getApp();
var plugin = requirePlugin("WechatSI");
let wx_manager = plugin.getRecordRecognitionManager();
var recorderManager,wx_timer,wx_timer2,wx_n1=0,wx_n2=1;
var backgroundAudioManager=wx.getBackgroundAudioManager();
export default {
  config: {
    navigationBarTitleText: "欢迎进入群聊",
    "navigationStyle": "custom",
    "navigationBarTextStyle":"black",
    usingComponents: {
      'cc-group-chat': '../../packages/cc-groupChat/index'
    }
  },
  data: {
    defaultImg:"",//默认群头像.....
    toView:'',//要滚动的位置...
    msgType:true, //0-文字，1-语音
    isHidden:true,//图片输入显示隐藏
    isInputing:false,//判断是否正在输入
    title:"",//页面标题.....
    chatData:[],//聊天信息.....
    inputIn:{
      isLeft:false,//判断@成员显示隐藏
      inputFocus:false
    },
    selUserList:[],
    unReadList:[],
    model:{
      show:false,
    },
    inputVal:"",//消息输入框的值......
    modelHeight:wx.DEFAULT_CONTENT_HEIGHT - 128 + 'px',
    scrollHeight:wx.DEFAULT_CONTENT_HEIGHT + 15 + 'px',
    sendInputMsg :{
      fromUser:app.globalData.openId,//发送人ID
      fromUserName:'',//发送人姓名
      toUser:'',//群聊不填，私聊必填
      content:"",//消息体
      cmd:0,//0发送消息，1-撤回消息,2-系统推送消息.
      msgType:0,//消息类型0-text,1-image,2-voice,3-vedio,4-music,5-news
      chatType:0,//聊天类型0-未知，1-公聊，2-私聊
      groupId:'',//群聊ID....群聊必填..
      attachUrl:'',//附件地址...
      position:"",
      msgId:'',
      groupName:'',
      status:0,
      src:'../../static/img/voice2.png',//语音消息的图片地址
    },
    userMsg:{},
    theGroupMsg:{},
    scrollTop:1000,
    newHeight:0,
    pageNum:1,
    startPageY:'',
    voice:{
      plVoice:(wx.WIN_WIDTH - 170)/2 + 'px',//发送语音时话筒的距离左侧位置....
      color:'',
      show:false,
      content:'上划取消',
      icon:'../../static/img/record.gif',
      iconStop:false,
      play:'../../static/img/voice2.png',//聊天列表中的语音icon
      curItem:{}
    },
    fileSrc:'',//文件在webview中展示的地址
    transmit:{
      isAite:true,//是否显示转发消息checkbox
      isTransmit:false,//是否是转发......
      transData:[],//选中的项目.
      groupList:[],
      aiteContent:"",//@成员
      aiteId:[]
    },
    loadingMsg:{//加载数据的loading
      top:'-100%',
      color:'#666666',
      startY:'',
      endY:''
    },
    selUser:{
      selMe:'',
      users:[],
      act:''
    }
  },
  onLoad(options){
    var that = this;
    var onFirst = 1;
    let _item = JSON.parse(options.item);
    let loadPromise = new Promise((resolve,reject)=>{
      wx.getStorage({
        key: 'openId',
        success: function(res) {
            app.globalData.openId = res.data;
            wx.getStorage({
              key:'userMsgReq',
              success(res){
                app.globalData.userMsgReq = res.data;
              }
            })
            resolve();
        },
        fail(res){
          wx.redirectTo({
            url: '/pages/login/index'
          })
        }
      })
    })
    loadPromise.then(()=>{
      // system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
      system.http({
        url:'chat/attach/defaultGroupIcon',
        method:"get",
        scb(res){
          app.globalData.defaultImg = res.data.data.base64Str;
          that.data.defaultImg = res.data.data.base64Str;
        }
      });
      this.setData({
        "title":_item.group.groupName,
        theGroupMsg:_item.group,
        userMsg:app.globalData.userMsgReq,
        ['sendInputMsg.groupName']:_item.group.groupName,
        ['sendInputMsg.fromUserName']:_item.user.username || app.globalData.userMsgReq.username,
        ['sendInputMsg.fromUser']:_item.user.openId || app.globalData.openId,
        ['sendInputMsg.groupId']:_item.group.groupId,
        ['sendInputMsg.position']:_item.user.position || app.globalData.userMsgReq.position,
        ['sendInputMsg.headImgUrl']:_item.user.headImgUrl || app.globalData.userMsgReq.headImgUrl,
      })
      that.setData({
        ['sendInputMsg.isGroupManager']: _item.user.openId == _item.group.managerId ? true : false
      })
      this.data.theGroupMsg.groupUsers.forEach((val,i,arr)=>{
        that.data.selUser.users.push( val.username );
        that.setData({
          ['selUser.users']:that.data.selUser.users
        })
      })
      that.reqGroupList();//请求群列表
      // 连接sockey服务
      app.globalData.socketTask = wx.connectSocket({
        url: app.globalData.socketHost + `/websocket/${that.data.sendInputMsg.fromUser}`,//用户id
        data:{},
        header:{
          'content-type': 'application/json'
        },
        success:function(msg){
          that.getHistoryMsg(that.data.theGroupMsg.groupId, 10 , that.data.pageNum,true);
        },
        fail:function(msg){
          system.stateMsg({title: '提示',content: res.errMsg,icon:"none",scb(){},ccb(){}})
        }
      })
      //连接状态
      app.globalData.socketTask.onOpen(function(res) { console.log( 'socket open');})
      //监听WebSocket错误。
      app.globalData.socketTask.onError(function(res){
        system.msgTip({title: '提示',content: "会话连接失败。请重新连接。",scb(){},ccb(){}})
      })
      app.globalData.socketTask.onMessage(function(res) {
        var data = JSON.parse( res.data );
        console.log("接收消息" , data )
        var chatDataMsgId;
        if( onFirst == 1 ){
          that.data.chatData.forEach((val,ii,arr)=>{
            if(val.msgId){
              chatDataMsgId = val.msgId;
            }
          })
        }else{
            chatDataMsgId = data.msgId;
        }
        var dataMsg =JSON.stringify( { "cmd" : 3, msgId:chatDataMsgId, "groupId":that.data.theGroupMsg.groupId ,"fromUser":data.fromUser } ) ;
        function set(){
          if( data.groupId == that.data.sendInputMsg.groupId ){//非转发消息push进消息队列......
            that.data.chatData.push( data );
            that.setData({
              chatData:that.data.chatData
            })
            that.setData({
              scrollTop:10000
            })
            that.sendReadedReceipt();
          }else{//转发消息返回的消息，说明转发成功了
            if(data.fromUser == app.globalData.openId){
              system.stateMsg({title:"消息转发成功",icon:"success",time:1000})
              that.setData({
                ["model.show"]:false,
                ["transmit.isTransmit"]:false
              })
            }
          }
        }
        function set2(){
           that.data.chatData.push( data );
            that.setData({
              chatData:that.data.chatData
            })
            that.setData({
              scrollTop:10000
            })
            that.sendReadedReceipt();
        }
        if( data.cmd == 1 ){//撤回消息...
          that.data.chatData.forEach((val,i,arr) => {
            if( val.msgId == data.msgId ){
              that.data.chatData.splice(i,1)
              that.data.chatData.push({'cmd':data.cmd,'fromUser':data.fromUser,'fromUserName':data.fromUserName,'msgId':data.msgId,'status':data.status})
            }
          });
          that.setData({
            chatData:that.data.chatData
          })
        }else if( data.cmd == 0 ){//用户发送消息的时候发送 消息回执......
          var isMe = data.fromUser == that.data.sendInputMsg.fromUser ? true : false;
          if( data.msgType == 7){
            data.content = data.content.split('(@\`-\`@)').join(" ");
          }
          if(isMe){
            data.headImgUrl= that.data.userMsg.userHeadImg;
            if( data.msgType == 0 ){
              set();
            }else if( data.msgType == 7 ){//@消息.....
              set();
              that.data.theGroupMsg.groupUsers.filter((item)=>{
                item.act = false;
              })
              that.data.theGroupMsg.groupUsers.forEach((val,i,arr)=>{
                 val.act = false;
              })
              that.setData({
                ["transmit.isAite"]:true,
                isHidden:true,
                theGroupMsg:that.data.theGroupMsg,
                scrollHeight:wx.DEFAULT_CONTENT_HEIGHT + 15 + 'px',
                ['transmit.aiteContent']:'',
                ['theGroupMsg.groupUsers']:that.data.theGroupMsg.groupUsers
              })
            }else if(data.msgType == 1 || data.msgType == 2){//图片和语音...
              // that.data.chatData.pop();
              set();
            }else{
              // that.data.chatData[that.data.chatData.length - 1].msgId = data.msgId;
              set();
            }
            that.setData({
              ['sendInputMsg.content']:'',
              "inputVal":'',
              'isInputing': false
            })
          }else{
            set();
            // app.globalData.socketTask.send({"data": dataMsg ,success(res){},fail(res){}});
          }
        }else if( data.cmd == 2 ){//系统推送消息.
          set2();
          if( onFirst == 1 ){
            app.globalData.socketTask.send({"data":dataMsg ,success(res){},fail(res){}});
            onFirst ++ ;
          }
        }else if( data.cmd == 3 ){//已读消息提醒.....
          that.data.chatData.forEach((val,i,arr)=>{
            if( val.msgId == data.msgId ){
              val.readStatus = 1;
              val.readCount = data.readCount;
            }
          })
          that.setData({
            chatData:that.data.chatData
          })
        }
      })//onMessage结束...
    })//resolve函数结束....
  },
  onUnload(e){
    
  },
  // 发送socket消息
  sendSocketMessage(msg) {
    var that = this;
      app.globalData.socketTask.send({
        data: msg ,
        success(res){},
        fail(res){}
      })
  },
  sendReadedReceipt( item ){//发送已读消息回执....
    let that = this;
    this.data.chatData.forEach((val,i,arr)=>{
      wx.createSelectorQuery().select(`#the${i}`).boundingClientRect(function(rect){
        var a = that.data.chatData[i].readStatus;
        if( (that.data.chatData[i].readStatus == 0 || (that.data.chatData[i].readStatus == 1 && that.data.chatData[i].fromUser == app.globalData.openId)) && rect.top >= 0 ){
          app.globalData.socketTask.send({"data":JSON.stringify({msgId:that.data.chatData[i].msgId,cmd:'3',groupId:that.data.theGroupMsg.groupId,fromUser:that.data.chatData[i].fromUser}),
            success(res){},
            fail(res){}
          });
        }
      }).exec()
    })
  },
  checkboxChange(e){ //消息转发选项框选中事件......
    this.setData({
      ['transmit.transData']:e.detail.value
    })
  },
  cancelSelect(){//取消消息选择......
    this.setData({
      ['model.show']:false,
      ['transmit.isTransmit']:false
    })
  },
  showModel(){
    this.setData({
      ["model.show"]:true
    })
  },
  transMsg(){//选择完转发消息后跳转到群组列表页面
    let that = this;
    this.data.chatData.forEach((val,i,arr)=>{
      this.data.transmit.transData.forEach((value,ii,array)=>{
        val.groupId = that.data.selUser.selMe.groupId;
        val.groupName = that.data.selUser.selMe.groupName;
        val.fromUser = that.data.sendInputMsg.fromUser;
        val.position = that.data.sendInputMsg.position;
        val.fromUserName = that.data.sendInputMsg.fromUserName;
        if( val.msgId == value ){
          delete val.readCount;
          delete val.status;
          delete val.readStatus;
          delete val.msgId;
          val.toUser = "";
          val.content == null ? val.content = "" : null;
          let a = JSON.stringify( val );
          that.sendSocketMessage( JSON.stringify( val ) );
        }
      })
    })
  },
  previewImage: function(e){//图片预览.....
    var imgUrl = e.currentTarget.dataset.item.attachUrl;
    var imgList = [];
    this.data.chatData.forEach((val,i,arr)=>{
      if( val.msgType == 1 ){
        imgList.push( val.attachUrl );
      }
    })
    wx.previewImage({
        current: imgUrl, // 当前显示图片的http链接
        urls: imgList // 需要预览的图片http链接列表
    })
  },
  openActionsheet(e){
    var that = this;
    var dataset = e.currentTarget.dataset;
    var item = e.currentTarget.dataset.item;
    var typeCode = e.currentTarget.dataset.item.msgType;
    var list = [];
    let creatTime = '';
    if(item.createAt.toString().search('-') != -1){
      creatTime = Date.parse(item.createAt.replace(/-/g,"/"))
    }else{
      creatTime = item.createAt
    }
    function toggle(){
      if(new Date().getTime() - creatTime > 120000){
        typeCode == 2 ? list = ['提醒查看','转发',"语音转文字"] : list = ['提醒查看','转发'];
      }else{
        typeCode == 2 ? list = ['提醒查看','转发','撤回',"语音转文字"] : list = ['提醒查看','转发','撤回'];
      }
    }
    if( item.fromUser == that.data.sendInputMsg.fromUser ){
      toggle();
    }else{
      typeCode == 2 ? list = ["转发","语音转文字"] : list = ["转发"];
    }
    // 语音转文字后更新内容.....
    function changeData(){
      that.data.chatData[dataset.index].seeWord = true;
      that.setData({
        'chatData':that.data.chatData
      })
    }
    // 消息撤回.....
    if(  item.fromUser == that.data.sendInputMsg.fromUser ){
      wx.showActionSheet({
          itemList: list,
          success: function(res) {
              if (res.tapIndex == 2 ) {
                if(new Date().getTime() - creatTime > 120000){//语音转文字.....
                changeData();
                }else{//撤回
                  app.globalData.socketTask.send({"data":JSON.stringify({msgId:item.msgId,cmd:'1',groupId:item.groupId,fromUser:item.fromUser,fromUserName:item.fromUserName})});
                }
              }else if( res.tapIndex == 0 ){//提醒查看
                system.http({
                  url:'chat/msg/chatRemind',
                  method:'post',
                  header:{'content-type': 'application/x-www-form-urlencoded'},
                  param:{
                    groupId:item.groupId,
                    fromUserName:item.fromUserName,
                    headImgUrl:that.data.theGroupMsg.icon,
                    managerId :that.data.theGroupMsg.managerId,
                    groupName :that.data.theGroupMsg.groupName,
                    sessionId:app.globalData.sessionId
                  },
                  scb(res){
                    system.stateMsg({title:"提醒成功",icon:"success",time:1000})
                  },
                  fcb(res){
                    system.stateMsg({title:"提醒失败",icon:"none",time:1000})
                  }
                })
              }else if( res.tapIndex == 1 ){//转发
                that.data.chatData.filter((item_0)=>{
                  if(item_0.msgId == item.msgId){
                    item_0.checked = true;
                    that.data.transmit.transData.push( item_0.msgId )
                  }
                })
                that.setData({
                  "chatData":that.data.chatData,
                  ["transmit.isTransmit"]:true,
                  ['inputIn.isLeft']:true,
                })
              }else if( res.tapIndex == 3){//语音转文字.....
                changeData();
              }
          }
      });
    }else{
      wx.showActionSheet({
          itemList: list,
          success: function(res) {
              if (res.tapIndex == 1 ) {//语音转文字
                changeData();
              }else if(res.tapIndex == 0){//转发
                that.data.chatData.filter((item_0)=>{
                  if(item_0.msgId == item.msgId){
                    item_0.checked = true;
                    that.data.transmit.transData.push( item_0.msgId )
                  }
                })
                that.setData({
                  "chatData":that.data.chatData,
                  ["transmit.isTransmit"]:true,
                  ['inputIn.isLeft']:true,
                })
              }
          }
      });
    }
  },
  handleShow3(){
      this.setData({
        ['model.show']:false
      })
  },
  reqGroupList(e){
    let that = this;
    system.http({ url:`chat/groups/tree`, method:"get",param:{openId:app.globalData.openId} ,header:{'content-type': 'application/x-www-form-urlencoded'},scb(res){
        that.setData({
          ['transmit.groupList']:res.data.data.rows,
          ['selUser.selMe']:res.data.data.rows[0]
        })
    }})
  },
  touchmove(e){
    let that = this;
    let moveY = this.data.startPageY -  e.changedTouches[0].pageY;
    if( moveY > 80 ){
      this.setData({
        ['voice.icon']:"../../static/img/back_voice.png",
        ['voice.content']:'松手取消发送',
        ['voice.color']:'rgba(200,0,0,0.6)',
        ['voice.iconStop']:true
      })
    }else{
      this.setData({
        ['voice.color']:'',
        ['voice.icon']:"../../static/img/record.gif",
        ['voice.content']:'上滑取消',
        ['voice.iconStop']:false
      })
    }
  },
  touchstart(e){
    var that = this;
    var music = function(){
      wx_manager.start({duration:30000, lang: "zh_CN"});//开始转译
    }
    that.setData({
      ['voice.iconStop']:false
    })
    wx.getSetting({
      success(res) {
        if (!res.authSetting['scope.record']) {
          wx.authorize({
            scope: 'scope.record',
                  success() {
                    // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问
                     music();
                  }
              })
            }else{
              music();
            }
        }
    })
    wx_manager.onRecognize = function(res) {
      console.log("current onRecognize", res)
    }
    wx_manager.onStop = function(res) {
      that.upload(res.tempFilePath , 2, "false" ,res.result);
    }
    var pageY = e.changedTouches[0].pageY;
    this.setData({
      startPageY:pageY,
      ['voice.show']:true
    })
  },
  touchend(e){
    // recorderManager.stop();
    wx_manager.stop();
    this.setData({['voice.show']:false,['voice.content']:"上滑取消",['voice.icon']:"../../static/img/record.gif",});
  },
  openFile(e){
    var that = this;
    var item = e.currentTarget.dataset.item;
    const downloadTask = wx.downloadFile({
      url:item.attachUrl,
      success(ress) {
        // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
        function validate(url){//检测文件类型
          var d = /\.[^\.]+$/.exec(url);
          return d;
        }
        if (ress.statusCode === 200) {
            if( validate(ress.tempFilePath) == ".doc" || validate(ress.tempFilePath) == ".xls" || validate(ress.tempFilePath) == ".ppt" || validate(ress.tempFilePath) == ".pdf" || validate(ress.tempFilePath) == ".docx" || validate(ress.tempFilePath) == ".xlsx" || validate(ress.tempFilePath) == ".pptx" ){
              wx.openDocument({
                filePath: ress.tempFilePath,
                success(res) {},
                fail(res){}
              })
            }else{//不支持类型.....
              wx.navigateTo({
                url: `/pages/webView/index?fileUrl=${item.attachUrl}`,
                success(res){},
                fail(res){}
              })
            }
        }
      },
      fail(res){
        system.msgTip({title: '提示',content: res.errMsg,scb(){},ccb(){}})
      }
    })
    downloadTask.onProgressUpdate((res) => {})
  },
  bindscrolltoupper(e){
    var that = this;
    this.setData({
      ['loadingMsg.top']:0,
      ['loadingMsg.color']:'#666666'
    })
    system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
    this.getHistoryMsg( that.data.theGroupMsg.groupId ,10 , that.data.pageNum ,false,e);
  },
  // 播放语音....
  playVoice(e){
    var that = this;
    var item = e.currentTarget.dataset.item;
    var i = e.currentTarget.dataset.index;
    backgroundAudioManager.index
    if( backgroundAudioManager.paused == false ){//正在播放.....
      if( backgroundAudioManager.index == i ){
          backgroundAudioManager.stop();
          this.setData({
            [`chatData[${i}].src`]:'../../static/img/voice2.png',
          })
      }else{
        backgroundAudioManager.stop();
        this.setData({
          [`chatData[${backgroundAudioManager.index}].src`]:'../../static/img/voice2.png',
        })
        backgroundAudioManager.title = "语音消息"
        backgroundAudioManager.index = e.currentTarget.dataset.index
        backgroundAudioManager.epname = item.fromUserName
        backgroundAudioManager.singer = item.fromUserName
        backgroundAudioManager.coverImgUrl = item.headImgUrl
        backgroundAudioManager.src = item.attachUrl; // 设置了 src 之后会自动播放
      }
      console.log( "播放1", backgroundAudioManager.paused );
    }else{
        backgroundAudioManager.stop();
        backgroundAudioManager.title = "语音消息"
        backgroundAudioManager.index = e.currentTarget.dataset.index
        backgroundAudioManager.epname = item.fromUserName
        backgroundAudioManager.singer = item.fromUserName
        backgroundAudioManager.coverImgUrl = item.headImgUrl
        backgroundAudioManager.src = item.attachUrl; // 设置了 src 之后会自动播放
      console.log( "播放2", backgroundAudioManager.paused );
    }
    console.log("播放状态", backgroundAudioManager.paused )
    backgroundAudioManager.onPlay(()=>{
      var d = that.data.chatData[i];
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice.gif',
      })
    })
    backgroundAudioManager.onPause(()=>{
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice2.png',
      })
    })
    backgroundAudioManager.onStop((res)=>{
      this.data.chatData.forEach((val,ii ,arr)=>{
        this.setData({
          [`chatData[${ii}].src`]:'../../static/img/voice2.png',
        })
      })
    })
    backgroundAudioManager.onEnded(()=>{
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice2.png',
      })
    })
  },
  // 请求历史记录....
  getHistoryMsg(id,size,num,isFirst,event){
    var that= this;
    wx.request({
      url: `${app.globalData.httpHost}/chat/msg/getGroupMsg`,
      data: {
         groupId : id ,//群ID
         pageSize : size,//一页几条
         pageNum :num,//第几页
         openId:app.globalData.openId
      },
      success: function(res) {
        if( res.data.status == 200 ){
          var oldList = that.data.chatData.length;
          res.data.data.rows.forEach((val,i,arr)=>{//未读@信息......
            if(val.msgType == 7 && /(@\`-\`@)/.test(val.content) ){
              val.content = val.content.split('(@\`-\`@)').join(' ');
            }
          })
          that.data.chatData.splice(0,0,...res.data.data.rows);
          that.setData({
            chatData:that.data.chatData,
            pageNum:++that.data.pageNum
          })
          var newList = that.data.chatData.length;
          if(isFirst){
            that.setData({scrollTop:10000});
            that.sendReadedReceipt();
          }else{
            that.setData({toView:`the${newList - oldList}`});//回滚到原来查看的位置
            that.setData({
              ['loadingMsg.top']:'-100%',
              ['loadingMsg.color']:'#A0E75A'
            })
          }
          wx.hideToast()
        }else{
          wx.hideToast()
          system.stateMsg({title: res.data.message,time:1500,icon:"none",scb(){},ccb(){}})
        }
      }
    })
  },
  // 上传.....
  upload( tempFilePaths , type ,watermark , contentMsg=""){
    var that = this;
      that.setData({
        ['sendInputMsg.msgType']:type,
        ['sendInputMsg.content']:contentMsg,
        ['sendInputMsg.attachUrl']:tempFilePaths,
        ['sendInputMsg.progress']:0,
        ['sendInputMsg.createAt']:new Date().getTime(),
      });
      // that.data.chatData.push(JSON.parse( JSON.stringify(that.data.sendInputMsg) ) );
      // that.setData({
      //   "chatData":that.data.chatData
      // })
      // that.setData({
      //   'scrollTop':10000
      // })
      let uploadTask = wx.uploadFile({
          url: `${app.globalData.httpHost}/chat/attach`,
          filePath: tempFilePaths,
          name: 'file',
          formData:{
            "watermark":watermark
          },
          header:{
            'content-type':'multipart/form-data'
          },
          success: function(res){
              var data = res.data;
              that.data.sendInputMsg.attachUrl = JSON.parse(res.data).data;
              that.sendSocketMessage( JSON.stringify( that.data.sendInputMsg),{upload:true} );
          },
          fail(res){
              system.msgTip({title: '提示',content: res.errMsg,scb(){},ccb(){}})
          }
        })
        uploadTask.onProgressUpdate((res) => {
            that.data.chatData[that.data.chatData.length - 1].progress = res.progress;
            that.setData({
              "chatData":that.data.chatData
            })
        })
  },
  chooseFile(event){
    var type = event.currentTarget.dataset.type;
    var watermark = event.currentTarget.dataset.watermark;
    var that = this;
    if( type == 1 ){
      wx.chooseImage({
        count:5,
        success: function(res) {
          res.tempFilePaths.forEach((val,i,arr)=>{
            that.upload( val , type ,watermark );
            console.log(i)
          })
        },
        fail(res){}
      })
    }else if( type == 6 ){//file文件
      wx.navigateTo({
        url:`/pages/fileList/index?groupMsg=${that.data.theGroupMsg.groupId}`
      })
    }
  },
  // 发送消息
  sendMsg( obj ){
    var that = this;
    let isTrue = false;
    this.data.theGroupMsg.groupUsers.filter((item)=>{
      if(item.act){
        isTrue = true;
        that.data.transmit.aiteContent += `@${item.username}(@\`-\`@)`;
        that.setData({
          ['sendInputMsg.toUser']:`${that.data.sendInputMsg.toUser},${item.openId}`
        })
      }
    })
    if( isTrue ){
      this.setData({ ['sendInputMsg.msgType']: 7 ,['sendInputMsg.content']: that.data.transmit.aiteContent + that.data.inputVal});
    }else{
      this.setData({['sendInputMsg.msgType']: 0,['sendInputMsg.content']: that.data.inputVal});
    }
    this.sendSocketMessage( JSON.stringify( that.data.sendInputMsg) ,obj );
  },
  aite(e){
    let that = this;
    this.setData({
      ['isHidden']:!that.data.isHidden,
      ['transmit.isAite']:!that.data.transmit.isAite
    })
  },
  navigateBack () {
    let page = getCurrentPages();
    backgroundAudioManager.stop();
    this.setData({
      ['model.show']:false,
      ['transmit.isTransmit']:false
    })    
    if(page.length > 1 && page.length < 8){//从登录页过来的。。。。
      wx.redirectTo({
        url: '/pages/home/index'
      })
    }else{
      wx.reLaunch({
        url: '/pages/home/index'
      })
    }
  },
  selUser(e){//选择群成员.....
    let _item = e.currentTarget.dataset;
    let that = this;
    if( that.data.theGroupMsg.groupId != _item.item.groupId ){
      this.data.transmit.groupList.forEach((val,i,arr)=>{
        if(val.groupId == _item.item.groupId){
          val.act = true;
        }else{
          val.act = false;
        }
        if( val.children.length > 0 ){
          val.children.forEach((value,ii,array)=>{
            if( value.groupId == _item.item.groupId ){
              value.act = true;
            }else{
              value.act = false;
            }
          })
        }
      })
    }
    this.setData({
      ['transmit.groupList']:that.data.transmit.groupList,
      ['selUser.selMe']:_item.item
    })
  },
  // 输入时
  onInput(event){
    let that = this;
    if( event.detail.value != '' && /^(?!(\s+$))/.test(event.detail.value)){
      var key = 'sendInputMsg.content';
      that.setData({ isInputing: true, "inputVal":event.detail.value });
    }else{
       this.setData({ isInputing: false });
    }
  },
  toggleIsHidden(e){//控制底部发送栏的显隐.....
    let that = this;
    if( e.currentTarget.id == "viewport" ){
      this.setData({
        isHidden:true,
        scrollHeight:wx.DEFAULT_CONTENT_HEIGHT + 15 + 'px',
        ['transmit.isAite']:true
      })
    }else{
      this.setData({
        isHidden:!this.data.isHidden,
        ['transmit.isAite']:true
      })
      this.setData({
        scrollHeight: !this.data.isHidden ?wx.DEFAULT_CONTENT_HEIGHT - 85 + 'px' : wx.DEFAULT_CONTENT_HEIGHT + 15 + 'px',
      })
      this.setData({
        scrollTop:10000000
      })
    }
  },
  scrllView(e){//滚动的时候发送已读消息回执...
    let that = this;
    // that.sendReadedReceipt();
  },
  loadTouchstart(e){
    
  },
  loadTouchend(e){
    // debugger;
  },
  loadTouchmove(e){

  },
  toggleMsgType(){//切换输入方式.....
    this.setData({ msgType: this.data.msgType == 0 ? 1 : 0 });
  },
  groupMsg(){//点击群信息......
    var that = this;
    let msg = JSON.stringify( that.data.theGroupMsg );
    wx.navigateTo({
      url: `/pages/groupMsg/index?item=${msg}`
    })
  }
}
</script>

<style lang="less">
  .msgTransCheckbox{
    .checkbox{
      .wx-checkbox-input{
        background-color: rgba(0,0,0,0);
      }
      .wx-checkbox-input-checked::before{

      }
    }
  }
  .readMe{
      display: inline-block;
      color:gray;
      font-size: 10px;
      position: absolute;
      bottom: -17px;
  }
  .inVoice{
    position:absolute;
    display:block;
    height:50px;
    width:100%;
    text-align:center;
    z-index:99999;
  }
  .historyLine{
    text-align: center;
    background-color: #cccccc;
    padding: 5px 10px;
    border-radius: 6px;
    font-size: 10px;
    margin: 10px 0;
    color: white;
  }
  .sendBtn{
    button{
      font-size:12px;
      padding:0;
    }
  }
  .sentType{
    justify-content:left;
    .sentType_col{
      margin:0 10px;
    }
    .iconfont{
      font-size:30px;
      padding:0px 8px;
      border:1px solid #999999;
      border-radius: 7px;
      color: #666666;
      &:active{
        opacity: 0.8;
      }
    }
  }
  .myInput{
    // background:rgba(255,255,255,1);
    border-radius:5px;
    border: 1px solid #999999;
    height: 30px;
    text-indent: 10px;
    padding-left: 5px;
  }
  .myWx-ai01 , .myWx-jia ,.myWx-jianpan,.myWx-unif032{
    font-size: 33px;
    color: #666666;
    &:active{
      opacity: 0.8;
    }
  }
  .fixed_bottom{
    background: #ffffff;
  }
.article{
  position: relative;
  width:100%;
  padding-top:66px;
  overflow: hidden;
  .groupMsgBtn{
      position: absolute;
      right: 12px;
      top: 80px;
      z-index: 1;
      font-size: 14px;
      border-radius: 12px;
      background-color: #FFF7F7FA;
      line-height: 24px;
      overflow: hidden;
      height:60rpx;
      .cBtn0{
        padding:0 30rpx;
        height:60rpx;
        line-height:60rpx;
        font-size:24rpx;
        margin:0;
        background-color:#FFF7F7FA!important;
        display:inline-block;
        border-radius:0;
        &::after{
          border: none;
        }
      }
      .line_icon{
        border-right:0.5px solid #DBD9D9;
        height:40rpx;
        position:relative;
        top:-20rpx;
      }
      .cancelSelect,.toGroupList{
        font-size: 34rpx;
      }
    }
}
.sentType0{
  padding: 20rpx 0;
  .mix-1px(0, 0, 1, 0, #ccc);
  .name{
    font-family:PingFang-SC-Medium;
    color:#666666;
    display:inline-block;
    font-size: 13px;
  }
  .groupDesc{
    font-size:11px;
    color:#999;
    .mix-text-overflow();
  }
}
.button-sp-area{
  button{
    // display: inline-block;
  }
}
.content{
    padding:0px 8px 0px 8px;
    .talkItem{
      padding:15px 0;
      margin-bottom:6px;
    }
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .left_icon2{
        background-color: #FF7360;
    }
    .left_icon3{
        background-color: #39CCC5;
    }
    .name,.job{
      font-family:PingFang-SC-Medium;
      color:rgba(102,102,102,1);
      max-width: 90px;
      display: inline-block;
      .mix-text-overflow();
    }
    .name{
      font-size: 13px;
    }
    .job{
      font-size: 11px;
    }
    .userMsg{
      vertical-align: top;
      line-height: 13px;
    }
    .talkContent{
      font-size: 15px;
      font-family:PingFang-SC-Medium;
      color:rgba(51,51,51,1);
      background-color: white;
      padding: 5px;
      border-radius: 5px;
      display: inline-block;
      max-width:90%;
      white-space: pre-line;
      overflow-wrap:break-word;
      text-align: left;
      min-height: 20px;
      position: relative;
    }
}
.myProgress{
  position:absolute;
  bottom:0px;
  left:0;
}
.loadingData{
  text-align:center;
  height:100%;
  position:absolute;
  width:100%;
  transition: all 0.3s;
  top:'-100%';
  z-index: 99999;
  .iconfont{
    // color: #666666;
    transition: all 0.3s;
    animation:myRotate 1.2s linear infinite;
  }
}
.userList{
  // flex:0!important;
}
.selUser0{
  font-size:0;
  border-radius:10rpx;
  .selUser0Txt{
    .mix-text-overflow();
    font-size:11px;
    color:#333;
    height:35px;
    display:inline-block;
    width:100%;
    text-align:center;
    line-height:35px;
    margin: 0;
    padding: 0;
    border-radius: 0px;
    &::after{
      border: none;
    }
  }
  .btnAct{
    background-color: #ccc;
  }
}
.txt9{
  .mix-text-overflow();
}
@keyframes myRotate
  {
    0% {
      transform:rotate(0deg);
      -ms-transform: rotate(0deg);
      -moz-transform:rotate(0deg);
      -webkit-transform:rotate(0deg);
      -o-transform:rotate(0deg);
    }
    100% {
      transform:rotate(360deg);
      -ms-transform: rotate(360deg);
      -moz-transform:rotate(360deg);
      -webkit-transform:rotate(360deg);
      -o-transform:rotate(360deg);
    }
  }
  .popup1{
    height: 100%;
    padding:0 20rpx;
    padding-top:50px;
    overflow: hidden;
    .title0{
      color:#333;
      font-size:14px;
      padding-left:13px;
      line-height:50px;
    }
  }
  .angleIcon{
    position:absolute;
    z-index:10000;
    right:68rpx;
    top:51rpx;
    display:inline-block;
    width:auto;
    font-size:22rpx;
    min-width:45rpx;
    height:45rpx;
    border-radius:50%;
    background-color:white;
    color:white;
    line-height:45rpx;
    padding:2rpx;
  }
  .angleIcon2{
    right:-17rpx;
    top:9rpx;
  }
  .atMsg {
    height: 100%;
    overflow: auto;
    width: 100px;
    .atMsgTxtName,.atMsgTxtContent{
      width: 100%;
      display: block;
    }
    .atMsgTxtName{
      font-size: 36rpx;
      color:#333;
    }
    .atMsgTxtContent{
      font-size: 30rpx;
      color: #666;
    }
  }
  .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .top_tip{
    background-color: #fff;
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .text{
        .ui-text{
            font-size: 16px;
            color: #313338;
        }
        .ui-view{
            color: #9C9FA4;
            font-size: 12px;
            .mix-text-overflow();
        }
        .txt{
          font-size:12px;
          font-family:PingFang-SC-Medium;
          color:rgba(102,102,102,1);
          text-align: left;
          .mix-text-overflow();
        }
    }
}
#container{
  height:100%;
  overflow:hidden;
  position:absolute;
  width:100%;
  top:0;
  bottom:0;
}
page{
  // overflow: hidden;
  // height: 100%;
}
</style>