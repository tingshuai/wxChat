<template id="page">
  <view id="container">
      <ui-nav-bar slot="nav-bar" class="nav_bar" custom-style="{{ {backgroundColor:'#267AFC',color:'#fff'} }}">
          <ui-row height="40">
              <ui-col vertical-align="middle" align="center" width="60" bindtap="navigateBack">
                  <icon class="iconfont myWx-iconfontqianjin2" style="font-size:25px;"></icon>
              </ui-col>
              <ui-col vertical-align="middle" align="center" class="title center">
                  {{ title }}
              </ui-col>
              <ui-col vertical-align="middle" align="center" width="80"></ui-col>
          </ui-row>
      </ui-nav-bar>
      <!-- 转发按钮 -->
      <ui-fixed-view top="120" right="50" class="groupMsgBtn" wx:if="{{ transmit.isTransmit }}">
        <button bindtap="showModel" class="seeGroupMsg cBtn0">转发</button>
      </ui-fixed-view>
      <view class="article" style="height:{{ transmit.tabBar.actItem == 0 ? scrollHeight : ( scrollHeight + 50 ) }}px;padding-top:{{ phoneModel == 'custom' ? 66 : 90 }}px">
        <view class="weui-cells weui-cells_after-title" style="height:40px;background-color:rgba(38,122,252,0.6);top:-1px;">
            <view class="weui-cell weui-cell_link" style="padding-left:10px;padding-right:5px;height:100%;" bindtap="groupMsg">
                <view class="weui-cell__bd" style="color:white;font-size:12px;">群信息</view>
                <view><icon class="iconfont myWx-xiangyou" style="font-size:16px;color:white;line-height:35px;"></icon></view>
            </view>
        </view>
        <!-- <view wx:if="{{ transmit.tabBar.actItem == 2 }}" style="height:90%;width:100%;padding:0px 100px;"><image style="width:100%;" mode="aspectFit" src="../../static/img/nothing.png"></image></view> -->
        <scroll-view scroll-y="true" bindscroll="scrllView" id="viewport" style="height: {{ transmit.tabBar.actItem == 0  ? (scrollHeight - 103) : (scrollHeight - 53)}}px;overflow:hidden;top:-2px;position:relative;" scroll-into-view="{{ toView }}" upper-threshold="0" bindscrolltoupper="bindscrolltoupper" scroll-top="{{ scrollTop }}" catchtap="toggleIsHidden"><!-- bindscrolltoupper="bindscrolltoupper"，，，，catch:touchstart="loadTouchstart" catch:touchend="loadTouchend" catch:touchmove="loadTouchmove"-->
          <view class="content" id="content">
            <checkbox-group bindchange="checkboxChange" class="checkboxGroup">
              <ui-row hover-class="touchui-hover" class="talkItem" wx:for="{{ chatData }}" wx:key="index" id="the{{index}}">
                    <view class="historyLine" wx:if="{{ (item.cmd == 'time' || item.cmd == '2') && item.content }}">{{ item.content }}</view>
                    <ui-col width="60" align="left" vertical-align="top" wx:if="{{ (item.cmd == 0 || item.cmd == 100) && (sendInputMsg.fromUser != item.fromUser)}}"><!--消息来自别人-->
                        <view class="left_icon left_icon1">
                            <image src="{{  item.headImgUrl }}"/>
                        </view>
                    </ui-col>
                    <!-- <view class="msgTransCheckbox" wx:if="{{ item.cmd == 0 && (sendInputMsg.fromUser == item.fromUser) && transmit.isTransmit }}"><checkbox-group data-item="{{ item }}" bindchange="checkboxChange"><label><checkbox class="checkbox" value="{{item.msgId}}"/></label></checkbox-group></view>消息转发选项框...... -->
                    <ui-col class="text" align="left" vertical-align="top" space-left="0" space-right="5" wx:if="{{ item.cmd == 0 || item.cmd == 100}}">
                        <view style="width: 100%; text-align:{{ sendInputMsg.fromUser == item.fromUser ? 'right' : 'left' }};">
                            <ui-row height="20" wx:if="{{ sendInputMsg.fromUser != item.fromUser }}">
                                <ui-col align="{{ sendInputMsg.fromUser == item.fromUser ? 'right' : 'left'}}" vertical-align="top">
                                    <view class="userMsg"><text class="name">{{ item.fromUserName }}</text><text decode="true">&nbsp;&nbsp;</text><text class="job">{{ item.position || '' }}</text></view>
                                </ui-col>
                            </ui-row>
                            <!--文本类型-->
                            <text selectable='true' class="talkContent" data-item="{{item}}" bind:longpress="{{transmit.tabBar.actItem == 0 ? 'openActionsheet' : ''}}" wx:if="{{ ( item.msgType == 0 && item.cmd != 100 ) || item.msgType == 7}}" style="background-color: white;">{{ item.content }} </text>
                            <!--需求类型-->
                            <view class="talkContent" data-item="{{item}}" bind:longpress="{{transmit.tabBar.actItem == 0 ? 'openActionsheet' : ''}}" data-item="{{ item }}" data-itemcontent="{{ item.content }}" data-index="{{ index }}" catchtap="retOrConfirm" wx:if="{{ item.msgType == 20 || item.msgType == 22 || item.msgType == 21 }}" style="background-color: white;width:100%;">
                              <ui-row style="border-bottom:1px solid rgba(0,0,0,0.1);">
                                  <ui-col style="color:{{ item.content.demandState ? '#4EBF62' : '#267AFC' }};font-size:12px;">{{ item.msgType == 20 || item.msgType == 21 ? "需求确认" : "修改需求确认" }}</ui-col>
                              </ui-row>
                              <ui-row style="height:60px;padding:7px 0;">
                                  <ui-col style="font-size:12px;" width="45">
                                    <image mode="aspectFit" src="../../static/img/Group6Copy@2x.png"></image>
                                  </ui-col>
                                  <ui-col style="font-size:12px;padding-left:10px;">
                                    <view style="white-space:nowrap;text-overflow:ellipsis;overflow:hidden;height:30px;">需求单{{ item.content.demandNum }}</view>
                                    <!-- <view style="white-space:nowrap;height:30px;line-height:40px;" wx:if="{{ sendInputMsg.fromUser == item.content.createUser && (item.content.demandState == false) }}">发起人<text>@</text>{{ item.fromUserName }}</view> -->
                                    <view style="white-space:nowrap;height:30px;line-height:40px;">确认人<text style="color: #FF9D44;">@{{ item.content.confirmUserName }}</text></view>
                                  </ui-col>
                              </ui-row>
                              <ui-row>
                                  <ui-col style="white-space:nowrap;font-size:12px;" wx:if="{{ item.content.demandState == true }}">确认日期{{ item.createAt }}</ui-col>
                              </ui-row>
                            </view>
                            <!--图片类型-->
                            <view class="talkContent" wx:if="{{ item.msgType == 1 }}" style="height:100px;background-color:rgba(0,0,0,0);width:40%;">
                              <image lazy-load="true" mode="aspectFill" data-item="{{item}}" bindtap="previewImage" bind:longpress="{{transmit.tabBar.actItem == 0 ? 'openActionsheet' : ''}}" style="height:100%;width:auto" src="{{ item.attachUrl }}"></image>
                              <view class="myProgress" wx:if="{{ item.progress >0 && item.progress < 100 }}" style="height:1px;width:{{ item.progress }}%;background-color: {{ item.progress == 100 && item.readCount >= 0 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view></view>
                            <!--语音类型-->
                            <view class="talkContent" wx:if="{{ item.msgType == 2 }}" style="width:{{ item.seeWord ? 'auto' : '100px' }};min-width:100px;" catchtap="playVoice" bind:longpress="{{transmit.tabBar.actItem == 0 ? 'openActionsheet' : ''}}" data-index="{{ index }}" data-item="{{item}}">
                                <image mode="aspectFit" style="height:20px;width:20px;float:{{ sendInputMsg.fromUser == item.fromUser ? 'left' : 'right'}}" src="{{ item.src ? item.src : '../../static/img/voice2.png' }}"></image>
                                <view style="border-top:1rpx solid #ddd;padding-top:3px;margin-top:28px;font-size:26rpx;color:#666;" class="voiceContent" wx:if="{{item.content != '' && item.content != null && item.seeWord }}">{{ item.content }}</view>
                                <view style="border-top:1rpx solid #ddd;padding-top:3px;margin-top:28px;color:rgba(255,100,100,0.8);font-size:26rpx;" class="voiceContent" wx:elif="{{ item.seeWord }}"> 无可识别内容 </view>
                                <!-- <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view> -->
                            </view>
                            <!--视频类型-->
                            <view class="talkContent" wx:if="{{ item.msgType == 3 }}" style="width:90%;">
                                <video style="width:100%;height:117px;" src="{{ item.attachUrl }}" controls></video>
                                <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view>
                            </view>
                            <!--文件类型-->
                            <view class="talkContent" wx:if="{{ item.msgType == 6 }}" data-item="{{item}}" style="width:80%;" catchtap="openFile">
                              <ui-row>
                                  <ui-col span="9" align="left" vertical-align="top" data-item="{{item}}" catch:longpress="{{transmit.tabBar.actItem == 0 ? 'openActionsheet' : ''}}">
                                      <view style="font-size:13px;color:#333333;">{{ item.content }}</view>
                                  </ui-col>
                                  <ui-col span="3">
                                    <text class="iconfont myWx-552cd47fba2cc" style="font-size:32px;text-align:center;"></text>
                                  </ui-col>
                              </ui-row>
                              <view style="border-top:1xp solid blue;"></view>
                              <view class="myProgress" wx:if="{{ item.progress }}" style="height:1px;width:{{ item.progress }}px;background-color: {{ item.progress == 100 ? '#49CC8D' : 'rgba(255,100,100,0.8)' }}"></view>
                            </view>
                            <!-- 评价 -->
                            <view class="talkContent" wx:if="{{ item.cmd == 100 || item.msgType == 30  }}" style="width:80%;">
                              <ui-row space-bottom="" style="height:30px;line-height:26px;">
                                  <ui-col align="left" vertical-align="top">
                                      <text style="font-size:14px;color:#333333;">项目办结消息提醒</text>
                                  </ui-col>
                              </ui-row>
                              <ui-row style="border-bottom:1px solid #EFEFEF;padding:0px 0 10px 0;">
                                  <ui-col align="left" vertical-align="top">
                                      <!-- <text style="font-size:13px;color:#333333;text-align:right;display:block;width:100%;font-size:13px;">{{ item.fromUserName }}邀请你对本次服务进行评价。</text> -->
                                      <text style="font-size:12px;color:#5C6466;text-align:left;display:block;width:100%;font-size:13px;">尊敬的客户你好，你的项目已经完结请对我们的服务进行评价。</text>
                                  </ui-col>
                              </ui-row>
                              <ui-row>
                                  <ui-col align="center" vertical-align="top">
                                      <text wx:if="{{ item.toUser == sendInputMsg.fromUser && transmit.tabBar.actItem == 0 }}" style="font-size:12px;color:#2A79FB;padding:9px 0;" catchtap="evaluateMe">点击评价</text>
                                      <text wx:else style="font-size:12px;color:#bbb;padding:9px 0;">点击评价</text>
                                  </ui-col>
                              </ui-row>
                            </view>
                        </view>
                        <view class="readMe" wx:if="{{ sendInputMsg.fromUser == item.fromUser }}" style="right:{{ sendInputMsg.fromUser == item.fromUser ? '5px' : '' }}">{{ theGroupMsg.groupUsers.length - item.readCount -1 >= 0 ? theGroupMsg.groupUsers.length - item.readCount -1 : '0'}} {{ item.readCount >= 0 ? "人未读" : ''}}</view>
                    </ui-col>
                    <ui-col class="text" align="center" vertical-align="top" space-left="0" space-right="0" wx:if="{{ item.cmd == 1 }}">
                        <view class="historyLine">{{ item.fromUserName }} 撤回了一条消息</view>
                    </ui-col>
                    <!-- 办结消息 -->
                    <!-- <ui-col class="text" align="center" vertical-align="top" space-left="0" space-right="0" wx:if="{{ item.cmd == 100 }}">
                        <view class="historyLine">{{ item.content }} </view>
                    </ui-col> -->
                    <ui-col width="60" align="left" vertical-align="top" wx:if="{{ item.cmd != 'time' && (sendInputMsg.fromUser == item.fromUser) && item.cmd != 2 && item.cmd != 1 }}"><!--消息来自自己-->
                        <view class="left_icon left_icon1">
                            <image src="{{  userMsg.headImgUrl }}"/>
                        </view>
                        <!-- 消息转发选项框...... -->
                    </ui-col>
                    <view class="msgTransCheckbox" wx:if="{{ item.cmd == 0 && transmit.isTransmit && item.msgType != 20 && item.msgType != 21 && item.msgType != 22 && item.msgType != 30}}"><checkbox color="#267AFC" checked="{{ item.checked }}" class="checkbox" value="{{ item.msgId }}"/></view>
                </ui-row>
              </checkbox-group>
          </view>
        </scroll-view>
        <ui-fixed-view top="30%" left="{{ voice.plVoice }}" style="z-index:9999;display:{{ voice.show ? 'block' : 'none' }}">
            <view class="fixed-view-content" style="background-color:rgba(0,0,0,0.5);padding:0px 35px 20px 35px;border-radius:7px;">
              <image src="{{ voice.icon }}" style="width:100px;height:100px;"></image>
              <text style="display:block;text-align:center;color:white;background-color:{{ voice.color }}">{{ voice.content }}</text>
            </view>
        </ui-fixed-view>
      </view>
      <!-- <cc-group-chat></cc-group-chat> -->
      <!-- <ccGroupChat></ccGroupChat> -->
      <!--底部输入工具-->
      <ui-fixed-view bottom="0" left="0" right="0" wx:if="{{ transmit.tabBar.actItem == 0 }}">
        <view class="fixed_bottom">
          <ui-row class="rowInputs" height="50" border-top border-bottom>
            <ui-col width="50" style="font-size:14px;" align="center" vertical-align="middle"><text class="iconfont {{ msgType == 0 ? 'myWx-jianpan' : 'myWx-yuyintonghua' }}" bindtap="toggleMsgType"></text></ui-col>
            <ui-col vertical-align="middle" hidden="{{ msgType == 0 }}"><input cursor-spacing="6" class="myInput" focus="{{inputIn.inputFocus}}" bindinput="onInput" value="{{ inputVal }}" style="background-color:white;"/></ui-col>
            <ui-col vertical-align="middle" hidden="{{ msgType == 1 }}"><button catch:touchstart="touchstart" catch:touchend="touchend" catch:touchmove="touchmove">按住说话</button></ui-col>
            <ui-col width="50" style="font-size:14px;" align="center" vertical-align="middle" hidden="{{ isInputing }}"><text class="iconfont myWx-jia" bindtap="toggleIsHidden"></text></ui-col>
            <ui-col width="55" vertical-align="middle" hidden="{{ !isInputing }}" class="sendBtn" space-left="3" space-right="3"><button type="primary" bindtap="sendMsg">发送</button></ui-col>
          </ui-row>
          <ui-row height="90" class="sentType" hidden="{{ isHidden }}" style="justify-content:flex-center;">
            <!-- 电话 -->
            <ui-col class="sentType_col" span="2" align="center" vertical-align="bottom">
              <image src="../../static/img/call.png" bindtap="callMe" style="width:50px;height:50px;"></image>
              <text class="tit12" style="font-size:12px;margin:8px 0 5px 0;">语音通话</text>
            </ui-col>
            <!-- 发送图片 -->
            <ui-col style="display:inline-block;" class="sentType_col" span="2" align="center" vertical-align="bottom">
              <!-- <text class="iconfont myWx-zhaopian1" bindtap="chooseFile" data-type="1" data-watermark = "false"></text> -->
              <image src="../../static/img/GroupCopy@2x.png" style="width:50px;height:50px;" bindtap="chooseFile" data-type="1" data-watermark = "false"></image>
              <text class="tit12" style="font-size:12px;margin:8px 0 5px 0;">照片</text>
            </ui-col>
            <!-- 发送水印图片 -->
            <ui-col style="display:inline-block;" class="sentType_col" span="2" align="center" vertical-align="bottom">
              <!-- <text class="iconfont myWx-tupianshuiyinshezhi" bindtap="chooseFile" data-type="1" data-watermark = "true" style="font-size:"></text> -->
              <image src="../../static/img/Group2Copy@2x.png" style="width:50px;height:50px;" bindtap="chooseFile" data-type="1" data-watermark = "true"></image>
              <text class="tit12" style="font-size:12px;margin:8px 0 5px 0;">水印</text>
            </ui-col>
            <!-- 查看文件 -->
            <ui-col class="sentType_col" span="2" align="center" vertical-align="bottom">
              <!-- <text class="iconfont myWx-wenjian1" bindtap="chooseFile" data-type="6"></text> -->
              <image src="../../static/img/Group3Copy@2x.png" bindtap="chooseFile" data-type="6" style="width:50px;height:50px;"></image>              
              <text class="tit12" style="font-size:12px;margin:8px 0 5px 0;">文件</text>
            </ui-col>
            <!-- @成员 -->
            <ui-col class="sentType_col" span="2" align="center" vertical-align="bottom">
              <!-- <text class="iconfont myWx-xiazai" bindtap="aite" data-type="9"></text> -->
              <image src="../../static/img/Group4Copy@2x.png" bindtap="aite" data-type="9" style="width:50px;height:50px;"></image>              
              <text class="tit12" style="font-size:12px;margin:8px 0 5px 0;">@人</text>
            </ui-col>
          </ui-row>
          <ui-row height="90" class="sentType" hidden="{{ isHidden }}" style="justify-content:flex-center;">
            <!-- 创建需求 -->
            <ui-col class="sentType_col" span="2" align="center" vertical-align="middle">
              <!-- <text class="iconfont myWx-bianji" bindtap="creatRequirement" data-type="7"></text> -->
              <image src="../../static/img/Group5Copy@2x.png" bindtap="creatRequirement" data-type="7" style="width:50px;height:50px;"></image>              
              <text class="tit12" style="font-size:12px;margin:8px 0 5px 0;">需求确认</text>
            </ui-col>
            <!-- 办结 -->
            <ui-col class="sentType_col" span="2" align="center" vertical-align="middle">
              <image src="../../static/img/pingjia.png" bindtap="aite" data-type="8" style="width:50px;height:50px;" wx:if="{{ sendInputMsg.isGroupManager }}"></image>   
              <text class="tit12" style="font-size:12px;margin:8px 0 5px 0;" wx:if="{{ sendInputMsg.isGroupManager }}">办结评价</text>
              <!-- <text class="iconfont myWx-banjie2" style=""></text> -->
            </ui-col>
            <ui-col class="sentType_col" span="2" align="center" vertical-align="middle"></ui-col>
            <ui-col class="sentType_col" span="2" align="center" vertical-align="middle"></ui-col>
            <ui-col class="sentType_col" span="2" align="center" vertical-align="middle"></ui-col>
          </ui-row>
          <scroll-view scroll-x class="sentType" hidden="{{ transmit.isAite }}" style="height:100px;white-space:nowrap;">
             <!-- hidden="{{ item.openId == theGroupMsg.managerId }}" -->
            <view style="display:{{ item.openId == sendInputMsg.fromUser ? 'none' : 'inline-block' }}" class="sentType_col" width="58" align="center" vertical-align="middle" data-isaite="true" data-index="{{ index }}" data-item="{{ item }}" wx:key="index" catchtap="selUser" wx:for="{{ theGroupMsg.groupUsers }}">
              <image mode="aspectFit" style="height:72px;" src="{{ item.headImgUrl == null ? defaultImg : item.headImgUrl }}"></image>
              <text style="text-align:center;" class="txt9">{{ item.username }}</text>
              <text class="angleIcon angleIcon2 iconfont myWx-dui3" wx:if="{{ item.act }}"></text>
              <icon class="iconfont myWx-fenxiang-copy" catchtap="comeOver" style="left:0px;position:absolute;background-color:white;top:10px;font-size:37px;width:42px;border:none;border-radius:0px;" wx:if="{{ item.act && selUser.actType == 8 }}" size="23"></icon>
            </view>
          </scroll-view>
        </view>
      </ui-fixed-view>
  </view>
</template>
<script>
import system from '../../static/utils/system'
var app = getApp();
var plugin = requirePlugin("WechatSI");
let wx_manager = plugin.getRecordRecognitionManager();
var recorderManager,wx_timer,wx_timer2,wx_n1=0,wx_n2=1,wx_promiseSubmitRequire;
var backgroundAudioManager=wx.getBackgroundAudioManager();
export default {
  config: {
    navigationBarTitleText: "欢迎进入群聊",
    usingComponents: {
      // 'cc-group-chat': '../../packages/cc-groupChat/index'
    }
  },
  data: {
    headerHeight:"",//头部栏的高
    phoneModel:"",//是否是刘海屏    
    defaultImg:"",//默认群头像.....
    toView:'',//要滚动的位置...
    msgType:true, //0-文字，1-语音
    isHidden:true,//图片输入显示隐藏
    isInputing:false,//判断是否正在输入
    title:"",//页面标题.....
    chatData:[],//聊天信息.....
    inputIn:{
      isLeft:false,//判断@成员显示隐藏
      inputFocus:false
    },
    selUserList:[],
    unReadList:[],
    model:{
      show:false,
      showMask:true,//修改需求的textare的弹出框
      value:"",
      faceColor:3
    },
    inputVal:"",//消息输入框的值......
    scrollHeight:wx.DEFAULT_CONTENT_HEIGHT + 15,
    sendInputMsg :{
      fromUser:app.globalData.openId,//发送人ID
      fromUserName:'',//发送人姓名
      toUser:'',//群聊不填，私聊必填
      content:"",//消息体
      cmd:0,//0发送消息，1-撤回消息,2-系统推送消息.
      msgType:0,//消息类型0-text,1-image,2-voice,3-vedio,4-music,5-news
      chatType:0,//聊天类型0-未知，1-公聊，2-私聊
      groupId:'',//群聊ID....群聊必填..
      attachUrl:'',//附件地址...
      position:"",
      msgId:'',
      groupName:'',
      status:0,
      isGroupManager:false,
      src:'../../static/img/voice2.png',//语音消息的图片地址
    },
    userMsg:{},
    theGroupMsg:{},
    scrollTop:1000,
    newHeight:0,
    pageNum:1,
    startPageY:'',
    voice:{
      plVoice:(wx.WIN_WIDTH - 170)/2 + 'px',//发送语音时话筒的距离左侧位置....
      color:'',
      show:false,
      content:'上划取消',
      icon:'../../static/img/record.gif',
      iconStop:false,
      play:'../../static/img/voice2.png',//聊天列表中的语音icon
      curItem:{}
    },
    fileSrc:'',//文件在webview中展示的地址
    transmit:{
      isAite:true,//是否显示转发消息checkbox
      isTransmit:false,//是否是转发......
      transData:[],//选中的项目.
      groupList:[],
      aiteContent:"",//@成员
      aiteId:[],
      tabBar:{
        "actItem":0
      }
    },
    loadingMsg:{//加载数据的loading
      top:'-100%',
      color:'#666666',
      startY:'',
      endY:''
    },
    selUser:{
      selMe:'',
      users:[],
      act:'',
      actType:""
    },
    pageMsg:{
      "_curPage":"",//当前页面
      "pageList":[]//页面栈
    }
  },
  onLoad(options){
    var that = this;
    var onFirst = 1;
    this.setData({
      "phoneModel":app.globalData.phoneModel,
      "scrollHeight":app.globalData.phoneModel == 'custom' ? this.data.scrollHeight : 23  + this.data.scrollHeight
    })
    let _item = JSON.parse( options.item );
    let _currentPage = getCurrentPages();
    let _curPage = _currentPage[ _currentPage.length - 1 ].route;
    this.setData({
      ["transmit.tabBar"]:_item.tabBar,
    })
    let loadPromise = new Promise((resolve,reject)=>{
      wx.getStorage({
        key: 'openId',
        success: function(res) {
            app.globalData.openId = res.data;
            wx.getStorage({
              key:'userMsgReq',
              success(res){
                app.globalData.userMsgReq = res.data;
              }
            })
            setTimeout(()=>{
              resolve();
            },200)
        },
        fail(res){
          wx.redirectTo({
            url: '/pages/login/index'
          })
        }
      })
    })
    loadPromise.then(()=>{
      // system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
      system.http({
        url:'chat/attach/defaultGroupIcon',
        method:"get",
        scb(res){
          app.globalData.defaultImg = res.data.data.base64Str;
          that.data.defaultImg = res.data.data.base64Str;
        }
      });
      this.setData({
        "title":_item.group.groupName,
        theGroupMsg:_item.group,
        userMsg:app.globalData.userMsgReq,
        ['sendInputMsg.groupName']:_item.group.groupName,
        ['sendInputMsg.fromUserName']:_item.user.username || app.globalData.userMsgReq.username,
        ['sendInputMsg.fromUser']:_item.user.openId || app.globalData.openId,
        ['sendInputMsg.groupId']:_item.group.groupId,
        ['sendInputMsg.position']:_item.user.position || app.globalData.userMsgReq.position,
        ['sendInputMsg.headImgUrl']:_item.user.headImgUrl || app.globalData.userMsgReq.headImgUrl,
        ["pageMsg._curPage"]:_curPage,
        ["pageMsg.pageList"]:_currentPage,
      })
      that.setData({
        ['sendInputMsg.isGroupManager']: _item.user.openId == _item.group.managerId ? true : false
      })
      this.data.theGroupMsg.groupUsers.forEach((val,i,arr)=>{
        that.data.selUser.users.push( val.username );
        that.setData({
          ['selUser.users']:that.data.selUser.users
        })
      })
      system.connectSocket(app)//连接socket.......
      that.reqGroupList();//请求群列表
      that.getHistoryMsg( that.data.theGroupMsg.groupId, 10 , that.data.pageNum,true );
      app.globalData.socketTask.onMessage(function(res) {
        var data = JSON.parse( res.data );
        var chatDataMsgId;
        if( onFirst == 1 ){
          that.data.chatData.forEach((val,ii,arr)=>{
            if(val.msgId){
              chatDataMsgId = val.msgId;
            }
          })
        }else{
            chatDataMsgId = data.msgId;
        }
        var dataMsg =JSON.stringify( { "cmd" : 3, msgId:chatDataMsgId, "groupId":data.groupId ,"fromUser":data.fromUser } ) ;
        function set(){
          if( data.groupId == that.data.sendInputMsg.groupId ){//非转发消息push进消息队列......
            that.data.chatData.push( data );
            that.setData({
              chatData:that.data.chatData,
              ["sendInputMsg.msgType"]:0,
              ["sendInputMsg.cmd"]:0
            })
            if( that.data.pageMsg._curPage == "pages/groupChat/index" ){
              that.setData({
                scrollTop:10000
              })
              // if(  data.msgType == 20 || data.msgType == 21 || data.msgType == 22 || data.msgType == 11){
              //   setTimeout(() => {
              //     that.sendReadedReceipt();
              //   }, 2000);
              // }else{
              //   }
              that.sendReadedReceipt();
              that.data.chatData.filter( (item)=>{
                let _is = that.data.transmit.transData.findIndex((it)=>{
                  return it == item.msgId
                })
                if( _is != -1 ){
                  item.checked = true;
                }
              })
              that.setData({
                "chatData":that.data.chatData
              })
            }
          }else{//转发消息返回的消息，说明转发成功了
            if( data.fromUser == app.globalData.openId){
               
            }
          }
        }
        function set2(){
           that.data.chatData.push( data );
            that.setData({
              chatData:that.data.chatData
            })
            that.setData({
              scrollTop:10000
            })
            if( that.data.pageMsg._curPage == "pages/groupChat/index" && data.msgType != 13 ){//data.msgType != 13 不是更新群信息
              that.sendReadedReceipt();
            }
        }
        if( data.cmd == 1 ){//撤回消息...
          that.data.chatData.forEach((val,i,arr) => {
            if( val.msgId == data.msgId ){
              that.data.chatData.splice(i,1)
              that.data.chatData.push({'cmd':data.cmd,'fromUser':data.fromUser,'fromUserName':data.fromUserName,'msgId':data.msgId,'status':data.status})
            }
          });
          that.setData({
            chatData:that.data.chatData
          })
        }else if( data.cmd == 0 ){//用户发送消息的时候发送 消息回执......
          if( data.msgType == 7){//@消息改写格式
            data.content = data.content.split('(@\`-\`@)').join(" ");
          }else if( data.msgType == 20 || data.msgType == 21 || data.msgType == 22 ){//需求
            data.content = JSON.parse(data.content);
            data.content.createAt = system.formatTime( data.content.createAt );
            that.data.chatData.filter((val)=>{
              if( val.msgId == data.content.disableMsgId ){
                val.content.editable = false
              }
            })
            set();
            that.setData({
              "chatData":that.data.chatData
            })
          }
          var isMe = data.fromUser == that.data.sendInputMsg.fromUser ? true : false;
          if(isMe){
            data.headImgUrl= that.data.userMsg.userHeadImg;
            if( data.msgType == 0 ){
              set();
            }else if( data.msgType == 7 ){//@消息.....
              set();
              that.data.theGroupMsg.groupUsers.filter((item)=>{
                item.act = false;
              })
              that.data.theGroupMsg.groupUsers.forEach((val,i,arr)=>{
                 val.act = false;
              })
              that.setData({
                ["transmit.isAite"]:true,
                isHidden:true,
                theGroupMsg:that.data.theGroupMsg,
                scrollHeight:wx.DEFAULT_CONTENT_HEIGHT + 15,
                ['transmit.aiteContent']:'',
                ['theGroupMsg.groupUsers']:that.data.theGroupMsg.groupUsers
              })
            }else if(data.msgType == 1 || data.msgType == 2 || data.msgType == 30 ){//图片和语音...
              set();
            }
            that.setData({
              ['sendInputMsg.content']:'',
              "inputVal":'',
              'isInputing': false
            })
          }else{
            data.content.replace( /@.*(\(@`-`@\))/g , '' );
            set();
          }
        }else if( data.cmd == 2 ){//系统推送消息.
          set2();
          if( onFirst == 1 && data.msgType != 11 ){
            system.sendSocketMessage({
              "_app":app.globalData,
              "params":dataMsg
            })
            onFirst ++ ;
          }
          if( data.msgType == 11 && that.data.pageMsg._curPage == "pages/groupChat/index"){
            system.msgTip({
              title:"该群已解散",
              icon:"none",
              time:1500
            })
            setTimeout(()=>{
              that.navigateBack();
            },1500)
          }
        }else if( data.cmd == 3 ){//已读消息提醒.....
          that.data.chatData.filter((val)=>{
            if( val.msgId == data.msgId ){
              val.readStatus = 1;
              val.readCount = data.readCount;
              return val;
            }
          })
          that.setData({
            chatData:that.data.chatData,
          })
        }else if( data.cmd == 100 ){
          set();
        }
      })//onMessage结束...
    })//resolve函数结束....
  },
  onUnload( e ){
    // let prePage = this.data.pageMsg.pageList[this.data.pageMsg.pageList.length - 2].route
    // if( prePage == "pages/home/index" && wx.IS_ANDROID){
    //   wx.redirectTo({
    //     url: '/pages/home/index'
    //   })
    // }
  },
  evaluateMe(e){//评价消息
    let that = this;
    wx.navigateTo({
      url:`/pages/evaluate/index?groupMsg=${ JSON.stringify( that.data.theGroupMsg ) }`
    })
  },
  callMe(e){
    wx.navigateTo({
      url:`/pages/userList/index?userList=${ JSON.stringify( this.data.theGroupMsg.groupUsers ) }`
    })
  },
  retOrConfirm(e){
    let _item  = e.currentTarget.dataset;
    let that = this;
    let _obj = {
      "groupMsg":that.data.theGroupMsg,
      "item":_item,
      "enterType":1
    }
    app.globalData._obj = JSON.stringify(_obj)
    wx.navigateTo({
      url:`/pages/CreateRequirement/index`//编辑进
    })
  },
  handleShowMask (e) {
    let _item = e.currentTarget.dataset;
    let that = this;
    this.setData({
      ['model.showMask']: false
    })
  },
  requireTextareaInputing(e){
    let that = this;
    this.setData({
      ["model.value"]:e.detail.value
    })
  },
  sendReadedReceipt( item ){//发送已读消息回执....
    let that = this;
    this.data.chatData.forEach((val,i,arr)=>{
      wx.createSelectorQuery().select(`#the${i}`).boundingClientRect(function(rect){
        var a = that.data.chatData[i].readStatus;
        let _IF1 = ( that.data.chatData[i].readStatus == 1 && that.data.chatData[i].fromUser == app.globalData.openId );//消息来自自己切已读..
        if( that.data.chatData[i].readStatus == 0 && rect.top >= 0 && that.data.chatData[i].fromUser != app.globalData.openId ){
          val.readStatus = 1;
          let _params = JSON.stringify({msgId:that.data.chatData[i].msgId,cmd:'3',groupId:that.data.theGroupMsg.groupId,fromUser:that.data.chatData[i].fromUser});
          system.sendSocketMessage({
            "_app":app.globalData,
            "params":_params
          })
        }
      }).exec()
    })
  },
  checkboxChange(e){ //消息转发选项框选中事件......
    let that = this;
    this.setData({
      ['transmit.transData']:e.detail.value
    })
    console.log( "chatData",that.data.chatData)
  },
  creatRequirement(e){//新增需求......
    let that = this;
    let _item  = e.currentTarget.dataset;
    let _obj = {
      "groupMsg":that.data.theGroupMsg,
      "item":_item,
      "enterType":0
    }
    app.globalData._obj = JSON.stringify(_obj)
    wx.navigateTo({
      url:`/pages/CreateRequirement/index`//新增进
    })
  },
  showModel(){
        let that = this;
        let _obj = {
            chatData:that.data.chatData,
            transData:that.data.transmit.transData
        }
        app.globalData._obj = JSON.stringify( _obj )
        wx.navigateTo({
            url:`/pages/groupList/index`
        })
        that.data.chatData.filter(( item )=>{
            if( item.checked == true ){
              item.checked = false;
            }
        })
        that.setData({
            ["transmit.isTransmit"]:false,
            "chatData": that.data.chatData
        })
  },
  previewImage: function(e){//图片预览.....
    var imgUrl = e.currentTarget.dataset.item.attachUrl;
    var imgList = [];
    this.data.chatData.forEach((val,i,arr)=>{
      if( val.msgType == 1 ){
        imgList.push( val.attachUrl );
      }
    })
    wx.previewImage({
        current: imgUrl, // 当前显示图片的http链接
        urls: imgList // 需要预览的图片http链接列表
    })
  },
  remind(item){//提醒查看.....
      let that = this;
      system.http({
       url:'chat/msg/chatRemind',
       method:'post',
       header:{'content-type': 'application/x-www-form-urlencoded'},
       param:{
         groupId:item.groupId,
         fromUserName:item.fromUserName,
         headImgUrl:that.data.theGroupMsg.icon,
         managerId :that.data.theGroupMsg.managerId,
         groupName :that.data.theGroupMsg.groupName,
         sessionId:app.globalData.sessionId
       },
       scb(res){
         system.stateMsg({title:"提醒成功",icon:"success",time:1000})
       },
       fcb(res){
         system.stateMsg({title:"提醒失败",icon:"none",time:1000})
       }
     })
  },
  openActionsheet(e){
    var that = this;
    var dataset = e.currentTarget.dataset;
    var item = e.currentTarget.dataset.item;
    var typeCode = e.currentTarget.dataset.item.msgType;
    var list = [];
    let creatTime = '';
    if(item.createAt.toString().search('-') != -1){
      creatTime = Date.parse(item.createAt.toString().replace(/-/g,"/"))
    }else{
      creatTime = item.createAt
    }
    function toggle(){
      if(new Date().getTime() - creatTime > 120000){
        typeCode == 2 ? list = ['转发',"语音转文字"] : ( (typeCode == 20 || typeCode == 21 || typeCode == 22 || typeCode == 30) ? list = [] : list = ['转发']);
      }else{
        typeCode == 2 ? list = ['转发','撤回',"语音转文字"] : ( (typeCode == 20 || typeCode == 21 || typeCode == 22) ? list = [] : list = ['转发','撤回']);
      }
    }
    if( item.fromUser == that.data.sendInputMsg.fromUser ){
      toggle();
    }else{
      typeCode == 2 ? list = ["转发","语音转文字"] : list = ["转发"];
    }
    // 语音转文字后更新内容.....
    function changeData(){
      that.data.chatData[dataset.index].seeWord = true;
      that.setData({
        'chatData':that.data.chatData
      })
    }
    function _implement (code){
      if( list[code] == "语音转文字"){
        changeData();
      }else if( list[code] == "转发" ){
        that.data.chatData.filter((item_0)=>{
          if(item_0.msgId == item.msgId){
            item_0.checked = true;
            that.data.transmit.transData.push( item_0.msgId )
          }
        })
        that.setData({
          "chatData":that.data.chatData,
          ["transmit.isTransmit"]:true,
          ['inputIn.isLeft']:true,
        })
      }else if( list[code] == "撤回" ){
        let _params = JSON.stringify({msgId:item.msgId,cmd:'1',groupId:item.groupId,fromUser:item.fromUser,fromUserName:item.fromUserName});
        system.sendSocketMessage({
          "_app":app.globalData,
          "params":_params
        })
      }
    }
    if( list.length != 0 ){
      wx.showActionSheet({
          itemList: list,
          success: function(res) {
              _implement(res.tapIndex);
          }
      });
    }
  },
  handleShow3(){
      this.setData({
        ['model.show']:false
      })
  },
  reqGroupList(e){
    let that = this;
    system.http({ url:`chat/groups/tree`, method:"get",param:{openId:app.globalData.openId} ,header:{'content-type': 'application/x-www-form-urlencoded'},scb(res){
        that.setData({
          ['transmit.groupList']:res.data.data.rows,
          ['selUser.selMe']:res.data.data.rows[0]
        })
    }})
  },
  touchmove(e){
    let that = this;
    let moveY = this.data.startPageY -  e.changedTouches[0].pageY;
    if( moveY > 80 ){
      this.setData({
        ['voice.icon']:"../../static/img/back_voice.png",
        ['voice.content']:'松手取消发送',
        ['voice.color']:'rgba(200,0,0,0.6)',
        ['voice.iconStop']:true
      })
    }else{
      this.setData({
        ['voice.color']:'',
        ['voice.icon']:"../../static/img/record.gif",
        ['voice.content']:'上滑取消',
        ['voice.iconStop']:false
      })
    }
  },
  touchstart(e){
    var that = this;
    var music = function(){
      wx_manager.start({duration:30000, lang: "zh_CN"});//开始转译
    }
    that.setData({
      ['voice.iconStop']:false
    })
    wx.getSetting({
      success(res) {
        if (!res.authSetting['scope.record']) {
          wx.authorize({
            scope: 'scope.record',
                  success() {
                    // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问
                     music();
                  }
              })
            }else{
              music();
            }
        }
    })
    wx_manager.onRecognize = function(res) {
      console.log("current onRecognize", res)
    }
    wx_manager.onStop = function(res) {
      that.upload(res.tempFilePath , 2, "false" ,res.result);
    }
    var pageY = e.changedTouches[0].pageY;
    this.setData({
      startPageY:pageY,
      ['voice.show']:true
    })
  },
  touchend(e){
    // recorderManager.stop();
    wx_manager.stop();
    this.setData({['voice.show']:false,['voice.content']:"上滑取消",['voice.icon']:"../../static/img/record.gif",});
  },
  openFile(e){
    var that = this;
    var item = e.currentTarget.dataset.item;
    const downloadTask = wx.downloadFile({
      url:item.attachUrl,
      success(ress) {
        // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
        function validate(url){//检测文件类型
          var d = /\.[^\.]+$/.exec(url);
          return d;
        }
        if (ress.statusCode === 200) {
            if( validate(ress.tempFilePath) == ".doc" || validate(ress.tempFilePath) == ".xls" || validate(ress.tempFilePath) == ".ppt" || validate(ress.tempFilePath) == ".pdf" || validate(ress.tempFilePath) == ".docx" || validate(ress.tempFilePath) == ".xlsx" || validate(ress.tempFilePath) == ".pptx" ){
              wx.openDocument({
                filePath: ress.tempFilePath,
                success(res) {},
                fail(res){}
              })
            }else{//不支持类型.....
              wx.navigateTo({
                url: `/pages/webView/index?fileUrl=${item.attachUrl}`,
                success(res){},
                fail(res){}
              })
            }
        }
      },
      fail(res){
        system.msgTip({title: '提示',content: res.errMsg,scb(){},ccb(){}})
      }
    })
    downloadTask.onProgressUpdate((res) => {})
  },
  bindscrolltoupper(e){
    var that = this;
    this.setData({
      ['loadingMsg.top']:0,
      ['loadingMsg.color']:'#666666'
    })
    system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
    this.getHistoryMsg( that.data.theGroupMsg.groupId ,10 , that.data.pageNum ,false,e);
  },
  // 播放语音....
  playVoice(e){
    var that = this;
    var item = e.currentTarget.dataset.item;
    var i = e.currentTarget.dataset.index;
    backgroundAudioManager.index
    if( backgroundAudioManager.paused == false ){//正在播放.....
      if( backgroundAudioManager.index == i ){
          backgroundAudioManager.stop();
          this.setData({
            [`chatData[${i}].src`]:'../../static/img/voice2.png',
          })
      }else{
        backgroundAudioManager.stop();
        this.setData({
          [`chatData[${backgroundAudioManager.index}].src`]:'../../static/img/voice2.png',
        })
        backgroundAudioManager.title = "语音消息"
        backgroundAudioManager.index = e.currentTarget.dataset.index
        backgroundAudioManager.epname = item.fromUserName
        backgroundAudioManager.singer = item.fromUserName
        backgroundAudioManager.coverImgUrl = item.headImgUrl
        backgroundAudioManager.src = item.attachUrl; // 设置了 src 之后会自动播放
      }
      console.log( "播放1", backgroundAudioManager.paused );
    }else{
        backgroundAudioManager.stop();
        backgroundAudioManager.title = "语音消息"
        backgroundAudioManager.index = e.currentTarget.dataset.index
        backgroundAudioManager.epname = item.fromUserName
        backgroundAudioManager.singer = item.fromUserName
        backgroundAudioManager.coverImgUrl = item.headImgUrl
        backgroundAudioManager.src = item.attachUrl; // 设置了 src 之后会自动播放
      console.log( "播放2", backgroundAudioManager.paused );
    }
    console.log("播放状态", backgroundAudioManager.paused )
    backgroundAudioManager.onPlay(()=>{
      var d = that.data.chatData[i];
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice.gif',
      })
    })
    backgroundAudioManager.onPause(()=>{
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice2.png',
      })
    })
    backgroundAudioManager.onStop((res)=>{
      this.data.chatData.forEach((val,ii ,arr)=>{
        this.setData({
          [`chatData[${ii}].src`]:'../../static/img/voice2.png',
        })
      })
    })
    backgroundAudioManager.onEnded(()=>{
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice2.png',
      })
    })
  },
  // 请求历史记录....
  getHistoryMsg(id,size,num,isFirst,event){
    var that= this;
    wx.request({
      url: `${app.globalData.httpHost}/chat/msg/${ that.data.transmit.tabBar.actItem == 2 ? 'getHisGroupMsg' : 'getGroupMsg'}`,
      data: {
         groupId : id ,//群ID
         pageSize : size,//一页几条
         pageNum :num,//第几页
         openId:app.globalData.openId
      },
      success: function(res) {
        if( res.data.status == 200 ){
          var oldList = that.data.chatData.length;
          res.data.data.rows.forEach((val,i,arr)=>{//未读@信息......
            if(val.msgType == 7 && /(@\`-\`@)/.test(val.content) ){
              val.content = val.content.split('(@\`-\`@)').join(' ');
            }else if( val.msgType == 20 || val.msgType == 22 || val.msgType == 21){
              val.content = JSON.parse( val.content )
              val.content.createAt = system.formatTime( val.content.createAt );
            }else if( val.msgType == 0 ){
              val.content = val.content.replace(/@.*(\(@`-`@\))/g,'')
            }
          })
          that.data.chatData.splice(0,0,...res.data.data.rows);
          that.setData({
            chatData:that.data.chatData,
            pageNum:++that.data.pageNum
          })
          var newList = that.data.chatData.length;
          if(isFirst){
            that.setData({scrollTop:10000});
            that.sendReadedReceipt();
          }else{
            that.setData({toView:`the${newList - oldList}`});//回滚到原来查看的位置
            that.setData({
              ['loadingMsg.top']:'-100%',
              ['loadingMsg.color']:'#A0E75A'
            })
          }
          wx.hideToast()
          console.log( "history-------", res.data.data )
        }else{
          wx.hideToast()
          // system.stateMsg({title: res.data.message,time:1500,icon:"none",scb(){},ccb(){}})
        }
      }
    })
  },
  // 上传.....
  upload( tempFilePaths , type ,watermark , contentMsg=""){
    var that = this;
    let uploadTask;
      that.setData({
        ['sendInputMsg.msgType']:type,
        ['sendInputMsg.content']:contentMsg,
        ['sendInputMsg.attachUrl']:tempFilePaths,
        ['sendInputMsg.progress']:0,
        ['sendInputMsg.createAt']:new Date().getTime(),
      });
      return new Promise((resolve, reject) => {
        uploadTask = wx.uploadFile({
            url: `${app.globalData.httpHost}/chat/attach`,
            filePath: tempFilePaths,
            name: 'file',
            formData:{
              "watermark":watermark
            },
            header:{'content-type':'multipart/form-data'},
            success: function(res){
                var data = res.data;
                if( type == 2 ){//发送语音
                  that.data.sendInputMsg.attachUrl = JSON.parse(data).data;
                  let _params = JSON.stringify( that.data.sendInputMsg);
                  system.sendSocketMessage({
                    "_app":app.globalData,
                    "params":_params
                  })
                }
                resolve( res.data );
            },
            fail(res){
                system.msgTip({title: '提示',content: res.errMsg,scb(){},ccb(){}})
                reject()
            }
          })
          // uploadTask.onProgressUpdate((res) => {
          //     that.data.chatData[that.data.chatData.length - 1].progress = res.progress;
          //     that.setData({
          //       "chatData":that.data.chatData
          //     })
          // })
      })
  },
  chooseFile(event){
    var type = event.currentTarget.dataset.type;
    var watermark = event.currentTarget.dataset.watermark;
    var that = this;
    if( type == 1 ){
      wx.chooseImage({
        count:5,
        success: function(res) {
          let promises = res.tempFilePaths.map(( val,i,arr )=>{
            return that.upload( val , type ,watermark );
          });
          Promise.all(promises).then((obj_i) => {
              obj_i.forEach((val,i,arr)=>{
                that.data.sendInputMsg.attachUrl = JSON.parse(val).data;
                let _params = JSON.stringify( that.data.sendInputMsg );
                system.sendSocketMessage({
                  "_app":app.globalData,
                  "params":_params
                })                
              })
          }).catch((err) => {
              console.log(err);
          })
        },
        fail(res){}
      })
    }else if( type == 6 ){//file文件
      wx.navigateTo({
        url:`/pages/fileList/index?groupMsg=${that.data.theGroupMsg.groupId}`
      })
    }
  },
  // 发送消息
  sendMsg( obj ){
    var that = this;
    let isTrue = false;
    if( this.data.selUser.actType == 9 ){//9为发送@消息
      this.data.theGroupMsg.groupUsers.filter((item)=>{ 
        if(item.act){
          isTrue = true;
          that.data.transmit.aiteContent += `@${item.username}(@\`-\`@)`;
          that.setData({
            ['sendInputMsg.toUser']:`${that.data.sendInputMsg.toUser},${item.openId}`
          })
        }
      })
    }
    if( isTrue ){
      this.setData({ ['sendInputMsg.msgType']: 7 ,['sendInputMsg.content']: that.data.transmit.aiteContent + that.data.inputVal});
    }else{
      this.setData({['sendInputMsg.msgType']: 0,['sendInputMsg.content']: that.data.inputVal});
    }
    let _params = JSON.stringify( that.data.sendInputMsg );
    system.sendSocketMessage({
      "_app":app.globalData,
      "params": _params
    })
  },
  aite(e){
    let that = this;
    this.setData({
      ['isHidden']:!that.data.isHidden,
      ['transmit.isAite']:!that.data.transmit.isAite,
      ["selUser.actType"]:e.currentTarget.dataset.type,
      "scrollHeight": app.globalData.phoneModel == 'custom' ? wx.DEFAULT_CONTENT_HEIGHT - 85 : wx.DEFAULT_CONTENT_HEIGHT - 63
    })
  },
  navigateBack () {
    let that = this;
    let page = getCurrentPages();
    wx.redirectTo({
      url: `/pages/home/index?actItem=${that.data.transmit.tabBar.actItem}`
    })
    // if(page.length > 1 && page.length < 8){//从登录页过来的。。。。
    //   wx.navigateBack();
    // }else{//从公众号过来的.....
    // }
  },
  comeOver(e){//这个是要发送办结消息.....
    let _me = this.data.sendInputMsg;
    let _groupMsg = this.data.theGroupMsg;
    let that = this;
    let _selMe = this.data.theGroupMsg.groupUsers.filter((val)=>{
      return val.act == true
    })
    let _params = {fromUser:_me.fromUser,fromUserName:_me.fromUserName,groupId:_groupMsg.groupId,groupName:_groupMsg.groupName,headImgUrl:_me.headImgUrl,position:_me.position,toUser: _selMe[0].openId}
    system.http({
      url:"review/finish",
      param:_params,
      method:"post",
      header:{'content-type': 'application/x-www-form-urlencoded'},
      scb(res){
        that.setData({
          "isHidden":true,
          ["transmit.isAite"]:true,
          scrollHeight:wx.DEFAULT_CONTENT_HEIGHT + 15
        })
        system.stateMsg({
          title:"发送评价成功",
          icon:"success",
          time:1500
        })
        that.data.sendInputMsg.cmd = 100;
        that.data.sendInputMsg.content = "群主已发起办结"
        let _params = JSON.stringify( that.data.sendInputMsg );
        // system.sendSocketMessage({
        //   "_app":app.globalData,
        //   "params":_params
        // })
        // setTimeout(()=>{
        //   that.navigateBack();
        // },1500)
      },
      fcb(res){
        system.stateMsg({
          title:"发送评价失败",
          icon:"success",
          time:1500
        })
      }
    })
  },
  selUser(e){//选择群成员.....
    let that = this;
    let _item = e.currentTarget.dataset;
    if( this.data.selUser.actType == 8){//办结....
      this.data.theGroupMsg.groupUsers.filter((val)=>{
        if( val.openId == _item.item.openId ){
          val.act = true;
        }else{
          val.act = false;
        }
      })
    }else if( this.data.selUser.actType == 9 ){//@
      this.data.theGroupMsg.groupUsers.filter((val)=>{
        if( val.openId == _item.item.openId ){
          val.act = !val.act;
        }
      })
      let _cont = this.data.theGroupMsg.groupUsers.filter((val)=>{
        return val.act == true;
      })
      if( _cont.length > 0 ){//是否选中要@的人....
          that.setData({
            'isInputing': true
          })
      }else{
          that.setData({
            'isInputing': false
          })        
      }
    }
    this.setData({
      ['theGroupMsg.groupUsers']:that.data.theGroupMsg.groupUsers
    })
  },
  // 输入时
  onInput(event){
    let that = this;
    if( event.detail.value != '' && /^(?!(\s+$))/.test(event.detail.value)){
      var key = 'sendInputMsg.content';
      that.setData({ isInputing: true, "inputVal":event.detail.value });
    }else{
       this.setData({ isInputing: false });
    }
  },
  toggleIsHidden(e){//控制底部发送栏的显隐.....
    let that = this;
    if( e.currentTarget.id == "viewport" ){
      this.setData({
        isHidden:true,
        scrollHeight:app.globalData.phoneModel == 'custom' ? wx.DEFAULT_CONTENT_HEIGHT + 15 : wx.DEFAULT_CONTENT_HEIGHT + 38,
        ['transmit.isAite']:true
      })
    }else{
      this.setData({
        isHidden:!this.data.isHidden,
        ['transmit.isAite']:true
      })
      this.setData({
        scrollHeight: !this.data.isHidden ? ( app.globalData.phoneModel == 'custom' ? wx.DEFAULT_CONTENT_HEIGHT - 165 : wx.DEFAULT_CONTENT_HEIGHT - 145 ): app.globalData.phoneModel == 'custom' ? wx.DEFAULT_CONTENT_HEIGHT + 15 : wx.DEFAULT_CONTENT_HEIGHT + 38,
      })
      this.setData({
        scrollTop:10000000
      })
    }
  },
  scrllView(e){//滚动的时候发送已读消息回执...
    let that = this;
    that.sendReadedReceipt();
  },
  loadTouchstart(e){
    
  },
  loadTouchend(e){
    // debugger;
  },
  loadTouchmove(e){

  },
  toggleMsgType(){//切换输入方式.....
    this.setData({ msgType: this.data.msgType == 0 ? 1 : 0 });
  },
  groupMsg(){//点击群信息......
    var that = this;
    let msg = JSON.stringify( that.data.theGroupMsg );
    wx.navigateTo({
      url: `/pages/groupMsg/index?item=${msg}&tabBar=${ JSON.stringify( that.data.transmit.tabBar ) }`
    })
  }
}
</script>

<style lang="less">
  .msgTransCheckbox{
    .checkbox{
      .wx-checkbox-input{
        background-color: rgba(0,0,0,0);
      }
      .wx-checkbox-input-checked::before{

      }
    }
  }
  .readMe{
      display: inline-block;
      color:gray;
      font-size: 10px;
      position: absolute;
      bottom: -17px;
  }
  .inVoice{
    position:absolute;
    display:block;
    height:50px;
    width:100%;
    text-align:center;
    z-index:99999;
  }
  .historyLine{
    text-align: center;
    background-color: #cccccc;
    padding: 5px 10px;
    border-radius: 6px;
    font-size: 10px;
    margin: 10px 0;
    color: white;
  }
  .sendBtn{
    button{
      font-size:12px;
      padding:0;
    }
  }
  .sentType{
    transition: all 0.2s;

    .sentType_col{
      margin:0 5px;
      display:inline-block;
      width:50px;
      text-align: center;
      position: relative;
    }
    .iconfont{
      font-size:30px;
      padding:0px 8px;
      // border:1px solid #999999;
      // border-radius: 7px;
      background-color: white;
      color: #666666;
      &:active{
        opacity: 0.8;
      }
    }
  }
  .myInput{
    height: 30px;
    text-indent: 10px;
    padding-left: 5px;
  }
  .myWx-ai01 , .myWx-jia ,.myWx-jianpan,.myWx-unif032,.myWx-yuyintonghua{
    font-size: 38px;
    color: #555;
    &:active{
      opacity: 0.8;
    }
  }
  .fixed_bottom{
    background-color:#F7F7FA;
    border-top:1px solid #ddd;
  }
  .tit12{
    font-size:12px;
  }
  .article{
    position: relative;
    width:100%;
    overflow: hidden;
  }
    .groupMsgBtn{
        position: relative;
        // right:48px;
        // top:115px;
        z-index: 10000;
        font-size: 14px;
        border-radius: 12px;
        background-color: #FFF7F7FA;
        line-height: 24px;
        overflow: hidden;
        height:60rpx;
        .cBtn0{
          padding:0 30rpx;
          height:60rpx;
          line-height:60rpx;
          font-size:24rpx;
          margin:0;
          background-color:#FFF7F7FA!important;
          display:inline-block;
          border-radius:13px;
          &::after{
            border: none;
          }
        }
        .line_icon{
          border-right:0.5px solid #DBD9D9;
          height:40rpx;
          position:relative;
          top:-20rpx;
        }
        .cancelSelect,.toGroupList{
          font-size: 34rpx;
        }
      }
.sentType0{
  padding: 20rpx 0;
  .mix-1px(0, 0, 1, 0, #ccc);
  .name{
    font-family:PingFang-SC-Medium;
    color:#666666;
    display:inline-block;
    font-size: 13px;
  }
  .groupDesc{
    font-size:11px;
    color:#999;
    .mix-text-overflow();
  }
}
.button-sp-area{
  button{
    // display: inline-block;
  }
}
#viewport{
  transition: all 0.2s;
}
.content{
    padding:0px 8px 0px 8px;
    transition: all 0.2s;
    .talkItem{
      padding:15px 0;
      margin-bottom:6px;
    }
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .left_icon2{
        background-color: #FF7360;
    }
    .left_icon3{
        background-color: #39CCC5;
    }
    .name,.job{
      font-family:PingFang-SC-Medium;
      color:rgba(102,102,102,1);
      max-width: 90px;
      display: inline-block;
      .mix-text-overflow();
    }
    .name{
      font-size: 13px;
    }
    .job{
      font-size: 11px;
    }
    .userMsg{
      vertical-align: top;
      line-height: 13px;
    }
    .talkContent{
      font-size: 15px;
      font-family:PingFang-SC-Medium;
      color:rgba(51,51,51,1);
      background-color: white;
      padding: 5px 10px;
      border-radius: 5px;
      display: inline-block;
      max-width:90%;
      white-space: pre-line;
      overflow-wrap:break-word;
      text-align: left;
      min-height: 20px;
      position: relative;
    }
}
.myProgress{
  position:absolute;
  bottom:0px;
  left:0;
}
.loadingData{
  text-align:center;
  height:100%;
  position:absolute;
  width:100%;
  transition: all 0.3s;
  top:'-100%';
  z-index: 99999;
  .iconfont{
    // color: #666666;
    transition: all 0.3s;
    animation:myRotate 1.2s linear infinite;
  }
}
.userList{
  // flex:0!important;
}
.selUser0{
  font-size:0;
  border-radius:10rpx;
  .selUser0Txt{
    .mix-text-overflow();
    font-size:11px;
    color:#333;
    height:35px;
    display:inline-block;
    width:100%;
    text-align:center;
    line-height:35px;
    margin: 0;
    padding: 0;
    border-radius: 0px;
    &::after{
      border: none;
    }
  }
  .btnAct{
    background-color: #ccc;
  }
}
.txt9{
  width:100%;
  display:inline-block;
  .mix-text-overflow();
}
@keyframes myRotate
  {
    0% {
      transform:rotate(0deg);
      -ms-transform: rotate(0deg);
      -moz-transform:rotate(0deg);
      -webkit-transform:rotate(0deg);
      -o-transform:rotate(0deg);
    }
    100% {
      transform:rotate(360deg);
      -ms-transform: rotate(360deg);
      -moz-transform:rotate(360deg);
      -webkit-transform:rotate(360deg);
      -o-transform:rotate(360deg);
    }
  }
  .angleIcon{
    position:absolute;
    z-index:10000;
    right:68rpx;
    top:51rpx;
    display:inline-block;
    width:auto;
    font-size:22rpx;
    min-width:45rpx;
    height:45rpx;
    border-radius:50%;
    background-color:white;
    color:white;
    line-height:45rpx;
    padding:2rpx;
  }
  .angleIcon2{
    right:-17rpx;
    top:9rpx;
    background-color:rgba(0,0,0,0);
  }
  .atMsg {
    height: 100%;
    overflow: auto;
    width: 100px;
    .atMsgTxtName,.atMsgTxtContent{
      width: 100%;
      display: block;
    }
    .atMsgTxtName{
      font-size: 36rpx;
      color:#333;
    }
    .atMsgTxtContent{
      font-size: 30rpx;
      color: #666;
    }
  }
  .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
#container{
  height:100%;
  overflow:hidden;
  position:absolute;
  width:100%;
  top:0;
  bottom:0;
}
page{
  // overflow: hidden;
  // height: 100%;
}
.checkboxGroup{
  padding-bottom:15px;
}
view {
  &.content {
    width: 100%;
    height: 100%;
    button.btn{
      position:absolute;
      width:90%;
      left:5%;
    }
    button.btn1{
      bottom: 43px;
    }
    button.btn2{
      bottom: 0px;
    }
  }
  &.content2{
    height: 100%;
    .mix-flex-center();
  }
}
.myWx-dui3{
  background-color:#267AFC!important;
  border:1px solid #267AFC!important;
  color:white!important;
  width:25px;
  height:25px;
  box-sizing:border-box;
  text-align:center;
  line-height:25px;
  font-size:16px!important;
  padding:0!important;
}
</style>