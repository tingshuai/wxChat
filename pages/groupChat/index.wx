<template>
  <view>
      <view class="loadingData" style="top:{{ loadingMsg.top }}">
        <icon class="iconfont myWx-unif032" style="color:{{ loadingMsg.color }};font-size:32px;"></icon>
      </view>
      <view class="article">
        <view class="groupMsgBtn">
          <button bindtap="groupMsg" wx:if="{{ !transmit.isTransmit }}" class="seeGroupMsg cBtn0"> 群信息 </button>
          <button bindtap="cancelSelect" wx:if="{{ transmit.isTransmit }}" class="iconfont myWx-houtui3 cancelSelect cBtn0"> </button>
          <icon class="line_icon" wx:if="{{ transmit.isTransmit }}"></icon>
          <button bindtap="toGroupList" wx:if="{{ transmit.isTransmit }}" class="iconfont myWx-qianjin4 toGroupList cBtn0"> </button>
        </view>
        <scroll-view scroll-y="true" bindscroll="scrllView" style="height:{{ scrollHeight }};" id="viewport" scroll-into-view="{{toView}}" upper-threshold="0" bindscrolltoupper="bindscrolltoupper" scroll-top="{{ scrollTop }}" catchtap="toggleIsHidden"><!-- bindscrolltoupper="bindscrolltoupper"，，，，catch:touchstart="loadTouchstart" catch:touchend="loadTouchend" catch:touchmove="loadTouchmove"-->
          <view class="content" id="content">
            <ui-row hover-class="touchui-hover" class="talkItem" wx:for="{{ chatData }}" wx:key="index" id="the{{index}}">
                  <view class="historyLine" wx:if="{{ item.cmd == 'time' || item.cmd == '2' }}">{{ item.content }}</view>
                  <ui-col width="60" align="left" vertical-align="top" wx:if="{{ item.cmd == 0 &&  (sendInputMsg.fromUser != item.fromUser)}}"><!--消息来自别人-->
                      <view class="left_icon left_icon1">
                          <image src="{{  item.headImgUrl }}"/>
                      </view>
                  </ui-col>
                  <!-- <view class="msgTransCheckbox" wx:if="{{ item.cmd == 0 && (sendInputMsg.fromUser == item.fromUser) && transmit.isTransmit }}"><checkbox-group data-item="{{ item }}" bindchange="checkboxChange"><label><checkbox class="checkbox" value="{{item.msgId}}"/></label></checkbox-group></view>消息转发选项框...... -->
                  <ui-col class="text" align="left" vertical-align="top" space-left="0" space-right="5" wx:if="{{ item.cmd == 0 }}">
                      <view style="width: 100%; text-align:{{ sendInputMsg.fromUser == item.fromUser ? 'right' : 'left' }};">
                          <ui-row height="20" wx:if="{{ sendInputMsg.fromUser != item.fromUser }}">
                              <ui-col align="{{ sendInputMsg.fromUser == item.fromUser ? 'right' : 'left'}}" vertical-align="top">
                                  <view class="userMsg"><text class="name">{{ item.fromUserName }}</text><text decode="true">&nbsp;&nbsp;</text><text class="job">{{ item.position }}</text></view>
                              </ui-col>
                          </ui-row>
                          <!--文本类型-->
                          <text selectable='true' class="talkContent {{ (item.status == 1 || item.status == 4) && sendInputMsg.fromUser == item.fromUser ? 'readed' : '' }} {{ item.status == 0 && sendInputMsg.fromUser == item.fromUser ? 'unRead' : '' }}" data-item="{{item}}" bind:longpress="openActionsheet" wx:if="{{ item.msgType == 0 }}" style="background-color: {{ sendInputMsg.fromUser == item.fromUser ? '#A0E75A' : 'white' }}">{{ item.content }} </text>
                          <!--图片类型-->
                          <view class="talkContent {{ (item.status == 1 || item.status == 4) && sendInputMsg.fromUser == item.fromUser ? 'readed' : '' }} {{ item.status == 0 && sendInputMsg.fromUser == item.fromUser ? 'unRead' : '' }}" wx:if="{{ item.msgType == 1 }}" style="height:100px;background-color:rgba(0,0,0,0);width:40%;"><image mode="aspectFit" data-item="{{item}}" bindtap="previewImage" catch:longpress="openActionsheet" style="height:100%;width:auto" src="{{ item.attachUrl }}"></image></view>
                          <!--语音类型-->
                          <view class="talkContent {{ (item.status == 1 || item.status == 4) && sendInputMsg.fromUser == item.fromUser ? 'readed' : '' }} {{ item.status == 0 && sendInputMsg.fromUser == item.fromUser ? 'unRead' : '' }}" wx:if="{{ item.msgType == 2 }}" style="width:100px;" catchtap="playVoice" bind:longpress="openActionsheet" data-index="{{ index }}" data-item="{{item}}">
                              <image mode="aspectFit" catchtap="playVoice" data-item="{{item}}" style="height:20px;width:20px;" src="{{ item.src ? item.src : '../../static/img/voice2.png' }}"></image>
                          </view>
                          <!--视频类型-->
                          <view class="talkContent {{ (item.status == 1 || item.status == 4) && sendInputMsg.fromUser == item.fromUser ? 'readed' : '' }} {{ item.status == 0 && sendInputMsg.fromUser == item.fromUser ? 'unRead' : '' }}" wx:if="{{ item.msgType == 3 }}" style="width:90%;">
                              <video style="width:100%;height:117px;" src="{{ item.attachUrl }}" controls></video>
                          </view>
                          <!--文件类型-->
                          <view class="talkContent {{ (item.status == 1 || item.status == 4) && sendInputMsg.fromUser == item.fromUser ? 'readed' : '' }} {{ item.status == 0 && sendInputMsg.fromUser == item.fromUser ? 'unRead' : '' }}" wx:if="{{ item.msgType == 6 }}" data-item="{{item}}" style="width:80%;" catchtap="openFile">
                            <ui-row>
                                <ui-col span="9" align="left" vertical-align="top" data-item="{{item}}" catch:longpress="openActionsheet">
                                    <view style="font-size:13px;color:#333333;">{{ item.content }}</view>
                                </ui-col>
                                <ui-col span="3">
                                  <text class="iconfont myWx-552cd47fba2cc" style="font-size:32px;text-align:center;"></text>
                                </ui-col>
                            </ui-row>
                            <view style="border-top:1xp solid blue;"></view>
                          </view>
                      </view>
                  </ui-col>
                  <ui-col class="text" align="center" vertical-align="top" space-left="0" space-right="0" wx:if="{{ item.cmd == 1 }}">
                      <view class="historyLine">{{ item.fromUserName }} 撤回了一条消息</view>
                  </ui-col>
                  <ui-col width="60" align="left" vertical-align="top" wx:if="{{ item.cmd != 'time' && (sendInputMsg.fromUser == item.fromUser) && item.cmd != 2 && item.cmd != 1 }}"><!--消息来自自己-->
                      <view class="left_icon left_icon1">
                          <image src="{{  userMsg.userHeadImg }}"/>
                      </view>
                      <!-- 消息转发选项框...... -->
                  </ui-col>
                  <view class="msgTransCheckbox" wx:if="{{ item.cmd == 0 && transmit.isTransmit }}"><checkbox-group data-item="{{ item }}" bindchange="checkboxChange"><label><checkbox class="checkbox" value="{{item.msgId}}"/></label></checkbox-group></view>
              </ui-row>
          </view>
        </scroll-view>
        <ui-fixed-view top="30%" left="{{ voice.plVoice }}" style="z-index:9999;" wx:if="{{ voice.show }}">
            <view class="fixed-view-content" style="background-color:rgba(0,0,0,0.5);padding:0px 35px 20px 35px;border-radius:7px;">
              <image src="{{ voice.icon }}" style="width:100px;height:100px;"></image>
              <text style="display:block;text-align:center;color:white;background-color:{{ voice.color }}">{{ voice.content }}</text>
            </view>
        </ui-fixed-view>
      </view>

      <!-- <cc-group-chat></cc-group-chat> -->
      <!-- <ccGroupChat></ccGroupChat> -->
      <!--底部输入工具-->
          <ui-fixed-view bottom="0" left="0" right="0">
            <view class="fixed_bottom" >
              <ui-row class="rowInputs" height="50" border-top border-bottom>
                <ui-col width="50" style="font-size:14px;" align="center" vertical-align="middle"><text class="iconfont {{ msgType == 0 ? 'myWx-jianpan' : 'myWx-ai01' }}" bindtap="toggleMsgType"></text></ui-col>
                <ui-col vertical-align="middle" hidden="{{ msgType == 0 }}"><input cursor-spacing="6" class="myInput" bindinput="onInput" value="{{ sendInputMsg.content }}"/></ui-col>
                <ui-col vertical-align="middle" hidden="{{ msgType == 1 }}"><button catch:touchstart="touchstart" catch:touchend="touchend" catch:touchmove="touchmove">按住说话</button></ui-col>
                <ui-col width="50" style="font-size:14px;" align="center" vertical-align="middle" hidden="{{ isInputing }}"><text class="iconfont myWx-jia" bindtap="toggleIsHidden"></text></ui-col>
                <ui-col width="55" vertical-align="middle" hidden="{{ !isInputing }}" class="sendBtn" space-left="3" space-right="3"><button type="primary" bindtap="sendMsg">发送</button></ui-col>
              </ui-row>
              <ui-row height="100" class="sentType" hidden="{{ isHidden }}" style="justify-content:flex-start;">
                <ui-col style="display:inline-block;" class="sentType_col" width="58" align="left" vertical-align="middle"><text class="iconfont myWx-zhaopian1" bindtap="chooseFile" data-type="1" data-watermark = "false"></text></ui-col>
                <ui-col style="display:inline-block;" class="sentType_col" width="58" align="left" vertical-align="middle"><text class="iconfont myWx-tupianshuiyinshezhi" bindtap="chooseFile" data-type="1" data-watermark = "true" style="font-size:"></text></ui-col>
                <!-- <ui-col class="sentType_col" width="58" align="left" vertical-align="middle"><text class="iconfont myWx-wenjian1" bindtap="chooseFile" data-type="6"></text></ui-col> -->
              </ui-row>
            </view>
          </ui-fixed-view>
  </view>
</template>

<script>
import system from '../../static/utils/system'
var app = getApp();
// var plugin = requirePlugin("WechatSI")
var recorderManager,wx_timer,wx_timer2,wx_n1=0,wx_n2=1;
var backgroundAudioManager=wx.getBackgroundAudioManager();
export default {
  config: {
    navigationBarTitleText: "欢迎进入群聊",
    usingComponents: {
      'cc-group-chat': '../../packages/cc-groupChat/index'
    }
  },
  data: {
    toView:'',//要滚动的位置...
    msgType:true, //0-文字，1-语音
    isHidden:true,//
    isInputing:false,//判断是否正在输入
    chatData:[],//聊天信息.....
    scrollHeight: wx.DEFAULT_CONTENT_HEIGHT - 48 + 'px',
    sendInputMsg :{
      fromUser:app.globalData.openId,//发送人ID
      fromUserName:'',//发送人姓名
      toUser:'',//群聊不填，私聊必填
      content:"",//消息体
      cmd:0,//0发送消息，1-撤回消息,2-系统推送消息.
      msgType:0,//消息类型0-text,1-image,2-voice,3-vedio,4-music,5-news
      chatType:0,//聊天类型0-未知，1-公聊，2-私聊
      groupId:'',//群聊ID....群聊必填..
      attachUrl:'',//附件地址...
      position:"",
      msgId:'',
      groupName:'',
      status:0,
      src:'../../static/img/voice2.png'//语音消息的图片地址
    },
    userMsg:{},
    theGroupMsg:{},
    scrollTop:1000,
    newHeight:0,
    pageNum:1,
    startPageY:'',
    voice:{
      plVoice:(wx.WIN_WIDTH - 170)/2 + 'px',//发送语音时话筒的距离左侧位置....
      color:'',
      show:false,
      content:'上划取消',
      icon:'../../static/img/record.gif',
      iconStop:false,
      play:'../../static/img/voice2.png'//聊天列表中的语音icon
    },
    fileSrc:'',//文件在webview中展示的地址
    transmit:{
      isTransmit:false,//是否显示转发消息checkbox
      transData:{}//选中的项目.
    },
    loadingMsg:{//加载数据的loading
      top:'-100%',
      color:'#666666',
      startY:'',
      endY:''
    }
  },
  onLoad(options){
    wx.setNavigationBarTitle({
     title: JSON.parse (options.item).groupName,
    })
    var that = this;
    var onFirst = 1;
    this.setData({
      theGroupMsg:JSON.parse (options.item),
      userMsg:app.globalData.userMsg,
      ['userMsg.userHeadImg']:app.globalData.userMsg.avatarUrl,
      ['sendInputMsg.groupName']:JSON.parse (options.item).groupName,
      nickName:app.globalData.userMsg.nickName,
      ['sendInputMsg.fromUserName']:app.globalData.userMsgReq.username,
      ['sendInputMsg.fromUser']:app.globalData.openId,
      ['sendInputMsg.groupId']:JSON.parse (options.item).groupId,
      ['sendInputMsg.position']:app.globalData.userMsgReq.position,
      ['sendInputMsg.headImgUrl']:app.globalData.userMsgReq.headImgUrl,
      ['sendInputMsg.isGroupManager']:app.globalData.userMsgReq.isGroupManager
    })
    var socketOpen = false;
    // wx_timer = setInterval( that.go , 100 ,0 ,6);//话筒.....
    // wx_timer2 = setInterval( that.go , 200 ,1, 3);//语音列表

// 连接sockey服务
    wx.connectSocket({
      url: app.globalData.socketHost + `/websocket/${that.data.theGroupMsg.groupId}/${app.globalData.openId}`,//群id，用户id
      data:{},
      header:{
       'content-type': 'application/json'
      },
      success:function(msg){
        that.getHistoryMsg(that.data.theGroupMsg.groupId, 10 , that.data.pageNum,true);
      },
      fail:function(msg){
        system.msgTip({title: '提示',content: res.errMsg,scb(){},ccb(){}})
      }
    })
    //连接状态
    wx.onSocketOpen(function(res) {
      socketOpen = true;
    })
    wx.onSocketMessage(function(res) {
      var data = JSON.parse( res.data );
      var chatDataMsgId;
      if( onFirst == 1 ){
        that.data.chatData.forEach((val,ii,arr)=>{
          if(val.msgId){
            chatDataMsgId = val.msgId;
          }
        })
      }else{
          chatDataMsgId = data.msgId;
      }
      var dataMsg =JSON.stringify( { "cmd" : 3, msgId:chatDataMsgId, "groupId":that.data.theGroupMsg.groupId ,"fromUser":data.fromUser } ) ;
      function set(){
        that.data.chatData.push( data );
        that.setData({
          chatData:that.data.chatData
        })
        that.setData({
          scrollTop:10000
        })
      }
      if( data.cmd == 1 ){//撤回消息...
        that.data.chatData.forEach((val,i,arr) => {
          if( val.msgId == data.msgId ){
            that.data.chatData.splice(i,1)
            that.data.chatData.push({'cmd':data.cmd,'fromUser':data.fromUser,'fromUserName':data.fromUserName,'msgId':data.msgId,'status':data.status})
          }
        });
        that.setData({
          chatData:that.data.chatData
        })
        //用户发送消息的时候发送 消息回执......
      }else if( data.cmd == 0 ){
        var isMe = data.fromUser == app.globalData.openId ? true : false;
        if(isMe){
          data.headImgUrl= that.data.userMsg.userHeadImg;
          set();
          that.setData({
            ['sendInputMsg.content']:'',
            'isInputing': false
          })
        }else{
          set();
        }
        wx.sendSocketMessage({"data": dataMsg ,
          success(res){},
          fail(res){}
        });
      }else if( data.cmd == 2 ){//系统推送消息.
        set();
        if( onFirst == 1 ){
          wx.sendSocketMessage({"data":dataMsg ,
            success(res){},
            fail(res){}
          });
          onFirst ++ ;
        }
      }else if( data.cmd == 3 ){//已读消息提醒.....
        that.data.chatData.forEach((val,i,arr)=>{
          val.status = 1; //标识所有消息已读.....
        })
        that.setData({
          chatData:that.data.chatData
        })
      }
    })
  },
  onUnload(e){
    wx.closeSocket({
      success(res){},
      fail(res){}
    })
  },
  // 发送socket消息
  sendSocketMessage(msg) {
    var that = this;
      wx.sendSocketMessage({
        data: msg ,
        success(res){},
        fail(res){}
      })
  },
  sendReadedReceipt(){//发送已读消息回执....
    this.data.chatData.forEach((val ,i ,arr)=>{
      if( val.status == 0 ){//如果有消息未读.....
        wx.sendSocketMessage({"data":JSON.stringify({msgId:val.msgId,cmd:'3',groupId:that.data.theGroupMsg.groupId,fromUser:val.fromUser}),
          success(res){},
          fail(res){}
        });
      }
    })
  },
  checkboxChange(e){ //消息转发选项框选中事件......
    debugger;
  },
  cancelSelect(){//取消消息选择......
    this.setData({
      ["transmit.isTransmit"]:false
    })
  },
  toGroupList(){//选择完转发消息后跳转到群组列表页面
    let that = this;
    wx.navigateTo({
      url: `/pages/home/index?selData=${that.data.transmit.transData}`,
      success(res) {},
      fail(res){}
    })
  },
  previewImage: function(e){//图片预览.....
    var imgUrl = e.target.dataset.item.attachUrl;
    var imgList = [];
    this.data.chatData.forEach((val,i,arr)=>{
      if( val.msgType == 1 ){
        imgList.push( val.attachUrl );
      }
    })
    wx.previewImage({
        current: imgUrl, // 当前显示图片的http链接
        urls: imgList // 需要预览的图片http链接列表
    })
  },
  openActionsheet(e){
    var that = this;
    var item = e.target.dataset.item;
    var typeCode = e.target.dataset.item.msgType;
    var list = [];
    let creatTime = '';
    if(item.createAt.toString().search('-') != -1){
      creatTime = Date.parse(item.createAt.replace(/-/g,"/"))
    }else{
      creatTime = item.createAt
    }
    function toggle(){
      if(new Date().getTime() - creatTime > 120000){
        list = ['提醒查看','转发'];
      }else{
        list = ['提醒查看','转发','撤回'];
      }
    }
    if( item.fromUser == app.globalData.openId ){
        if (typeCode == 0 || typeCode == 2) {//文本类型
          toggle();
        }else if( typeCode == 1 ){//图片类型
          toggle();
        }else if(typeCode == 6){//文件类型
          toggle();
        }
    }
    // 消息撤回.....
    if(  item.fromUser == app.globalData.openId ){
      wx.showActionSheet({
          itemList: list,
          success: function(res) {
              if (res.tapIndex == 2 ) {//撤回
                  wx.sendSocketMessage({"data":JSON.stringify({msgId:item.msgId,cmd:'1',groupId:item.groupId,fromUser:item.fromUser,fromUserName:item.fromUserName})});
              }else if( res.tapIndex == 0 ){//提醒查看
                system.http({
                  url:'chat/msg/chatRemind',
                  method:'post',
                  header:{'content-type': 'application/x-www-form-urlencoded'},
                  param:{
                    groupId:item.groupId,
                    fromUserName:item.fromUserName,
                    headImgUrl:that.data.theGroupMsg.icon,
                    managerId :that.data.theGroupMsg.managerId,
                    groupName :that.data.theGroupMsg.groupName,
                    sessionId:app.globalData.sessionId
                  },
                  scb(res){
                    system.stateMsg({title:"提醒成功",icon:"success",time:1000})
                  },
                  fcb(res){
                    system.stateMsg({title:"提醒失败",icon:"fail",time:1000})
                  }
                })
              }else if( res.tapIndex == 1){//转发
                that.setData({
                  ["transmit.isTransmit"]:true
                })
              }
          }
      });
    }
  },
  touchmove(e){
    let that = this;
    let moveY = this.data.startPageY -  e.changedTouches[0].pageY;
    if( moveY > 80 ){
      this.setData({
        ['voice.icon']:"../../static/img/back_voice.png",
        ['voice.content']:'松手取消发送',
        ['voice.color']:'rgba(200,0,0,0.6)',
        ['voice.iconStop']:true
      })
    }else{
      this.setData({
        ['voice.color']:'',
        ['voice.icon']:"../../static/img/record.gif",
        ['voice.content']:'上滑取消',
        ['voice.iconStop']:false
      })
    }
  },
  touchstart(e){
      var that = this;
      recorderManager = wx.getRecorderManager()
      recorderManager.onStart(() => {
        that.setData({
          ['voice.iconStop']:false
        })
      })
      recorderManager.onPause(() => {})
      recorderManager.onStop((res) => {
        if( that.data.voice.iconStop == false ){
          const { tempFilePath } = res
          that.upload(res.tempFilePath,2)
        }
      })
      var music = function(){
        const options = {
          duration: 10000,
          sampleRate: 44100,
          numberOfChannels: 1,
          encodeBitRate: 192000,
          format: 'mp3',
          frameSize: 50
        }
        recorderManager.start(options)
      }
    wx.getSetting({
        success(res) {
            if (!res.authSetting['scope.record']) {
                wx.authorize({
                    scope: 'scope.record',
                    success() {
                        // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问
                       music();
                    }
                })
            }else{
              music();
            }
        }
    })
    var pageY = e.changedTouches[0].pageY;
    this.setData({
      startPageY:pageY,
      ['voice.show']:true
    })
  },
  touchend(e){
    recorderManager.stop()
    this.setData({['voice.show']:false,['voice.content']:"上滑取消",['voice.icon']:"../../static/img/record.gif",});
  },
  openFile(e){
    var that = this;
    var item = e.currentTarget.dataset.item;
    const downloadTask = wx.downloadFile({
      url: item.attachUrl,
      success(ress) {
        // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
        function validate(url){//检测文件类型
          var d = /\.[^\.]+$/.exec(url);
          return d;
        }
        if (ress.statusCode === 200) {
            if( validate(ress.tempFilePath) == ".doc" || validate(ress.tempFilePath) == ".xls" || validate(ress.tempFilePath) == ".ppt" || validate(ress.tempFilePath) == ".pdf" || validate(ress.tempFilePath) == ".docx" || validate(ress.tempFilePath) == ".xlsx" || validate(ress.tempFilePath) == ".pptx" ){
              wx.openDocument({
                filePath: ress.tempFilePath,
                success(res) {},
                fail(res){}
              })
            }else{//不支持类型.....
              wx.navigateTo({
                url: `/pages/webView/index?fileUrl=${item.attachUrl}`,
                success(res) {},
                fail(res){}
              })
            }
        }
      },
      fail(res){
        system.msgTip({title: '提示',content: res.errMsg,scb(){},ccb(){}})
      }
    })
    downloadTask.onProgressUpdate((res) => {})
  },
  bindscrolltoupper(e){
    var that = this;
    this.setData({
      ['loadingMsg.top']:0,
      ['loadingMsg.color']:'#666666'
    })
    this.getHistoryMsg( that.data.theGroupMsg.groupId ,10 , that.data.pageNum ,false,e);
  },
  // 播放语音....
  playVoice(e){
    var that = this;
    var item = e.currentTarget.dataset.item;
    var i = e.currentTarget.dataset.index;
    backgroundAudioManager.stop();
    backgroundAudioManager.title = '此时此刻'
    backgroundAudioManager.epname = '此时此刻'
    backgroundAudioManager.singer = '许巍'
    backgroundAudioManager.coverImgUrl = 'http://y.gtimg.cn/music/photo_new/T002R300x300M000003rsKF44GyaSk.jpg?max_age=2592000'
    // backgroundAudioManager = wx.getBackgroundAudioManager();
    backgroundAudioManager.src = item.attachUrl; // 设置了 src 之后会自动播放
    backgroundAudioManager.paused = false;
    backgroundAudioManager.onPlay(()=>{
      var d = that.data.chatData[i];
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice.gif',
      })
    })
    backgroundAudioManager.onPause(()=>{
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice2.png',
      })
    })
    backgroundAudioManager.onStop(()=>{
      this.data.chatData.forEach((val,ii ,arr)=>{
        this.setData({
          [`chatData[${ii}].src`]:'../../static/img/voice2.png',
        })
      })
    })
    backgroundAudioManager.onEnded(()=>{
      this.setData({
        [`chatData[${i}].src`]:'../../static/img/voice2.png',
      })
    })
  },
  // 请求历史记录....
  getHistoryMsg(id,size,num,isFirst,event){
    var that= this;
    wx.request({
      url: `${app.globalData.httpHost}/chat/msg/getGroupMsg`,
      data: {
         groupId : id ,//群ID
         pageSize : size,//一页几条
         pageNum :num,//第几页
         sessionId:app.globalData.sessionId
      },
      success: function(res) {
        var oldList = that.data.chatData.length;
        that.data.chatData.splice(0,0,...res.data.data.rows);
        that.setData({
          chatData:that.data.chatData,
          pageNum:++that.data.pageNum
        })
        var newList = that.data.chatData.length;
        if(isFirst){
          that.setData({scrollTop:10000})
          that.sendReadedReceipt();
        }else{
          that.setData({toView:`the${newList - oldList}`})//回滚到原来查看的位置
          that.setData({
            ['loadingMsg.top']:'-100%',
            ['loadingMsg.color']:'#A0E75A'
          })
        }
      }
    })
  },
  // 上传.....
  upload( tempFilePaths , type ,watermark){
    var that = this;
    wx.uploadFile({
      url: `${app.globalData.httpHost}/chat/attach`,
      filePath: tempFilePaths,
      name: 'file',
      formData:{
        "watermark":watermark
      },
      header:{
        'content-type':'multipart/form-data'
      },
      success: function(res){
        var data = res.data
        that.setData({
          ['sendInputMsg.msgType']:type,
          ['sendInputMsg.attachUrl']:JSON.parse(res.data).data
        });
        that.sendMsg()
      },
      fail(res){
        system.msgTip({title: '提示',content: res.errMsg,scb(){},ccb(){}})
      }
    })
  },
  chooseFile(event){
    var type = event.currentTarget.dataset.type;
    var watermark = event.currentTarget.dataset.watermark;
    var that = this;
    if( type == 1 ){
      wx.chooseImage({
        count:1,
        success: function(res) {
          var tempFilePaths = res.tempFilePaths;
          that.upload( tempFilePaths[0] , type ,watermark);
        },
        fail(res){
          
        }
      })
    }else if( type == 6 ){//file文件
     
    }
  },
  // 发送消息
  sendMsg( e ){
    var that = this;
    this.sendSocketMessage( JSON.stringify( that.data.sendInputMsg) );
  },
  // 输入时
  onInput(e){
    if( e.detail.value != '' ){
      var key = 'sendInputMsg.content';
      var val = system.searchUrl( { "str":e.detail.value,"color":'blue' } )
      this.setData({ isInputing: true , [key]:val, ['sendInputMsg.msgType']:0});
    }else{
       this.setData({ isInputing: false });
    }
  },
  toggleIsHidden(e){//控制底部发送栏的显隐.....
    if( e.currentTarget.id == "viewport" ){
      this.setData({
        isHidden:true,
        scrollHeight: wx.DEFAULT_CONTENT_HEIGHT - 48 + 'px',
        scrollTop:1000000
      })
    }else{
      this.setData({
        isHidden:!this.data.isHidden
      })
      this.setData({
        scrollHeight: !this.data.isHidden ? wx.DEFAULT_CONTENT_HEIGHT - 148 + 'px' : wx.DEFAULT_CONTENT_HEIGHT - 48 + 'px',
      })
      this.setData({
        scrollTop:10000000
      })
    }
  },
  scrllView(e){
    console.log( e )
  },
  loadTouchstart(e){
    
  },
  loadTouchend(e){
// debugger;
  },
  loadTouchmove(e){

  },
  toggleMsgType(){//切换输入方式.....
    this.setData({ msgType: this.data.msgType == 0 ? 1 : 0 });
  },
  groupMsg(){//点击群信息......
    var that = this;
    let msg = JSON.stringify( that.data.theGroupMsg );
    wx.navigateTo({
      url: `/pages/groupMsg/index?item=${msg}`
    })
  }
}
</script>

<style lang="less">
  .msgTransCheckbox{
    .checkbox{
      .wx-checkbox-input{
        background-color: rgba(0,0,0,0);
      }
      .wx-checkbox-input-checked::before{

      }
    }
  }
  .readed{
    &:after{
      content: '已读';
      display: inline-block;
      color:gray;
      font-size: 10px;
      position: absolute;
      bottom: -17px;
      right: 5px;
    }
  }
  .unRead{
    &:after{
      content: '未读';
      display: inline-block;
      color:red;
      font-size: 10px;
      position: absolute;
      bottom: -17px;
      right: 5px;
    }
  }
  .inVoice{
    position:absolute;
    display:block;
    height:50px;
    width:100%;
    text-align:center;
    z-index:99999;
  }
  .historyLine{
    text-align: center;
    background-color: #cccccc;
    padding: 5px 10px;
    border-radius: 6px;
    font-size: 10px;
    margin: 10px 0;
    color: white;
  }
  .sendBtn{
    button{
      font-size:12px;
      padding:0;
    }
  }
  .sentType{
    justify-content:left;
    .sentType_col{
      margin-left: 20px;
    }
    .iconfont{
      font-size:30px;
      padding:0px 8px;
      border:1px solid #999999;
      border-radius: 7px;
      color: #666666;
      &:active{
        opacity: 0.8;
      }
    }
  }
  .myInput{
    // background:rgba(255,255,255,1);
    border-radius:5px;
    border: 1px solid #999999;
    height: 30px;
    text-indent: 10px;
    padding-left: 5px;
  }
  .myWx-ai01 , .myWx-jia ,.myWx-jianpan,.myWx-unif032{
    font-size: 33px;
    color: #666666;
    &:active{
      opacity: 0.8;
    }
  }
  .fixed_bottom{
    background: #ffffff;
  }
.article{
  .groupMsgBtn{
      position: absolute;
      right: 12px;
      top: 10px;
      z-index: 10000;
      font-size: 14px;
      border-radius: 12px;
      background-color: #FFF7F7FA;
      line-height: 24px;
      overflow: hidden;
      height:60rpx;
      .cBtn0{
        padding:0 30rpx;
        height:60rpx;
        line-height:60rpx;
        font-size:24rpx;
        margin:0;
        background-color:#FFF7F7FA!important;
        display:inline-block;
        border-radius:0;
        &::after{
          border: none;
        }
      }
      .line_icon{
        border-right:0.5px solid #DBD9D9;
        height:40rpx;
        position:relative;
        top:-20rpx;
      }
      .cancelSelect,.toGroupList{
        font-size: 34rpx;
      }
    }
}
.content{
    padding:0px 8px 0px 8px;
    .talkItem{
      padding:15px 0;
      margin-bottom:6px;
    }
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .left_icon2{
        background-color: #FF7360;
    }
    .left_icon3{
        background-color: #39CCC5;
    }
    // .text{
    //     view{
    //         color: #9C9FA4;
    //         font-size: 12px;
    //         .mix-text-overflow();
    //     }
    // }
    
    .name,.job{
      font-family:PingFang-SC-Medium;
      color:rgba(102,102,102,1);
      display: inline-block;
    }
    .name{
      font-size: 13px;
    }
    .job{
      font-size: 11px;
    }
    .userMsg{
      vertical-align: top;
      line-height: 13px;
    }
    .talkContent{
      font-size: 15px;
      font-family:PingFang-SC-Medium;
      color:rgba(51,51,51,1);
      background-color: white;
      padding: 5px;
      border-radius: 5px;
      display: inline-block;
      max-width:90%;
      white-space: pre-line;
      overflow-wrap:break-word;
      text-align: left;
      min-height: 20px;
    }
}
.loadingData{
  text-align:center;
  height:100%;
  position:absolute;
  width:100%;
  transition: all 0.3s;
  top:'-100%';
  z-index: 99999;
  .iconfont{
    // color: #666666;
    transition: all 0.3s;
    animation:myRotate 1.2s linear infinite;
  }
}
@keyframes myRotate
  {
    0% {
      transform:rotate(0deg);
      -ms-transform: rotate(0deg);
      -moz-transform:rotate(0deg);
      -webkit-transform:rotate(0deg);
      -o-transform:rotate(0deg);
    }
    100% {
      transform:rotate(360deg);
      -ms-transform: rotate(360deg);
      -moz-transform:rotate(360deg);
      -webkit-transform:rotate(360deg);
      -o-transform:rotate(360deg);
    }
  }
</style>
