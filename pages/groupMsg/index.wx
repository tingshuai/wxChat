<template id="page">
  <view class="content" style="">
    <view style="height:{{ headerHeight }}px;width:100%;"></view>
    <!-- 群成员头像 -->
    <view class="talkItem" >
        <view width="60" style="vertical-align:top;" align="left" vertical-align="top" bindtap="sel" data-index="{{index}}" data-item="{{item}}" class="mycol" wx:for="{{ groupMsg.groupUsers }}" wx:key="{{index}}">
            <view class="left_icon left_icon1">
                <image src="{{ item.headImgUrl }}"/>
                <image mode="aspectFit" wx:if="{{ groupMsg.managerId == item.openId }}" src="../../static/img/imperial@2x.png" style="width:25px;position:absolute;top:-45px;left:3px;"/>
                <!-- <icon class="iconfont myWx-qunzhu" wx:if="{{ groupMsg.managerId == item.openId }}"></icon> -->
            </view>
            <text>{{ item.username || "" }}</text>
            <!-- <icon type="success" size="15" class="figure" wx:if="{{ item.authAddMember }}"></icon> -->
        </view>
        <view class="mycol" style="vertical-align:top;" bindtap="editGroup" wx:if="{{ canAddMenuber && tabBar.actItem == 0 }}">
          <icon class="iconfont myWx-jia4" style="color:#ccc;font-size:37px;border:1px solid #ccc;width:45px;height:45px;line-height:45px;text-align:center;"></icon>
        </view>
    </view>
    <ui-row class="groupName" vertical-align="middle">
      <ui-col vertical-align="middle" span="3" space-left="10" align="left" class="txtLeft">群名称</ui-col>
      <ui-col vertical-align="middle" space-right="10" align="left" class="txtRight">{{ groupMsg.groupName ? groupMsg.groupName : '' }}</ui-col>
    </ui-row>
    <ui-row class="groupDescribe">
      <ui-col vertical-align="middle" span="3" space-left="10" align="left" class="txtLeft" span="2">群描述</ui-col>
      <ui-col vertical-align="middle" space-right="15" align="left" class="txtRight">
        <text style="padding-right:10px;width:100%;">{{ groupMsg.groupDesc ? groupMsg.groupDesc : '' }}</text>
      </ui-col>
    </ui-row>
    <view style="padding-left:10px;line-height:21px;padding-right:5px;background-color:white;height:45px;line-height:45px;border-top:1px solid #e5e5e5;border-bottom:1px solid #e5e5e5;" bindtap="selChatList">
        <view class="txtLeft" style="color:black;width:40%;display:inline-block;" >查找聊天记录</view>
        <view style="width:60%;display:inline-block;text-align:right;"><icon class="iconfont myWx-xiangyou" style="font-size:20px;vertical-align:top;color:#c7c7c7;"></icon></view>
    </view>
    <!--退群按钮-->
    <view class="fixed-view-content" style="padding:0 35rpx;padding-top:28px;">
      <view class="btn-area">
        <button type="warn" class="fixed_bottom jingjingBtn" wx:if="{{ userMsg.openId == groupMsg.managerId  }}" data-disband="true" bindtap="exitGroup">解散群组</button>
        <button type="warn" class="fixed_bottom jingjingBtn" wx:else data-disband="false" bindtap="exitGroup">退出群组</button>
        <!-- <button type="primary" class="fixed_bottom" bindtap="confirm" wx:if="{{ isEdit }}">确定</button> -->
        <!-- <button type="primary" class="fixed_bottom" bindtap="cancel" wx:if="{{ isEdit }}">取消</button> -->
        <button wx:if="{{ groupMsg.managerId == userMsg.openId }}" type="default" style="margin-top:12px;" class="fixed_bottom jingjingBtn" bindtap="editGroup">编辑</button>
        <button wx:if="{{ canAddMenuber && groupMsg.managerId != userMsg.openId}}" type="default" class="fixed_bottom jingjingBtn" bindtap="addMenuber">添加成员</button>
      </view>
    </view>
  </view>
</template>

<script>
  import system from '../../static/utils/system'
  var app = getApp();
  export default {
    config: {
      navigationBarTitleText: '',
    },
    data: {
      headerHeight:"",//头部栏的高
      headerHeight:app.globalData.headHeight,
      groupMsg:{},
      userList:[],
      userMsg:{},
      isEdit:false,
      canAddMenuber:false,
      formData:{
        startTime:"",
        deadline:"",
        date:""
      },
      submitData:{
        groupId:"",
        groupName :"",
        groupDesc:"",
        addMemberOpenIds:[]
      },
      tabBar:{
        "actItem":0
      }
    },
    onLoad( option ){
      let that = this;
      let _tabBar = JSON.parse( option.tabBar );
      this.setData({
        groupMsg:app.globalData.groupMsg,
        ['submitData.groupId']:JSON.parse( option.item ).groupId,
        ['submitData.groupName']:JSON.parse( option.item ).groupName,
        ['submitData.groupDesc']:JSON.parse( option.item ).groupDesc,
        "userMsg":app.globalData.userMsgReq,
        "headerHeight":app.globalData.headHeight,
      })
      if( _tabBar.actItem == 2 ){//是历史群组不显示底部栏
        this.setData({
          tabBar:_tabBar,
        })
      }
      wx.setNavigationBarTitle({//设置页面标题....
        title: JSON.parse( option.item ).groupName
      })
      this.canAddMenuber();
      this.onMessage();
    },
    onShow(){
      this.getGroupMsg();
    },
    canAddMenuber(){
      let that = this;
      this.data.groupMsg.groupUsers.filter((item)=>{
        if( that.data.userMsg.openId == item.openId){
          if(item.authAddMember == true){
            that.setData({
              "canAddMenuber":true
            })
          }else{
            that.setData({
              "canAddMenuber":false
            })
          }
        }
      })
    },
    getGroupMsg(){
      let that = this;
      system.http({ url:'chat/groups',
        method:"get",
        param: {groupId:app.globalData.groupMsg.groupId},
        scb(res){
          if ( res.data.status == 200) {
              that.setData({
                'groupMsg':res.data.data.rows[0]
              })
          }else{
            system.msgTip({title: '提示',content: res.data.message,scb(){},ccb(){}})
          }
        },fcb(res){
          system.msgTip({title: '提示',content: res.data.message,scb(){},ccb(){}})
        }
      })
    },
    selChatList(e){
      let that = this;
      wx.navigateTo({
        url:`/pages/historyMsg/index?item=${ JSON.stringify( that.data.groupMsg ) }&tabBar=${ JSON.stringify( that.data.tabBar) }`
      })
    },
    onMessage(){
      let that = this;
      app.globalData.socketTask.onMessage((res)=>{
        var _data = JSON.parse( res.data );
        switch (_data.cmd ) {
          case 2://推送消息
                if( _data.msgType == 13 ){//更新群列表.....
                    setTimeout(()=>{
                      that.setData({
                        "groupMsg":_data.groupDate
                      })
                      that.canAddMenuber();
                    },1000)
                }
                break;
            default:
                break;
        }
      })
    },
    editGroup(e){//编辑群组
      let that = this;
      this.setData({
        "isEdit":true
      })
      wx.navigateTo({
        url:`/pages/newGroup/index?groupMsg=${JSON.stringify(that.data.groupMsg)}&edit=true&addMenu=false`
      })
    },
    addMenuber(e){
      let that = this;
      wx.navigateTo({
        url:`/pages/newGroup/index?groupMsg=${JSON.stringify(that.data.groupMsg)}&edit=true&addMenu=true`
      })
    },
    navigateBack () {
        wx.navigateBack()
    },
    exitGroup(e){//退群
        let that = this;
        let _item = e.currentTarget.dataset
        // var dataParam =JSON.stringify( {groupId : that.data.groupMsg.groupId,openId:app.globalData.openId,sessionId:app.globalData.sessionId})
        let promise = new Promise((resolve,reject)=>{
          system.msgTip({
            title:"提示",
            content: that.data.userMsg.openId == that.data.groupMsg.managerId ? "亲爱的，你确定要解散本群吗？" : "亲爱的，你确定要退群吗？",
            scb(res){
              let obj={};
              if( _item.disband == "true" ){
                obj.myurl = `chat/groups/disband/${that.data.groupMsg.groupId}`;
                obj._tip = "解散成功";
                obj.params = {};
                resolve(obj);
              }else{
                obj.myurl = 'chat/groups/quit';
                obj._tip = "退群成功";
                obj.params = {groupId : that.data.groupMsg.groupId,openId:app.globalData.openId,fromUserName:app.globalData.userMsgReq.username};
                resolve(obj);
              }
            },
            fcb(res){
              return;
            }
          })
        });
        promise.then((obj)=>{
          system.http({ url:obj.myurl,
            method:"post",
            param: obj.params,
            header: {
                'content-type': 'application/x-www-form-urlencoded'
            },
            scb(res){
              if ( res.data.status == 200) {
                  system.stateMsg({title:obj._tip,icon:"success",time:1500});
                  setTimeout(() => {
                      wx.reLaunch({
                          url: `/pages/home/index`
                      })
                  }, 1500);
              }else{
                system.msgTip({title: '提示',content: res.data.message,scb(){},ccb(){}})
              }
            },fcb(res){
              system.msgTip({title: '提示',content: res.data.message,scb(){},ccb(){}})
            }
          })
        })
    }
  }
</script>

<style lang="less">
 .content{
    .groupName,.groupDescribe{
      background-color:white;
      height: 47px;
      margin: 18px 0;
      border-top: 1px solid #e5e5e5;
      border-bottom: 1px solid #e5e5e5;
      .txtLeft{
        font-size: 32rpx;
        width:30px;
        .mix-text-overflow();
      }
      .txtRight{
        text-align: left;
        padding-left: 4px;
        color:rgba(153,153,153,1);
        flex-wrap:wrap;
        display:block;
        overflow: hidden;
         >view{
           font-size: 30rpx;
         }
      }
    }
    .groupDescribe{
      height: auto;
      min-height: 47px;
      .txtLeft{
        top:7px;
      }
      .txtRight{
        padding:7px 0 7px 0;
      }
    }
    .fixed_bottom{
      // margin:0 20px;
    }
    .talkItem{
      margin:15px 0;
      padding: 15px 0;
      text-align: left;
      justify-content:left;
      white-space:pre-line;
      background-color:white;
    }
    .left_icon{
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
        display: inline-block;
        >image{
          border-radius: 5px;
        }
        &:active{
        opacity: 0.8;
      }
    }
    .left_icon2{
        background-color: #FF7360;
    }
    .left_icon3{
        background-color: #39CCC5;
    }
    .mycol{
      width: 20%;
      display: inline-block;
      height: 90px;
      text-align: center;
      position: relative;
      >text{
        width: 100%;
        font-size: 12px;
        font-family:PingFang-SC-Medium;
        color:#8B969C;
        text-align: center;
        display:block;
        .mix-text-overflow();
      }
    }
}
.label0{
    font-size: 30rpx;
  }
  .figure{
    position:absolute;
    font-size:0rpx;
    background-color:antiquewhite;
    bottom:36px;
    right:3px;
    border-radius:50%;
    overflow:hidden;
  }
  .label1{
    font-size: 28rpx;
  }
  .fontValue{
    font-size: 28rpx;
    line-height: 38rpx;
    padding-top: 20rpx;
  }
  .myWx-qunzhu{
    position:absolute;
    top:-24px;
    left:-4px;
    color:#00bb00;
    font-size:60rpx;
    transform:rotate(-45deg);
  }
  .txtLeft{
    font-weight: 500;
  }
  page{
    overflow-y:auto;
    width:100%;
  }  
</style>
