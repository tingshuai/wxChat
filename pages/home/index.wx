<template>
  <view class="container" wx:show="{{ showPage }}">
    <!-- <ui-fixed-view top="0" left="0" right="0" style="position:relative;"> -->
      <view class="fixed-view-content">
          <view class="weui-search-bar noafter">
              <view class="weui-search-bar__form noafter">
                  <view class="weui-search-bar__box noafter">
                      <icon class="weui-icon-search_in-box" type="search" size="14" wx:if="{{ !showInput }}"></icon>
                      <input type="text" class="weui-search-bar__input" placeholder="{{ showInput ? '' :  '搜索'}}" value="{{inputVal}}" focus="{{ inputShowed }}" bindinput="inputTyping" />
                      <view class="weui-icon-clear" wx:if="{{ inputVal.length > 0 }}" bindtap="clearInput">
                          <icon type="clear" size="14"></icon>
                      </view>
                  </view>
              </view>
              <view class="weui-search-bar__cancel-btn" bindtap="clearInput" wx:if="{{ inputVal.length > 0 }}" style="color:#267AFC;">取消</view>
              <label class="weui-search-bar__label" bindtap="showInput" wx:if="{{ showInput }}" style="position:absolute;top:8px;background-color:rgba(0,0,0,0);">
                  <icon class="weui-icon-search" type="search" size="14" style="top:2px;position:relative;"></icon>
                  <view class="weui-search-bar__text">搜索</view>
              </label>
          </view>
      </view>
    <!-- </ui-fixed-view> -->
    <!-- <view class="weui-loadmore weui-loadmore_line" wx:if="{{ (list1.length == 0 && tabBar.actItem == 0) || (overList.length == 0 && tabBar.actItem == 2) }}">
        <view class="weui-loadmore__tips weui-loadmore__tips_in-line" style="background-color:none;">暂无数据 可尝试下拉刷新</view>
    </view> -->
    <view class="listContainer" style="" hidden="{{ overList.length != 0 }}">
        <!-- 群组 -->
        <cc-grouplist wx:if="{{ tabBar.actItem == 0 }}" groupList="{{ list1 }}" bind:exData = "exData" tabBar="{{ tabBar }}"></cc-grouplist>
        <!-- 历史群组 -->
        <cc-grouplist wx:if="{{ tabBar.actItem == 2 }}" groupList="{{ historyList }}" bind:exData = "exData" tabBar="{{ tabBar }}"></cc-grouplist>
    </view>
    <ui-fixed-view bottom="0" left="0" right="0">
      <ui-row border-top border-bottom height="50" style="background-color: #F7F7FA;">
        <ui-col vertical-align="middle" align="center">
            <view style="height:100%;padding-top:19rpx;" data-index="0" catchtap="toggleTab" class="{{ tabBar.actItem == 0 ? 'actItem' : '' }}">
                <image class="icon" mode="aspectFit" src="{{ tabBar.actItem == 0 ? '../../static/img/group@2x.png' : '../../static/img/groupNo@2x.png'}}" style="width:28px;height:20px;"></image>
                <text style="font-size:18rpx;" class="txt">群组</text>
            </view>
        </ui-col>
        <ui-col vertical-align="middle" align="center" wx:if="{{ userMsgReq.canBuildGroup }}">
            <view style="height:100%;padding-top:19rpx;" data-index="1" catchtap="toggleTab" class="{{ tabBar.actItem == 1 ? 'actItem' : '' }}">
                <image class="icon" mode="aspectFit" src="../../static/img/Group17@2x.png" style="width:36px;height:36px;"></image>
            </view>
        </ui-col>
        <ui-col vertical-align="middle" align="center">
            <view style="height:100%;padding-top:19rpx;" data-index="2" catchtap="toggleTab" class="{{ tabBar.actItem == 2 ? 'actItem' : '' }}">
                <image class="icon" mode="aspectFit" src="{{ tabBar.actItem == 2 ? '../../static/img/historyYes@2x.png' : '../../static/img/history@2x.png' }}" style="width:28px;height:20px;"></image>
                <text style="font-size:18rpx;" class="txt">历史</text>
            </view>
        </ui-col>
    </ui-row>
    </ui-fixed-view>
  </view>
</template>

<script>
var app = getApp();
import system from '../../static/utils/system'
export default {
  config: {
    navigationBarTitleText: '库蚂蚁沟通',
    usingComponents: {
      'cc-grouplist': '../../packages/cc-grouplist/index',
      'cc-history-group': '../../packages/cc-historyGroup/index'
    }
    // "enablePullDownRefresh": true
  },
  data: {
    showPage:false,
    isShow:false,
    inputShowed: false,
    inputVal: "",
    list1: [],
    historyList:[],
    overList:[],
    el: 'undefined',
    showInput:true,
    defaultHeadImg:'',
    userMsgReq:{},
    "tabBar": {
        actItem:0
    }
  },
  onLoad(option){
    var that = this;
    // 关闭socket
    // system.closeSocket( getApp() );
    // 连接sockey服务
    system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
    this.setData({
        "userMsgReq":app.globalData.userMsgReq,
    })
    this.getDefaultImg();
  },
  onShow(e){
    let that = this;
    app.globalData._me = this;
    this.requestGroupList( '/history/groups/tree','history');
    this.requestGroupList( '/chat/groups/tree','over',1 );
    system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:20000});
    wx.onNetworkStatusChange(function(res) {
      if( res.isConnected ){
        if( that.data.tabBar.actItem == 0 ){
            that.requestGroupList( '/chat/groups/tree','over',1 );
        }else{
            that.requestGroupList( '/history/groups/tree','history');
        }
      }
    })
  },
  exData(_data){
      console.log( _data );
  },
  toggleTab(e){
    let _item = e.currentTarget.dataset;
    let that = this;
    if( _item.index == 0 ){//获取群组列表....
        this.setData({
            ['tabBar.actItem']:_item.index
        })
        this.requestGroupList( '/chat/groups/tree','over', 1 );
        system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
        that.setData({
            list1:that.data.list1
        })
        wx.hideToast();
    }else if( _item.index == 1 ){//添加群组
      wx.navigateTo({
          url:'/pages/newGroup/index?edit=false&addMenu=false',success(res){},fail(res){}
      })
    }else if( _item.index == 2 ){//历史群组
        this.setData({
            ['tabBar.actItem']:_item.index
        })
        system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
        this.requestGroupList( '/history/groups/tree','history');
    }
  },
  addGroup(e){
      wx.navigateTo({
          url:'/pages/newGroup/index?edit=false&addMenu=false',success(res){},fail(res){}
      })
  },
  showInput(){
      var that = this;
      this.setData({
          'showInput':!that.data.showInput,
          'inputShowed':true
      })
  },
  sortList( resData ){
    let that = this;
    let head_message = resData.filter((item)=>{
        item.expand = true;
        if( item.unreadCount > 0 ){
            return item;
        }else{
            let _list =  item.children.filter( (_item)=>{
                return _item.unreadCount > 0;
            })
            if( _list.length > 0 ){
                return item;
            }
        }
    })
    let tail_message = resData.filter((item)=>{
        let _list = item.children.filter( (_item)=>{
            return _item.unreadCount > 0
        })
        if( item.unreadCount == 0 && _list.length == 0 ){
            return item;
        }
    })
    return head_message.concat( tail_message );//将有消息的群放在前面
  },
  setGroupList(_data){
    let that = this;
    let promise = new Promise((resolve,reject)=>{
        that.arrList1( _data.groupId , that.data.list1 ,resolve );
    })
    promise.then((_obj)=>{
        that.data.list1.splice(_obj._i,1);
        that.setData({
            "list1":that.data.list1
        })
    })      
  },
  exitGroup(e){
    let that = this;
    let groupMsg = e.currentTarget.dataset.item;
    system.http({ url:'chat/groups/quit', method:"post",param:{groupId : groupMsg.groupId,openId:app.globalData.openId} ,scb(res){
        if ( res.data.status == 200) {
            system.stateMsg({title:"退群成功",icon:"success",time:1500});
            setTimeout(() => {
                wx.reLaunch({
                    url: `/pages/home/index`
                })
            }, 1500);
        }
    }})
  },
  requestGroupList(search,type,cont = 0,_groupId){
    var that = this;
    wx.request({
        url: `${app.globalData.httpHost}${search}`, //请求已加入群组或者未加入群组
        data: {
            openId: app.globalData.openId,
            keywords: that.data.inputVal,
            pageSize:0
        },
        header: {
            'content-type': 'application/json' // 默认值
        },
        success: function(res) {
            if(type == 'over'){
                let _newList , _rows = res.data.data.rows;
                that.setData({
                    overList:[],
                });
                if( cont == 1 ){//第一次进来.....
                    _newList = that.sortList( _rows );
                    wx.setStorage({
                        key:"_groupList",
                        data: _newList
                    })
                    that.setData({
                        list1: _newList
                    });
                }else if( cont == 2 ){//有人发消息过来
                    let promise = new Promise((resolve,reject)=>{
                        that.arrList1( _groupId , _rows , resolve );//排序未读消息....
                    })
                    promise.then(( _obj )=>{
                        that.data.list1.splice(_obj._i,1);
                        that.data.list1.unshift( _obj._me[0] );
                        that.setData({
                            list1:that.data.list1
                        })                        
                    })
                }
            }else if( type == 'no' ){
                that.setData({
                    overList:[]
                });
                that.setData({
                    overList:res.data.data.rows
                });
            }else if( type == 'history' ){
                that.setData({
                    overList:[],
                });
                that.setData({
                    historyList:res.data.data.rows
                });
            }
            // wx.stopPullDownRefresh();
            wx.hideNavigationBarLoading();
            wx.hideToast()
            that.setData({
                showPage:true
            })
        },
        fail(res){
            console.log( "获取列表失败",res.data.data )
            system.msgTip({title: '提示',content: res.data.message,scb(){},ccb(){}})
        }
    })
  },
  arrList1(_groupId,_rows ,resolve){
    let that = this;
    let _me = _rows.filter((item)=>{
        if( item.groupId == _groupId ){
            item.expand = true;
            return item;
        }else{
            item.children.filter((it)=>{
                if(it.groupId == _groupId){
                    item.expand = true;
                    return item;
                }
            })
        }
    })
    let _i = that.data.list1.findIndex((item)=>{
        return item.groupId == _me[0].groupId;
    })
    let _obj = {
        "_me":_me,
        "_i":_i
    }
    resolve( _obj )
  },
  toDetailPage(event){//跳转到群详情页面....
    var item = JSON.stringify( event.currentTarget.dataset.item );
    wx.navigateTo({
      url: `/pages/applyTheGroup/index?item=${item}`
    })
  },
  jionGroup(event){//跳转到入群表单填写页面...
    var item =  JSON.stringify(event.currentTarget.dataset.item);
    wx.navigateTo({
      url: `/pages/fillInApplycation/index?item=${item}`
    })
  },
  starShow () {
    this.setData({
      isShow: true,
    })
  },
  onPullDownRefresh() {
    // wx.showNavigationBarLoading() //在标题栏中显示加载
    // this.clearInput();
  },
    //   搜索.....
  inputTyping: function (e) {
    let that = this;
    this.setData({
        inputVal: e.detail.value
    });
    if( this.data.tabBar.actItem == 2 ){//历史。。。。
        this.requestGroupList( '/history/groups/tree','history')
    }else if( this.data.tabBar.actItem == 0 ){
        that.requestGroupList('/chat/groups/tree','over',1);
    }
  },
  clearInput: function () {
      this.setData({
          inputVal: "",
          showInput:true
      });
      if( this.data.tabBar.actItem == 2 ){
        this.requestGroupList( '/history/groups/tree','history')
      }else if( this.data.tabBar.actItem == 0 ){
        this.requestGroupList('/chat/groups/tree','over',1);
      }
  },
  changeHandler1 (res) {
      let index = res.currentTarget.dataset.index
      if(this.data.el !== index){
          if (this.data.el !== 'undefined') {
              this.data.list1[this.data.el].switcher = 'off'
          }
          this.data.list1[index].switcher = 'on'
          this.setData({
              list1:this.data.list1
          })
          this.data.el = index  
      }
  },
  getDefaultImg(){
      let that = this;
      system.http({
          url:'chat/attach/defaultGroupIcon',
          method:'get',
          scb(res){
              app.globalData._me.setData({
                  "defaultHeadImg":res.data.data.base64Str
              })
          },fcb(res){}
      })
  }
}
</script>

<style lang="less">
::content .arrow{
    top:30px;
}
.btn[type="primary"]{
    font-family:PingFang-SC-Regular;
    color:#1aad19 !important;
    border:1px solid #1aad19 !important;
    width:52px;
    height:27px;
    font-size:12px;
    text-align:left;
    line-height:27px;
}
.weui-loadmore__tips,.weui-loadmore__tips_in-line{
    background-color: rgba(0,0,0,0)!important;
    &::after{
        background-color: none;
    }
}
.angleIcon{
    position:absolute;
    z-index:10000;
    right:14rpx;
    top:14rpx;
    display:inline-block;
    width:auto;
    font-size:22rpx;
    min-width:45rpx;
    height:45rpx;
    border-radius:40%;
    background-color:#FF7360;
    color:white;
    line-height:45rpx;
    padding:2rpx;
}
.angleIcon2{
    right:-10rpx;
    top:2rpx;
}
.accorContent{
    // padding-right: 35px;
}

.listRow{
    border-bottom:none;
}
.article{
    font-family:PingFang-SC-Medium;
    color:rgba(102,102,102,1);
    font-size: 12px;
    width:100%;
    .mix-text-overflow();
}
.content{
  .mix-flex-center();
}
.starContent{
  padding:50px 50px 0px 50px;
}
.buttonContent{
  padding:50px;
}

.delete{
    width: 80px;
    text-align: center;
    line-height: 80px;
    font-size: 14px;
    color: #fff;
    background: #f22;
}
.top_tip{
    background-color: #fff;
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .text{
        .ui-text{
            font-size: 16px;
            color: #313338;
        }
        .ui-view{
            color: #9C9FA4;
            font-size: 12px;
            .mix-text-overflow();
        }
        .txt{
          font-size:12px;
          font-family:PingFang-SC-Medium;
          color:rgba(102,102,102,1);
          text-align: left;
          .mix-text-overflow();
        }
    }
}
  .sample_title{
    font-size: 14px;
    font-family:PingFang-SC-Medium;
    color:rgba(102,102,102,1);
    height: 50px;
    line-height: 50px;
    text-indent: 20px;
   
  }
  .fixed-view-content{
    z-index: 100;
    
  }
.msgTransCheckbox{
    position: absolute;
    right: 5px;
    top: 5px;
    z-index:9999;
    background-color:white;
    .checkbox{
      .wx-checkbox-input{
        background-color: rgba(0,0,0,0);
      }
      .wx-checkbox-input-checked::before{

      }
    }
  }
  .result_list{
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .left_icon2{
        background-color: #FF7360;
    }
    .left_icon3{
        background-color: #39CCC5;
    }
    .text{
        text{
            font-size: 16px;
            color: #313338;
        }
        view{
            color: #9C9FA4;
            font-size: 12px;
            .mix-text-overflow();
        }
    }
}
.listContainer{
    z-index:0;
    overflow:auto;
    width:100%;
}
.container{
    height: 100%;
    overflow: hidden;
}
page{
    overflow: hidden;
}
.actItem{
    .txt{
        color: #267AFC;
    }
}
.weui-search-bar__form{
    background-color: #F5F5F5;
}
</style>