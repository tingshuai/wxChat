<template>
  <view class="container">
    <ui-nav-bar slot="nav-bar" class="nav_bar" custom-style="{{ {backgroundColor:'#267AFC',color:'#fff'} }}">
        <ui-row height="40">
            <ui-col vertical-align="middle" align="center" width="60">
                <!-- <icon class="iconfont myWx-iconfontqianjin2" style="font-size:20px;"></icon> -->
            </ui-col>
            <ui-col vertical-align="middle" align="center">
                首页
            </ui-col>
            <ui-col vertical-align="middle" align="center" width="80">
            </ui-col>
        </ui-row>
    </ui-nav-bar>
    <view style="height:66px;width:100%;"></view>
    <!-- <ui-fixed-view top="0" left="0" right="0" style="position:relative;"> -->
      <view class="fixed-view-content">
          <view class="weui-search-bar">
              <view class="weui-search-bar__form">
                  <view class="weui-search-bar__box">
                      <icon class="weui-icon-search_in-box" type="search" size="14" wx:if="{{ !showInput }}"></icon>
                      <input type="text" class="weui-search-bar__input" placeholder="{{ showInput ? '' :  '搜索'}}" value="{{inputVal}}" focus="{{ inputShowed }}" bindinput="inputTyping" />
                      <view class="weui-icon-clear" wx:if="{{ inputVal.length > 0 }}" bindtap="clearInput">
                          <icon type="clear" size="14"></icon>
                      </view>
                  </view>
              </view>
              <view class="weui-search-bar__cancel-btn" bindtap="clearInput" wx:if="{{ inputVal.length > 0 }}">取消</view>
              <label class="weui-search-bar__label" bindtap="showInput" wx:if="{{ showInput }}" style="position:absolute;top:8px;background-color:rgba(0,0,0,0);">
                  <icon class="weui-icon-search" type="search" size="14" style="top:2px;position:relative;"></icon>
                  <view class="weui-search-bar__text">搜索</view>
              </label>
          </view>
      </view>
    <!-- </ui-fixed-view> -->
    <!-- 设置内容距离nav-bar高度占位 -->
    <!-- <view style="height:49px"></view> -->
    <view class="weui-loadmore weui-loadmore_line" wx:if="{{ (list1.length == 0 && tabBar.actItem == 0) || (overList.length == 0 && tabBar.actItem == 2) }}">
        <view class="weui-loadmore__tips weui-loadmore__tips_in-line" style="background-color:none;">暂无数据 可尝试下拉刷新</view>
    </view>
    <!-- //右滑菜单.........  -->
    <view class="listContainer" hidden="{{ overList.length != 0 }}">
        <view class="sample_title" style="background-color:white;border-bottom:1px solid #E5E5E5;">
           <text>{{ tabBar.actItem == 2 ? '历史群组' : '已加入' }}</text>
           <!-- !userMsgReq.canBuildGroup -->
           <!-- <icon wx:if="{{ userMsgReq.canBuildGroup }}" catchtap="addGroup" class="iconfont myWx-jia1" style="float:right;right:25rpx;position:relative;font-size:55rpx;"></icon> -->
        </view>
        <!-- <ui-accordion bindchange="slide" wx:for="{{ list1 }}" wx:key="{{ index }}" header-height="50" wx:if="{{ tabBar.actItem == 0 }}" show-arrow="{{ item.children.length != 0 }}">
            <view slot="header" class="accorHeader">
                <ui-row height="70" class="top_tip" border-bottom style="padding-right:35px;">
                  <ui-col width="80" align="center" vertical-align="middle" bindtap="toChat" data-item="{{ item }}">
                      <view class="left_icon left_icon1" style="">
                          <image src="{{ item.icon || defaultHeadImg }}"></image>
                          <text class="angleIcon" wx:if="{{ item.unreadCount != 0 }}">{{ item.unreadCount >= 100 ? '99+' : item.unreadCount }}</text>
                      </view>
                  </ui-col>
                  <ui-col class="text" align="left" vertical-align="middle" space="20" bindtap="toChat" data-item="{{ item }}">
                      <view style="width: 100%;">
                          <ui-row height="22">
                              <ui-col align="left" vertical-align="middle">
                                  <text>{{ item.groupName }}</text>
                              </ui-col>
                          </ui-row>
                          <view class="txt">{{ item.groupDesc ? item.groupDesc : "" }}</view>
                      </view>
                  </ui-col>
              </ui-row>
            </view>
            <view slot="content" class="accorContent" v-if="{{ item.children.length != 0 }}">
                <ui-row height="60" style="padding-right:0;" class="top_tip" border-bottom wx:for="{{item.children}}" wx:key="indexTow" wx:for-item="itemChidren" wx:for-index="indexTow">
                  <ui-col space-left="25" width="80" align="center" vertical-align="middle" bindtap="toChat" data-item="{{ itemChidren }}">
                      <view class="left_icon left_icon1" style="">
                          <image src="{{ itemChidren.icon || defaultHeadImg}}"></image>
                          <text class="angleIcon angleIcon2" wx:if="{{ itemChidren.unreadCount != 0 }}">{{ itemChidren.unreadCount >= 100 ? '99+' : itemChidren.unreadCount }}</text>
                      </view>
                  </ui-col>
                  <ui-col space-left="25" class="text" align="left" vertical-align="middle" space="20" bindtap="toChat" data-item="{{ itemChidren }}">
                      <view style="width: 100%;">
                          <ui-row height="24">
                              <ui-col align="left" vertical-align="middle">
                                  <text>{{ itemChidren.groupName }}</text>
                              </ui-col>
                          </ui-row>
                          <view class="txt">{{ itemChidren.groupDesc ? itemChidren.groupDesc : "" }}</view>
                      </view>
                  </ui-col>
                </ui-row>
            </view>
        </ui-accordion> -->
        <scroll-view scroll-y style="height:{{modelHeight}};border-top:1px solid #ddd;">
            <cc-grouplist wx:if="{{ tabBar.actItem == 0 }}" groupList="{{ list1 }}" bind:exData = "exData" tabBar="{{ tabBar }}"></cc-grouplist>
        </scroll-view>
        <!-- 历史群组 -->
        <ui-accordion bindchange="slide" wx:for="{{ historyList }}" wx:key="{{ index }}" header-height="50" wx:if="{{ tabBar.actItem == 2 }}" show-arrow="{{ item.children.length != 0 }}">
            <view slot="header" class="accorHeader">
                <ui-row height="70" class="top_tip" border-bottom style="padding-right:35px;">
                  <ui-col width="80" align="center" vertical-align="middle" bindtap="toChat" data-item="{{ item }}">
                      <view class="left_icon left_icon1" style="">
                          <image src="{{ item.icon || defaultHeadImg }}"></image>
                          <text class="angleIcon" wx:if="{{ item.unreadCount != 0 }}">{{ item.unreadCount >= 100 ? '99+' : item.unreadCount }}</text>
                      </view>
                  </ui-col>
                  <ui-col class="text" align="left" vertical-align="middle" space="20" bindtap="toChat" data-item="{{ item }}">
                      <view style="width: 100%;">
                          <ui-row height="22">
                              <ui-col align="left" vertical-align="middle">
                                  <text>{{ item.groupName }}</text>
                              </ui-col>
                          </ui-row>
                          <view class="txt">{{ item.groupDesc ? item.groupDesc : "" }}</view>
                      </view>
                  </ui-col>
              </ui-row>
            </view>
            <view slot="content" class="accorContent" v-if="{{ item.children.length != 0 }}">
                <ui-row height="60" style="padding-right:0;" class="top_tip" border-bottom wx:for="{{item.children}}" wx:key="indexTow" wx:for-item="itemChidren" wx:for-index="indexTow">
                  <ui-col space-left="25" width="80" align="center" vertical-align="middle" bindtap="toChat" data-item="{{ itemChidren }}">
                      <view class="left_icon left_icon1" style="">
                          <image src="{{ itemChidren.icon || defaultHeadImg}}"></image>
                          <text class="angleIcon angleIcon2" wx:if="{{ itemChidren.unreadCount != 0 }}">{{ itemChidren.unreadCount >= 100 ? '99+' : itemChidren.unreadCount }}</text>
                      </view>
                  </ui-col>
                  <ui-col space-left="25" class="text" align="left" vertical-align="middle" space="20" bindtap="toChat" data-item="{{ itemChidren }}">
                      <view style="width: 100%;">
                          <ui-row height="24">
                              <ui-col align="left" vertical-align="middle">
                                  <text>{{ itemChidren.groupName }}</text>
                              </ui-col>
                          </ui-row>
                          <view class="txt">{{ itemChidren.groupDesc ? itemChidren.groupDesc : "" }}</view>
                      </view>
                  </ui-col>
                </ui-row>
            </view>
        </ui-accordion>
    </view>

    <view class="top_tip result_list {{ overList.length != 0 ? 'listContainer' : '' }}">
      <view class="sample_title" wx:if="{{ overList.length != 0 }}" style="border-bottom:1px solid #E5E5E5;color:#cc0000"> {{ tabBar.actItem == 2 ? '历史记录' : '未加入' }}</view>
      <ui-row height="80" border-bottom border-top wx:for="{{ overList }}" wx:key="index" data-item="{{ item }}" bindtap="{{ tabBar.actItem == 2 ? 'toChat' : 'toDetailPage'}}" class="listRow">
          <ui-col space-right="0" vertical-align="middle">
              <ui-row>
                  <ui-col width="80" space="20" align="center" vertical-align="middle">
                    <view class="left_icon left_icon1">
                        <image src="{{ item.icon || defaultHeadImg }}"></image>
                    </view>
                  </ui-col>
                  <ui-col align="left">
                    <ui-row height="20">
                        <ui-col vertical-align="bottom" width="100%">
                            <text>{{item.groupName || "" }}</text>
                        </ui-col>
                    </ui-row>
                    <ui-row style="width:100%">
                        <ui-col align="left" width="100%">
                            <text class="article">{{ item.groupDesc || "" }}</text>
                        </ui-col>
                    </ui-row>
                  </ui-col>
              </ui-row>
          </ui-col>
          <ui-col class="text" align="right" vertical-align="middle" width="80" space-right="10" wx:if="{{ tabBar.actItem != 2 }}">
              <button type="primary" size="20" plain="true" class="btn" catchtap="jionGroup" data-item="{{ item }}" hover-class="touchui-hover"> 加入 </button>
          </ui-col>
      </ui-row>
    </view>
    <ui-fixed-view bottom="0" left="0" right="0">
      <ui-row border-top border-bottom height="50" style="background-color: #F7F7FA;">
        <ui-col vertical-align="middle" align="center">
            <view style="height:100%;padding-top:19rpx;" data-index="0" catchtap="toggleTab" class="{{ tabBar.actItem == 0 ? 'actItem' : '' }}">
                <image class="icon" mode="aspectFit" src="{{ tabBar.actItem == 0 ? '../../static/img/group@2x.png' : '../../static/img/groupNo@2x.png'}}" style="width:28px;height:20px;"></image>
                <text style="font-size:18rpx;" class="txt">群组</text>
            </view>
        </ui-col>
        <ui-col vertical-align="middle" align="center" wx:if="{{ userMsgReq.canBuildGroup }}">
            <view style="height:100%;padding-top:19rpx;" data-index="1" catchtap="toggleTab" class="{{ tabBar.actItem == 1 ? 'actItem' : '' }}">
                <image class="icon" mode="aspectFit" src="../../static/img/Group17@2x.png" style="width:36px;height:36px;"></image>
            </view>
        </ui-col>
        <ui-col vertical-align="middle" align="center">
            <view style="height:100%;padding-top:19rpx;" data-index="2" catchtap="toggleTab" class="{{ tabBar.actItem == 2 ? 'actItem' : '' }}">
                <image class="icon" mode="aspectFit" src="{{ tabBar.actItem == 2 ? '../../static/img/historyYes@2x.png' : '../../static/img/history@2x.png' }}" style="width:28px;height:20px;"></image>
                <text style="font-size:18rpx;" class="txt">历史</text>
            </view>
        </ui-col>
    </ui-row>
    </ui-fixed-view>
  </view>
</template>

<script>
var app = getApp();
import system from '../../static/utils/system'
export default {
  config: {
    navigationBarTitleText: '首页',
    backgroundColor: '#F4F4F4',
    navigationBarTextStyle: 'black',
    usingComponents: {
      'cc-grouplist': '../../packages/cc-grouplist/index'
    }
    // "enablePullDownRefresh": true
  },
  data: {
    isShow:false,
    inputShowed: false,
    inputVal: "",
    list1: [],
    historyList:[],
    overList:[],
    el: 'undefined',
    showInput:true,
    defaultHeadImg:'',
    userMsgReq:{},
    "tabBar": {
        actItem:0
    }
  },
  onLoad(option){
    var that = this;
    // 关闭socket
    // system.closeSocket( getApp() );
    // 连接sockey服务
    system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
    wx.getStorage({
        key: 'openId',
        success: function(res) {
            app.globalData.openId = res.data;
            let promise = new Promise((resolve,reject)=>{
                system.connectSocket(app,resolve)//连接socket.......
            })
            promise.then((obj)=>{
                that.requestGroupList( '/chat/groups/tree','over',1);
                //连接状态
                app.globalData.socketTask.onOpen(function(res) { app.globalData.socketTask.openType = true ;console.log( 'socket open');})
                //监听WebSocket错误。
                app.globalData.socketTask.onError(function(res){
                    system.msgTip({title: '提示',content: "会话连接失败。请重新连接。",scb(){},ccb(){}})
                    app.globalData.socketTask.openType = false;
                })                   
                that.homeSocket();//监听socket更新群列表...
            })
            console.log( "SocketTask.readState" , app.globalData.socketTask )
        },
        fail(res){
            wx.redirectTo({
              url: '/pages/login/index'
            })
        }
    })
    wx.getStorage({
        key:'userMsgReq',
        success(res){
            app.globalData.userMsgReq = res.data;
            that.setData({
                "userMsgReq":res.data
            })
            console.log( "userMsgReq.canBuildGroup" , that.data.userMsgReq.canBuildGroup )
        }
    })
    this.getDefaultImg();
  },
  onShow(e){
      this.requestGroupList( '/chat/groups/tree','over',1);
  },
  exData(_data){
      console.log( _data );
  },
  toggleTab(e){
    let _item = e.currentTarget.dataset;
    let that = this;
    if( _item.index == 0 ){//获取群组列表....
        this.setData({
            ['tabBar.actItem']:_item.index
        })
        system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
        that.setData({
            list1:that.data.list1
        })
        wx.hideToast();
    }else if( _item.index == 1 ){//添加群组
      wx.navigateTo({
          url:'/pages/newGroup/index?edit=false&addMenu=false',success(res){},fail(res){}
      })
    }else if( _item.index == 2 ){//历史群组
        this.setData({
            ['tabBar.actItem']:_item.index
        })
        system.stateMsg({ title:"加载中...",content:"",icon:"loading",time:8000});
        this.requestGroupList( '/history/groups/tree','history')
    }
  },
  addGroup(e){
      wx.navigateTo({
          url:'/pages/newGroup/index?edit=false&addMenu=false',success(res){},fail(res){}
      })
  },
  showInput(){
      var that = this;
      this.setData({
          'showInput':!that.data.showInput,
          'inputShowed':true
      })
  },
  sortList( resData ){
    let that = this;
    let head_message = resData.filter((item)=>{
        item.expand = true;
        if( item.unreadCount > 0 ){
            return item;
        }else{
            let _list =  item.children.filter( (_item)=>{
                return _item.unreadCount > 0;
            })
            if( _list.length > 0 ){
                return item;
            }
        }
    })
    let tail_message = resData.filter((item)=>{
        let _list = item.children.filter( (_item)=>{
            return _item.unreadCount > 0
        })
        if( item.unreadCount == 0 && _list.length == 0 ){
            return item;
        }
    })
    return head_message.concat( tail_message );//将有消息的群放在前面
  },
  homeSocket(){
      let that = this;
      app.globalData.socketTask.onMessage((res)=>{
        var _data = JSON.parse( res.data );
        // if( ( _data.cmd == 0 && _data.fromUser != app.globalData.userMsgReq.openId ) || _data.cmd == 3 || _data.cmd == 2 ){//cmd == 2用户发送的消息..cmd == 2 系统推送消息 ，cmd == 3 消息回执......
        //     debugger;
        //     that.requestGroupList( '/chat/groups/tree','over' );
        // }
        switch (_data.cmd ) {
            case 0://有人发消息过来
                that.requestGroupList( '/chat/groups/tree','over',2,_data.groupId);
                break;
            case 2:
                if( _data.msgType == 11 ){//有群解散.....
                    let promise = new Promise((resolve,reject)=>{
                        that.arrList1( _data.groupId , that.data.list1 ,resolve );
                    })
                    promise.then((_obj)=>{
                        that.data.list1.splice(_obj._i,1);
                        that.setData({
                            "list1":that.data.list1
                        })
                    })
                }
                break;
            default:
                break;
        }
      })
  },
  exitGroup(e){
    let that = this;
    let groupMsg = e.currentTarget.dataset.item;
    system.http({ url:'chat/groups/quit', method:"post",param:{groupId : groupMsg.groupId,openId:app.globalData.openId} ,scb(res){
        if ( res.data.status == 200) {
            system.stateMsg({title:"退群成功",icon:"success",time:1500});
            setTimeout(() => {
                wx.reLaunch({
                    url: `/pages/home/index`
                })
            }, 1500);
        }
    }})
  },
  requestGroupList(search,type,cont = 0,_groupId){
    var that = this;
    wx.request({
        url: `${app.globalData.httpHost}${search}`, //请求已加入群组或者未加入群组
        data: {
            openId: app.globalData.openId,
            keywords: that.data.inputVal,
            pageSize:0
        },
        header: {
            'content-type': 'application/json' // 默认值
        },
        success: function(res) {
            if(type == 'over'){
                let _newList ,_rows = res.data.data.rows;;
                that.setData({
                    overList:[],
                });
                if( cont == 1 ){//第一次进来.....
                    _newList = that.sortList( _rows );
                    wx.setStorage({
                        key:"_groupList",
                        data: _newList
                    })
                    that.setData({
                        list1: _newList
                    });
                }else if( cont == 2 ){//有人发消息过来
                    let promise = new Promise((resolve,reject)=>{
                        that.arrList1( _groupId , _rows ,resolve );//排序未读消息....
                    })
                    promise.then(( _obj )=>{
                        that.data.list1.splice(_obj._i,1);
                        that.data.list1.unshift( _obj._me[0] );
                        that.setData({
                            list1:that.data.list1
                        })                        
                    })
                }
            }else if( type == 'no' ){
                that.setData({
                    overList:[]
                });
                that.setData({
                    overList:res.data.data.rows
                });
            }else if( type == 'history' ){
                that.setData({
                    overList:[],
                });
                that.setData({
                    historyList:res.data.data.rows
                });
            }
            // wx.stopPullDownRefresh();
            wx.hideNavigationBarLoading();
            wx.hideToast()
        },
        fail(res){
            console.log( "获取列表失败",res.data.data )
            system.msgTip({title: '提示',content: res.data.message,scb(){},ccb(){}})
        }
    })
  },
  arrList1(_groupId,_rows ,resolve){
    let that = this;
    let _me = _rows.filter((item)=>{
        if( item.groupId == _groupId ){
            item.expand = true;
            return item;
        }else{
            item.children.filter((it)=>{
                if(it.groupId == _groupId){
                    item.expand = true;
                    return item;
                }
            })
        }
    })
    let _i = that.data.list1.findIndex((item)=>{
        return item.groupId == _me[0].groupId;
    })
    let _obj = {
        "_me":_me,
        "_i":_i
    }
    resolve( _obj )
  },
  toDetailPage(event){//跳转到群详情页面....
    var item = JSON.stringify( event.currentTarget.dataset.item );
    wx.navigateTo({
      url: `/pages/applyTheGroup/index?item=${item}`
    })
  },
  jionGroup(event){//跳转到入群表单填写页面...
    var item =  JSON.stringify(event.currentTarget.dataset.item);
    wx.navigateTo({
      url: `/pages/fillInApplycation/index?item=${item}`
    })
  },
  starShow () {
    this.setData({
      isShow: true,
    })
  },
  onPullDownRefresh() {
    // wx.showNavigationBarLoading() //在标题栏中显示加载
    // this.clearInput();
  },
    //   搜索.....
  inputTyping: function (e) {
    let that = this;
    this.setData({
        inputVal: e.detail.value
    });
    if( this.data.tabBar.actItem == 2 ){//历史。。。。
      this.requestGroupList( '/history/groups/tree','history')
    }else if( this.data.tabBar.actItem == 0 ){
        that.requestGroupList('/chat/groups/tree','over',1);
        // if( that.data.inputVal == "" ){
        //   that.requestGroupList('/chat/groups/tree','over');
        // }else{
        //   this.requestGroupList('/chat/groups/req',"no");
        // }
    }
  },
  clearInput: function () {
      this.setData({
          inputVal: "",
          showInput:true
      });
      if( this.data.tabBar.actItem == 2 ){
        this.requestGroupList( '/history/groups/tree','history')
      }else if( this.data.tabBar.actItem == 0 ){
        this.requestGroupList('/chat/groups/tree',"over");
      }
      this.setData({
          overList:[]
      })
    //   this.requestGroupList('/chat/groups/req',"no");
  },
  changeHandler1 (res) {
      let index = res.currentTarget.dataset.index
      if(this.data.el !== index){
          if (this.data.el !== 'undefined') {
              this.data.list1[this.data.el].switcher = 'off'
          }
          this.data.list1[index].switcher = 'on'
          this.setData({
              list1:this.data.list1
          })
          this.data.el = index  
      }
  },
  getDefaultImg(){
      let that = this;
      system.http({
          url:'chat/attach/defaultGroupIcon',
          method:'get',
          scb(res){
              that.setData({
                  "defaultHeadImg":res.data.data.base64Str
              })
          },fcb(res){}
      })
  }
}
</script>

<style lang="less">
::content .arrow{
    top:30px;
}
.btn[type="primary"]{
    font-family:PingFang-SC-Regular;
    color:#1aad19 !important;
    border:1px solid #1aad19 !important;
    width:52px;
    height:27px;
    font-size:12px;
    text-align:left;
    line-height:27px;
}
.weui-loadmore__tips,.weui-loadmore__tips_in-line{
    background-color: rgba(0,0,0,0)!important;
    &::after{
        background-color: none;
    }
}
.angleIcon{
    position:absolute;
    z-index:10000;
    right:14rpx;
    top:14rpx;
    display:inline-block;
    width:auto;
    font-size:22rpx;
    min-width:45rpx;
    height:45rpx;
    border-radius:40%;
    background-color:#FF7360;
    color:white;
    line-height:45rpx;
    padding:2rpx;
}
.angleIcon2{
    right:-10rpx;
    top:2rpx;
}
.accorContent{
    // padding-right: 35px;
}

.listRow{
    border-bottom:none;
}
.article{
    font-family:PingFang-SC-Medium;
    color:rgba(102,102,102,1);
    font-size: 12px;
    width:100%;
    .mix-text-overflow();
}
.content{
  .mix-flex-center();
}
.starContent{
  padding:50px 50px 0px 50px;
}
.buttonContent{
  padding:50px;
}

.delete{
    width: 80px;
    text-align: center;
    line-height: 80px;
    font-size: 14px;
    color: #fff;
    background: #f22;
}
.top_tip{
    background-color: #fff;
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .text{
        .ui-text{
            font-size: 16px;
            color: #313338;
        }
        .ui-view{
            color: #9C9FA4;
            font-size: 12px;
            .mix-text-overflow();
        }
        .txt{
          font-size:12px;
          font-family:PingFang-SC-Medium;
          color:rgba(102,102,102,1);
          text-align: left;
          .mix-text-overflow();
        }
    }
}
  .sample_title{
    font-size: 14px;
    font-family:PingFang-SC-Medium;
    color:rgba(102,102,102,1);
    height: 50px;
    line-height: 50px;
    text-indent: 20px;
   
  }
  .fixed-view-content{
    z-index: 100;
    
  }
.msgTransCheckbox{
    position: absolute;
    right: 5px;
    top: 5px;
    z-index:9999;
    background-color:white;
    .checkbox{
      .wx-checkbox-input{
        background-color: rgba(0,0,0,0);
      }
      .wx-checkbox-input-checked::before{

      }
    }
  }
  .result_list{
    .left_icon{
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color:#FCB300; 
        text-align: center;
        line-height: 50px;
    }
    .left_icon2{
        background-color: #FF7360;
    }
    .left_icon3{
        background-color: #39CCC5;
    }
    .text{
        text{
            font-size: 16px;
            color: #313338;
        }
        view{
            color: #9C9FA4;
            font-size: 12px;
            .mix-text-overflow();
        }
    }
}
.listContainer{
    z-index:0;
    overflow:auto;
    position:absolute;
    width:100%;
    top:113px;
    bottom:50px;
}
.container{
    height: 100%;
    overflow: hidden;
}
page{
    overflow: hidden;
}
.actItem{
    .txt{
        color: #267AFC;
    }
}
</style>