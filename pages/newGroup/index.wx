<template id="page">
  <view class="weui-toptips weui-toptips_warn" wx:if="{{ tip.showTopTips }}">{{ tip.tipMsg }}</view>
  <view style="padding-bottom:200rpx">
    <form catchsubmit="submitGroupData" catchreset="formCancel">

      <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_input">
              <view class="weui-cell__hd">
                  <view class="weui-label label0">群名称<text class="xingxing {{  formData.groupName == '' ? 'warnXing' : 'defaultXing' }}">★</text></view>
              </view>
              <view class="weui-cell__bd">
                  <input class="weui-input" value="{{ formData.groupName }}" bindinput="inputName" name="groupName" placeholder="请输入群名称" placeholder-class="placeholderClass"/>
              </view>
          </view>
          <view class="weui-cell weui-cell_select" wx:if="{{ edit == 'true' ? false : true}}">
              <view class="weui-cell__hd weui-cell__hd_in-select-after">
                  <view class="weui-label label0">父群组名称</view>
              </view>
              <view class="weui-cell__bd">
                  <picker bindchange="bindGroupChange" value="{{formData.parentGroupIndex}}" range="{{formData.parentGroupLst}}">
                      <view class="weui-select weui-select_in-select-after">{{formData.parentGroupValue}}</view>
                  </picker>
              </view>
          </view>
          <!-- <view class="weui-cell weui-cell_select">
              <view class="weui-cell__hd weui-cell__hd_in-select-after">
                  <view class="weui-label label0">群主</view>
              </view>
              <view class="weui-cell__bd">
                  <picker bindchange="bindUpChange" value="{{ submitFormData.selUserValue }}" range="{{ submitFormData.openIds }}">
                      <view class="weui-select weui-select_in-select-after">{{ formData.selUserLebal }}</view>
                  </picker>
              </view>
          </view> -->
      </view>

      <view class="weui-cells__title">有效日期</view>
      <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_select">
              <view class="weui-cell__hd weui-cell__hd_in-select-after">
                  <view class="weui-label label0">日期<text class="xingxing {{  formData.date == '' ? 'warnXing' : 'defaultXing' }}">★</text></view>
              </view>
              <view class="weui-cell__bd">
                  <picker mode="date" name="deadline" value="{{ formData.date }}" start="{{ formData.startTime }}" bindchange="bindDateChange">
                    <view class="weui-input" style="text-align:right;padding-right:33rpx;">{{ formData.deadline }}</view>
                  </picker>
              </view>
          </view>
      </view>

      <view class="weui-cells__title">群描述</view>
      <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell">
              <view class="weui-cell__bd">
                  <textarea placeholder-class="placeholderClass" value="{{ formData.groupDesc }}" class="weui-textarea fontValue" name="groupDesc" placeholder="请输入群描述" style="height: 3.3em" />
              </view>
          </view>
      </view>

      <view class="weui-cells__title" id="groupUser">群成员列表</view>
      <view class="weui-search-bar__form" style="height:90rpx;line-height:90rpx;border-bottom:0px;">
          <view class="weui-search-bar__box">
              <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
              <input style="height:90rpx;" adjust-position="false" bindfocus="inputFocus" bindblur="inputBlur" type="text" class="weui-search-bar__input" placeholder="搜索群成员" value="{{formData.inputVal}}" bindinput="inputTyping" />
              <view class="weui-icon-clear" wx:if="{{inputVal.length > 0}}" bindtap="clearInput">
                  <icon type="clear" size="14"></icon>
              </view>
          </view>
      </view>
      <view class="weui-cells weui-cells_after-title">
          <checkbox-group bindchange="checkboxChange" name="{{ formData.selUser }}">
              <view class="weui-cell" wx:for="{{ formData.userList }}" wx:key="index">
                 <image bindtap="tabHead" data-item="{{ item }}" data-index="{{ index }}" class="headImg" mode="aspectFit" src="{{ item.headImgUrl }}"></image>
                 <icon type="success" size="15" class="figure" wx:if="{{ item.isAddMember }}"></icon>
                 <view class="weui-cell__bd userNickName">{{ item.username || item.nickname }}</view>
                 <checkbox class="weui-check nickCheckbox" value="{{ item.openId }}" checked="{{ item.checked }}"/>
              </view>
          </checkbox-group>
      </view>
      
      <ui-fixed-view bottom="0" left="0" right="0">
        <view class="fixed-view-content" style="padding:0 35rpx;">
          <view class="btn-area">
            <button type="primary" formType="submit">提交</button>
            <button formType="reset">取消</button>
          </view>
        </view>
      </ui-fixed-view>
    </form>
  </view>
</template>

<script>
import system from '../../static/utils/system'
var app = getApp();
export default {
  config: {
    navigationBarTitleText: '新增群组'
  },
  data: {
    tip:{
      showTopTips:false,
      tipMsg:"",
      enable:true
    },
    edit:"",//是否是编辑进来的。。。。
    groupMsg:{},
    formData:{
      date:'',
      groupName:"",
      groupDesc:"",//群描述的值..
      startTime:'',//日期讯择期的开始时间。。。。
      originGroupList:[], //获取到的原群列表....
      originUserList:[],//获取到的原用户列表.....
      parentGroupLst:[],  //父群组列表
      parentGroupIndex:0, //父群组下标....
      parentGroupValue:"",//选中的父群组的值
      userList:[],//用户列表
      selUser:[], //选中的群成员....
      deadline:"",//截止日期。。。
      inputVal:'',//搜索框的值
      keywords:'',//搜索群成员的关键字...
      selUserLebal:"",//选中的群主的lebal
      userListAll:[]//所有群成员
    },
    submitFormData:{
      openIds:[], //选中的群成员ID
      parentId:'',//父群组id
      managerId:app.globalData.openId,//群主id
      addMemberOpenIds:[],//可拉人的成员
    },
    formRuler:{
      groupName:{
        require:true
      },
      deadline:{
        require:true
      }
    }
  },
  onLoad(option){
    let time = new Date();
    let that = this;
    let startTime = `${time.getFullYear()}-${time.getUTCMonth() + 1}-${time.getUTCDate()}`
    let promise = new Promise((resolve,reject)=>{
      that.reqGroupList();//请求群组列表...
      that.reqUserList( "", resolve );//请求用户列表.....
    })
    this.setData({
      ['formData.startTime']:startTime,
      ['submitFormData.managerId']:app.globalData.openId,
    })
    promise.then((that)=>{
      if(option.edit == "true"){
        let msg =JSON.parse(option.groupMsg)
        that.setData({
          "groupMsg":msg,
          ['formData.groupName']:msg.groupName,
          ['formData.deadline']:msg.deadline,
          ['formData.date']:msg.deadline,
          ['formData.groupDesc']:msg.groupDesc,
          "edit":option.edit,
          ["formRuler.deadline.require"]:false,
          ["formRuler.groupName.require"]:false
        });
        wx.setNavigationBarTitle({//设置页面标题....
          title: "编辑群组",
        })
        let openIds = [];
        that.data.groupMsg.groupUsers.forEach((value,ii,array)=>{
          that.data.formData.userList.filter((val,i,arr)=>{
            if(val.openId == value.openId){
              val.checked = true;
              openIds.push( value.openId )
              if(value.authAddMember){
                val.isAddMember = true;
              }
            }
          })
        })
        that.setData({
          ["formData.userList"]:that.data.formData.userList,
          ['submitFormData.openIds']:openIds
        })
      }
    })
  },
  inputFocus(e){//搜索成员聚焦时
    // var query = wx.createSelectorQuery();
    // query.select('#groupUser').boundingClientRect((res)=>{
    // }).exec();
    // setTimeout(() => {
    //   wx.pageScrollTo({
    //     scrollTop: 290,
    //     duration: 300
    //   })
    // }, 100);
  },
  tabHead(e){
    let that = this;
    let item = e.currentTarget.dataset;
    that.data.formData.userList[item.index].checked = true;
    that.data.formData.userList[item.index].isAddMember = !that.data.formData.userList[item.index].isAddMember;
    this.setData({
      ['formData.userList']:that.data.formData.userList
    })
  },
  inputBlur(e){//搜索输入框失焦失
    // debugger;
  },
  bindDateChange(e){
    this.setData({
      ['formData.deadline']:e.detail.value,
      ["formRuler.deadline.require"]:false
    })
  },
  inputTyping(e){
    this.setData({
      ['formData.keywords']:e.detail.value
    })
    this.reqUserList( e.detail.value );
  },
  formCancel (e) {
    let that = this;
    if( this.data.edit == "true" ){
      wx.navigateBack({
        delta: 1
      })
    }else{
      wx.navigateTo({
        url: '/pages/home/index'
      })
    }
  },
  checkboxChange(e){
    let list=[];
    let that = this;
    that.data.formData.userList.filter((item)=>{
      item.checked = false;
    })
    e.detail.value.forEach((val,i,arr)=>{
      list = this.data.formData.userList.filter((item)=>{
        if(item.openId == val){
          return item;
        }
      })
      that.data.formData.userList.forEach((value,ii,array)=>{
          if( val == value.openId ){
            array[ii].checked = true;
          }
      })
    })
    that.data.formData.userList.filter((item)=>{
      item.checked == false ? item.isAddMember = false : null;
    })
    this.setData({
      ['submitFormData.openIds']:e.detail.value,
      ['formData.originUserList']:list,
      ['formData.userList']:that.data.formData.userList
    })
  },
  bindGroupChange(e){
    let that = this;
    if(e.detail.value == 0){
      that.setData({
        ['formData.userList']:that.data.formData.userListAll
      })
    }else{
      this.setData({
        ['formData.parentGroupValue']:that.data.formData.parentGroupLst[e.detail.value],
        ['submitFormData.parentId']:that.data.formData.originGroupList[e.detail.value].groupId,
        ['formData.userList']:that.data.formData.originGroupList[e.detail.value].groupUsers
      })
    }
  },
  bindUpChange(e){//选择群主.....
    let that = this;
    let  selUserLebal = that.data.formData.originUserList;
    let  managerId = that.data.submitFormData.openIds
    this.setData({
      ['submitFormData.managerId']:managerId[e.detail.value],
      ['formData.selUserLebal']:selUserLebal[e.detail.value].username || selUserLebal[e.detail.value].nickname
    })
  },
  reqGroupList(){
    let that = this;
    system.http({
      url:'chat/groups/tree',
      method:'get',
      param:{
        "openId":app.globalData.openId,
        "pageSize":0
      },
      scb(res){
        that.data.formData.parentGroupLst.push("不填");
        res.data.data.rows.forEach((val,i,arr)=>{
          that.data.formData.parentGroupLst.push( val.groupName )
        })
        that.setData({
          ['formData.originGroupList']:res.data.data.rows,
          ['formData.parentGroupLst']:that.data.formData.parentGroupLst
        })
      },
      fcb(res){system.stateMsg({title:"获取群列表失败！",time:1000})}
    })
  },
  inputName(e){
    if(e.detail.value != ''){
      this.setData({
        ["formRuler.groupName.require"]:false
      })
    }else{
      this.setData({
        ["formRuler.groupName.require"]:true
      })
    }
  },
  submitGroupData(e){
    let that = this;
    let promise = new Promise((resolve,reject)=>{
      that.data.formRuler.deadline.require
      that.data.formRuler.groupName.require
      if( !that.data.formRuler.groupName.require && !that.data.formRuler.deadline.require ){
        resolve();
      }else{
        that.setData({
          ["tip.showTopTips"]:true,
          ["tip.enable"]:true,
          ["tip.tipMsg"]:"请补充完带星号内容"
        })
        setTimeout(function(){
          that.setData({
            ["tip.showTopTips"]:false
          })
        },1000)
      }
    })
    promise.then(()=>{
      that.data.formData.userList.forEach((val,i,arr)=>{
        val.isAddMember == true ? that.data.submitFormData.addMemberOpenIds.push(val.openId) : null;
      })
      this.setData({
        ['submitFormData.addMemberOpenIds']:that.data.submitFormData.addMemberOpenIds
      })
      let formData = Object.assign({},e.detail.value,that.data.submitFormData);
      if(that.data.edit == 'true'){
        formData.groupId = that.data.groupMsg.groupId;
      }
      system.http({
        url: that.data.edit == 'true' ? `chat/groups/${that.data.groupMsg.groupId}` : 'chat/groups',//新增&修改....
        method:'post',
        header:{'content-type': 'application/x-www-form-urlencoded'},
        param: formData,
        scb(res){
          let tip = that.data.edit == 'true' ? "修改群组成功" : '新增群组成功';
          if(res.data.status == 200){
            system.stateMsg({title: tip,icon:"success",time:1000});
            setTimeout(function(){
              wx.redirectTo({
                url: '/pages/home/index'
              })
            },1000)
          }else{
            system.stateMsg({title:res.data.message,time:1000})
          }
        },
        fcb(res){
          system.stateMsg({title:that.data.edit == 'true' ? "修改群组成功" : '新增群组成功',time:1000})
        }
      })
    })
  },
  reqUserList(keywords="",resolve){///请求用户列表.
    let that = this;
    system.http({
      url:'chat/users',
      method:'get',
      param:{
        "keywords":keywords,
        "pageSize":0,
        "status":1
      },
      scb(res){
        if(res.data.status == 200){
          res.data.data.rows.forEach((val,i,arr)=>{
            arr[i].checked = false;
            arr[i].isAddMember = false;
          })
          that.setData({
            ['formData.userList']:res.data.data.rows,
            ['formData.userListAll']:res.data.data.rows
          })
          resolve(that);
        }else{
          system.stateMsg({title:res.data.data.message,time:1000})
        }
      },
      fcb(res){
        system.stateMsg({title:"获取成员失败！",time:1000})
      }
    })
  }
}
</script>

<style lang="less">
.warnXing{
  color: red;
}
.defaultXing{
  color: black;
}
  .weui-check{
    position: relative;
    left: 0;
  }
  .placeholderClass{
    font-size: 30rpx;
  }
  .headImg{
    width: 65rpx;
    height: 65rpx;
    margin-right: 20rpx;
  }
  .userNickName{
    font-size: 30rpx;
  }
  .nickCheckbox{
    left: 37rpx;
  }
  .label0{
    font-size: 30rpx;
  }
  .fontValue{
    font-size:35rpx;
    line-height:38rpx;
    padding-top:13rpx;
  }
  .figure{
    position: absolute;
    font-size: 22rpx;
    background-color: antiquewhite;
    top:10rpx;
    left: 10rpx;;
  }
</style>
